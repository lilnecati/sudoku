/Users/necati/Desktop/Sudoku/Sudoku/ContentView.swift:                                Image(systemName: "chevron.forward")
/Users/necati/Desktop/Sudoku/Sudoku/ContentView.swift:                                Image(systemName: "chevron.forward")
/Users/necati/Desktop/Sudoku/Sudoku/ContentView.swift:                                Image(systemName: "chevron.forward")
/Users/necati/Desktop/Sudoku/Sudoku/ContentView.swift:                                Image(systemName: "chevron.forward")
/Users/necati/Desktop/Sudoku/Sudoku/ContentView.swift:                        .mask(Text("SUDOKU")
/Users/necati/Desktop/Sudoku/Sudoku/ContentView.swift:                    Image(systemName: "chevron.right")
/Users/necati/Desktop/Sudoku/Sudoku/ContentView.swift:                    Image(systemName: "die.face.5")
/Users/necati/Desktop/Sudoku/Sudoku/ContentView.swift:                    Image(systemName: "exclamationmark.triangle.fill")
/Users/necati/Desktop/Sudoku/Sudoku/ContentView.swift:                    Image(systemName: "play.circle.fill")
/Users/necati/Desktop/Sudoku/Sudoku/ContentView.swift:                    Image(systemName: "questionmark.circle.fill")
/Users/necati/Desktop/Sudoku/Sudoku/ContentView.swift:                    name: Notification.Name("ContentViewUpdateAfterTimeout"),
/Users/necati/Desktop/Sudoku/Sudoku/ContentView.swift:                    print("Kaydedilmi≈ü oyun bulunamadƒ±, yeni oyun ba≈ülatƒ±lƒ±yor")
/Users/necati/Desktop/Sudoku/Sudoku/ContentView.swift:                    print("Son kaydedilmi≈ü oyun y√ºkleniyor... ID: \(lastGame.value(forKey: "id") ?? "ID yok")")
/Users/necati/Desktop/Sudoku/Sudoku/ContentView.swift:                    Text.localizedSafe("Devam Et")
/Users/necati/Desktop/Sudoku/Sudoku/ContentView.swift:                    Text.localizedSafe("Kaldƒ±ƒüƒ±n yerden devam et")
/Users/necati/Desktop/Sudoku/Sudoku/ContentView.swift:                    Text.localizedSafe("Nasƒ±l Oynanƒ±r?")
/Users/necati/Desktop/Sudoku/Sudoku/ContentView.swift:                    Text.localizedSafe("Yeni Oyun")
/Users/necati/Desktop/Sudoku/Sudoku/ContentView.swift:                    Text("SUDOKU")
/Users/necati/Desktop/Sudoku/Sudoku/ContentView.swift:                    Text(LocalizationManager.shared.localizedString(for: "Oyun y√ºkleniyor..."))
/Users/necati/Desktop/Sudoku/Sudoku/ContentView.swift:                Image(systemName: "chevron.forward")
/Users/necati/Desktop/Sudoku/Sudoku/ContentView.swift:                print("üîä Ana sayfaya y√∂nlendiriliyor (zaman a≈üƒ±mƒ± sonrasƒ±)")
/Users/necati/Desktop/Sudoku/Sudoku/ContentView.swift:                print("Y√ºkleme hatasƒ±: \(error)")
/Users/necati/Desktop/Sudoku/Sudoku/ContentView.swift:                ProgressView(LocalizationManager.shared.localizedString(for: "Y√ºkleniyor..."))
/Users/necati/Desktop/Sudoku/Sudoku/ContentView.swift:            forName: Notification.Name("ContentViewUpdateAfterTimeout"),
/Users/necati/Desktop/Sudoku/Sudoku/ContentView.swift:            forName: Notification.Name("ShowMainMenuAfterTimeout"),
/Users/necati/Desktop/Sudoku/Sudoku/ContentView.swift:            name: Notification.Name("ShowMainMenuAfterTimeout"),
/Users/necati/Desktop/Sudoku/Sudoku/ContentView.swift:            print("üì¢ Dil deƒüi≈üikliƒüi algƒ±landƒ± - ContentView yenileniyor")
/Users/necati/Desktop/Sudoku/Sudoku/ContentView.swift:            return bundle?.localizedString(forKey: "Ana Sayfa", value: "Ana Sayfa", table: "Localizable") ?? "Ana Sayfa"
/Users/necati/Desktop/Sudoku/Sudoku/ContentView.swift:            return bundle?.localizedString(forKey: "Ayarlar", value: "Ayarlar", table: "Localizable") ?? "Ayarlar"
/Users/necati/Desktop/Sudoku/Sudoku/ContentView.swift:            return bundle?.localizedString(forKey: "Kayƒ±tlƒ± Oyunlar", value: "Kayƒ±tlƒ± Oyunlar", table: "Localizable") ?? "Kayƒ±tlƒ± Oyunlar"
/Users/necati/Desktop/Sudoku/Sudoku/ContentView.swift:            return bundle?.localizedString(forKey: "Skor Tablosu", value: "Skor Tablosu", table: "Localizable") ?? "Skor Tablosu"
/Users/necati/Desktop/Sudoku/Sudoku/ContentView.swift:            Text("SUDOKU")
/Users/necati/Desktop/Sudoku/Sudoku/ContentView.swift:        .onReceive(NotificationCenter.default.publisher(for: Notification.Name("LanguageChanged"))) { _ in
/Users/necati/Desktop/Sudoku/Sudoku/ContentView.swift:        case .home: return "house.fill"
/Users/necati/Desktop/Sudoku/Sudoku/ContentView.swift:        case .savedGames: return "square.stack.fill"
/Users/necati/Desktop/Sudoku/Sudoku/ContentView.swift:        case .scoreboard: return "trophy.fill"
/Users/necati/Desktop/Sudoku/Sudoku/ContentView.swift:        case .settings: return "gearshape.fill"
/Users/necati/Desktop/Sudoku/Sudoku/ContentView.swift:        default: return "questionmark"
/Users/necati/Desktop/Sudoku/Sudoku/ContentView.swift:        let languageCode = UserDefaults.standard.string(forKey: "app_language") ?? "tr"
/Users/necati/Desktop/Sudoku/Sudoku/ContentView.swift:        let path = Bundle.main.path(forResource: languageCode, ofType: "lproj")
/Users/necati/Desktop/Sudoku/Sudoku/ContentView.swift:    @AppStorage("selectedDifficulty") private var selectedDifficulty = 0
/Users/necati/Desktop/Sudoku/Sudoku/CoreDataModels/NSManagedObjectExtensions.swift:        return getData(key: "boardState")
/Users/necati/Desktop/Sudoku/Sudoku/CoreDataModels/NSManagedObjectExtensions.swift:        return getDate(key: "date")
/Users/necati/Desktop/Sudoku/Sudoku/CoreDataModels/NSManagedObjectExtensions.swift:        return getDate(key: "dateCreated")
/Users/necati/Desktop/Sudoku/Sudoku/CoreDataModels/NSManagedObjectExtensions.swift:        return getDate(key: "registrationDate")
/Users/necati/Desktop/Sudoku/Sudoku/CoreDataModels/NSManagedObjectExtensions.swift:        return getDouble(key: "elapsedTime")
/Users/necati/Desktop/Sudoku/Sudoku/CoreDataModels/NSManagedObjectExtensions.swift:        return getDouble(key: "elapsedTime")
/Users/necati/Desktop/Sudoku/Sudoku/CoreDataModels/NSManagedObjectExtensions.swift:        return getString(key: "difficulty", defaultValue: "Kolay")
/Users/necati/Desktop/Sudoku/Sudoku/CoreDataModels/NSManagedObjectExtensions.swift:        return getString(key: "difficulty", defaultValue: "Kolay")
/Users/necati/Desktop/Sudoku/Sudoku/CoreDataModels/NSManagedObjectExtensions.swift:        return getString(key: "email", defaultValue: "")
/Users/necati/Desktop/Sudoku/Sudoku/CoreDataModels/NSManagedObjectExtensions.swift:        return getString(key: "name", defaultValue: "ƒ∞simsiz")
/Users/necati/Desktop/Sudoku/Sudoku/CoreDataModels/NSManagedObjectExtensions.swift:        return getString(key: "playerName", defaultValue: "ƒ∞simsiz")
/Users/necati/Desktop/Sudoku/Sudoku/CoreDataModels/NSManagedObjectExtensions.swift:        return getString(key: "username", defaultValue: "")
/Users/necati/Desktop/Sudoku/Sudoku/CoreDataModels/NSManagedObjectExtensions.swift:        return value(forKey: "id") as? UUID
/Users/necati/Desktop/Sudoku/Sudoku/CoreDataModels/NSManagedObjectExtensions.swift:        return value(forKey: "isLoggedIn") as? Bool ?? false
/Users/necati/Desktop/Sudoku/Sudoku/CoreDataModels/NSManagedObjectExtensions.swift:    func getString(key: String, defaultValue: String = "") -> String {
/Users/necati/Desktop/Sudoku/Sudoku/Extensions/AppLanguage+Extensions.swift:        case "en": return "üá¨üáß"
/Users/necati/Desktop/Sudoku/Sudoku/Extensions/AppLanguage+Extensions.swift:        case "fr": return "üá´üá∑"
/Users/necati/Desktop/Sudoku/Sudoku/Extensions/AppLanguage+Extensions.swift:        case "tr": return "üáπüá∑"
/Users/necati/Desktop/Sudoku/Sudoku/Extensions/AppLanguage+Extensions.swift:        default: return "üè≥Ô∏è"
/Users/necati/Desktop/Sudoku/Sudoku/Extensions/ColorExtension.swift:    static let darkBg1 = Color(hex: "121212")
/Users/necati/Desktop/Sudoku/Sudoku/Extensions/ColorExtension.swift:    static let darkBg2 = Color(hex: "1E1E1E")
/Users/necati/Desktop/Sudoku/Sudoku/Extensions/ColorExtension.swift:    static let darkBg3 = Color(hex: "242631")
/Users/necati/Desktop/Sudoku/Sudoku/Extensions/ColorExtension.swift:    static let lightBg1 = Color(hex: "FFFFFF")
/Users/necati/Desktop/Sudoku/Sudoku/Extensions/ColorExtension.swift:    static let lightBg2 = Color(hex: "F5F5F5")
/Users/necati/Desktop/Sudoku/Sudoku/Extensions/ColorExtension.swift:    static let lightBg3 = Color(hex: "F0F4FF")
/Users/necati/Desktop/Sudoku/Sudoku/Extensions/ColorExtension.swift:    static let modernBlue = Color(hex: "1E88E5")
/Users/necati/Desktop/Sudoku/Sudoku/Extensions/ColorExtension.swift:    static let modernDarkBlue = Color(hex: "1565C0")
/Users/necati/Desktop/Sudoku/Sudoku/Extensions/ColorExtension.swift:    static let modernDarkGray = Color(hex: "424242")
/Users/necati/Desktop/Sudoku/Sudoku/Extensions/ColorExtension.swift:    static let modernGray = Color(hex: "9E9E9E")
/Users/necati/Desktop/Sudoku/Sudoku/Extensions/ColorExtension.swift:    static let modernGreen = Color(hex: "43A047")
/Users/necati/Desktop/Sudoku/Sudoku/Extensions/ColorExtension.swift:    static let modernLightBlue = Color(hex: "64B5F6")
/Users/necati/Desktop/Sudoku/Sudoku/Extensions/ColorExtension.swift:    static let modernLightGray = Color(hex: "EEEEEE")
/Users/necati/Desktop/Sudoku/Sudoku/Extensions/ColorExtension.swift:    static let modernPurple = Color(hex: "673AB7")
/Users/necati/Desktop/Sudoku/Sudoku/Extensions/ColorExtension.swift:    static let modernRed = Color(hex: "E53935")
/Users/necati/Desktop/Sudoku/Sudoku/Extensions/ColorExtension.swift:    static let sudokuAccent = Color("SudokuAccent")
/Users/necati/Desktop/Sudoku/Sudoku/Extensions/ColorExtension.swift:    static let sudokuBackground = Color("SudokuBackground")
/Users/necati/Desktop/Sudoku/Sudoku/Extensions/ColorExtension.swift:    static let sudokuCell = Color("SudokuCell")
/Users/necati/Desktop/Sudoku/Sudoku/Extensions/ColorExtension.swift:    static let sudokuSecondary = Color("SudokuSecondary")
/Users/necati/Desktop/Sudoku/Sudoku/Extensions/ColorExtension.swift:    static let sudokuText = Color("SudokuText")
/Users/necati/Desktop/Sudoku/Sudoku/Extensions/LocalizationManager.swift:            .onReceive(NotificationCenter.default.publisher(for: Notification.Name("ForceUIUpdate"))) { _ in
/Users/necati/Desktop/Sudoku/Sudoku/Extensions/LocalizationManager.swift:            .onReceive(NotificationCenter.default.publisher(for: Notification.Name("LanguageChanged"))) { _ in
/Users/necati/Desktop/Sudoku/Sudoku/Extensions/LocalizationManager.swift:        guard let path = Bundle.main.path(forResource: languageCode, ofType: "lproj"),
/Users/necati/Desktop/Sudoku/Sudoku/Extensions/LocalizationManager.swift:        guard let path = Bundle.main.path(forResource: languageCode, ofType: "lproj"),
/Users/necati/Desktop/Sudoku/Sudoku/Extensions/LocalizationManager.swift:        let languageCode = UserDefaults.standard.string(forKey: "app_language") ?? "tr"
/Users/necati/Desktop/Sudoku/Sudoku/Extensions/LocalizationManager.swift:        let languageCode = UserDefaults.standard.string(forKey: "app_language") ?? "tr"
/Users/necati/Desktop/Sudoku/Sudoku/Extensions/LocalizationManager.swift:        let localizedString = NSLocalizedString(key, bundle: bundle, comment: "")
/Users/necati/Desktop/Sudoku/Sudoku/Extensions/LocalizationManager.swift:        let localizedString = NSLocalizedString(key, bundle: bundle, comment: "")
/Users/necati/Desktop/Sudoku/Sudoku/Extensions/LocalizationManager.swift:        let path = Bundle.main.path(forResource: currentLanguage, ofType: "lproj") 
/Users/necati/Desktop/Sudoku/Sudoku/Extensions/LocalizationManager.swift:        NotificationCenter.default.post(name: Notification.Name("AppLanguageChanged"), object: nil)
/Users/necati/Desktop/Sudoku/Sudoku/Extensions/LocalizationManager.swift:        NotificationCenter.default.post(name: Notification.Name("ForceUIUpdate"), object: nil)
/Users/necati/Desktop/Sudoku/Sudoku/Extensions/LocalizationManager.swift:        NotificationCenter.default.post(name: Notification.Name("LanguageChanged"), object: nil)
/Users/necati/Desktop/Sudoku/Sudoku/Extensions/LocalizationManager.swift:        return ""
/Users/necati/Desktop/Sudoku/Sudoku/Extensions/LocalizationManager.swift:        return bundle?.localizedString(forKey: key, value: nil, table: "Localizable") ?? key
/Users/necati/Desktop/Sudoku/Sudoku/Extensions/LocalizationManager.swift:        UserDefaults.standard.set([language.code], forKey: "AppleLanguages")
/Users/necati/Desktop/Sudoku/Sudoku/Extensions/LocalizationManager.swift:        UserDefaults.standard.set(language.code, forKey: "app_language")
/Users/necati/Desktop/Sudoku/Sudoku/Extensions/LocalizationManager.swift:    @AppStorage("app_language") var currentLanguage: String = "en"
/Users/necati/Desktop/Sudoku/Sudoku/Extensions/LocalizationManager.swift:    func localizedString(for key: String, comment: String = "") -> String {
/Users/necati/Desktop/Sudoku/Sudoku/Extensions/LocalizationManager.swift:    static let english = AppLanguage(code: "en", name: "English")
/Users/necati/Desktop/Sudoku/Sudoku/Extensions/LocalizationManager.swift:    static let french = AppLanguage(code: "fr", name: "Fran√ßais")
/Users/necati/Desktop/Sudoku/Sudoku/Extensions/LocalizationManager.swift:    static let turkish = AppLanguage(code: "tr", name: "T√ºrk√ße")
/Users/necati/Desktop/Sudoku/Sudoku/Managers/PowerSavingManager.swift:            case .high: return "Y√ºksek"
/Users/necati/Desktop/Sudoku/Sudoku/Managers/PowerSavingManager.swift:            case .low: return "D√º≈ü√ºk"
/Users/necati/Desktop/Sudoku/Sudoku/Managers/PowerSavingManager.swift:            case .medium: return "Orta"
/Users/necati/Desktop/Sudoku/Sudoku/Managers/PowerSavingManager.swift:            case .off: return "Kapalƒ±"
/Users/necati/Desktop/Sudoku/Sudoku/Managers/PowerSavingManager.swift:            UserDefaults.standard.set(autoPowerSaving, forKey: "autoPowerSaving")
/Users/necati/Desktop/Sudoku/Sudoku/Managers/PowerSavingManager.swift:            UserDefaults.standard.set(highPerformanceMode, forKey: "highPerformanceMode")
/Users/necati/Desktop/Sudoku/Sudoku/Managers/PowerSavingManager.swift:            UserDefaults.standard.set(powerSavingMode, forKey: "powerSavingMode")
/Users/necati/Desktop/Sudoku/Sudoku/Managers/PowerSavingManager.swift:    @AppStorage("enableHapticFeedback") private var enableHapticFeedback: Bool = true
/Users/necati/Desktop/Sudoku/Sudoku/Managers/PowerSavingManager.swift:    @Published var autoPowerSaving: Bool = UserDefaults.standard.bool(forKey: "autoPowerSaving") {
/Users/necati/Desktop/Sudoku/Sudoku/Managers/PowerSavingManager.swift:    @Published var highPerformanceMode: Bool = UserDefaults.standard.bool(forKey: "highPerformanceMode") {
/Users/necati/Desktop/Sudoku/Sudoku/Managers/PowerSavingManager.swift:    @Published var powerSavingMode: Bool = UserDefaults.standard.bool(forKey: "powerSavingMode") {
/Users/necati/Desktop/Sudoku/Sudoku/Managers/SecurityManager.swift:            print("‚ùå String veri d√∂n√º≈ü√ºm√º ba≈üarƒ±sƒ±z")
/Users/necati/Desktop/Sudoku/Sudoku/Managers/SecurityManager.swift:            return ""
/Users/necati/Desktop/Sudoku/Sudoku/Managers/SecurityManager.swift:            return (false, "Kullanƒ±cƒ± adƒ± en az 4 karakter olmalƒ±dƒ±r.")
/Users/necati/Desktop/Sudoku/Sudoku/Managers/SecurityManager.swift:            return (false, "Kullanƒ±cƒ± adƒ± sadece harf, rakam ve alt √ßizgi i√ßermelidir.")
/Users/necati/Desktop/Sudoku/Sudoku/Managers/SecurityManager.swift:            return (false, "≈ûifre en az 8 karakter olmalƒ±dƒ±r.")
/Users/necati/Desktop/Sudoku/Sudoku/Managers/SecurityManager.swift:            return (false, "≈ûifre en az bir b√ºy√ºk harf i√ßermelidir.")
/Users/necati/Desktop/Sudoku/Sudoku/Managers/SecurityManager.swift:            return (false, "≈ûifre en az bir k√º√ß√ºk harf i√ßermelidir.")
/Users/necati/Desktop/Sudoku/Sudoku/Managers/SecurityManager.swift:            return (false, "≈ûifre en az bir √∂zel karakter i√ßermelidir.")
/Users/necati/Desktop/Sudoku/Sudoku/Managers/SecurityManager.swift:            return (false, "≈ûifre en az bir rakam i√ßermelidir.")
/Users/necati/Desktop/Sudoku/Sudoku/Managers/SecurityManager.swift:        if !NSPredicate(format: "SELF MATCHES %@", digitRegex).evaluate(with: password) {
/Users/necati/Desktop/Sudoku/Sudoku/Managers/SecurityManager.swift:        if !NSPredicate(format: "SELF MATCHES %@", lowercaseLetterRegex).evaluate(with: password) {
/Users/necati/Desktop/Sudoku/Sudoku/Managers/SecurityManager.swift:        if !NSPredicate(format: "SELF MATCHES %@", specialCharRegex).evaluate(with: password) {
/Users/necati/Desktop/Sudoku/Sudoku/Managers/SecurityManager.swift:        if !NSPredicate(format: "SELF MATCHES %@", uppercaseLetterRegex).evaluate(with: password) {
/Users/necati/Desktop/Sudoku/Sudoku/Managers/SecurityManager.swift:        if !NSPredicate(format: "SELF MATCHES %@", usernameRegex).evaluate(with: username) {
/Users/necati/Desktop/Sudoku/Sudoku/Managers/SecurityManager.swift:        let digitRegex = ".*[0-9]+.*"
/Users/necati/Desktop/Sudoku/Sudoku/Managers/SecurityManager.swift:        let emailRegex = "[A-Z0-9a-z._%+-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,64}"
/Users/necati/Desktop/Sudoku/Sudoku/Managers/SecurityManager.swift:        let isValid = NSPredicate(format: "SELF MATCHES %@", emailRegex).evaluate(with: email)
/Users/necati/Desktop/Sudoku/Sudoku/Managers/SecurityManager.swift:        let lowercaseLetterRegex = ".*[a-z]+.*"
/Users/necati/Desktop/Sudoku/Sudoku/Managers/SecurityManager.swift:        let specialCharRegex = ".*[!@#$%^&*()\\-_=+{}|?>.<]+.*"
/Users/necati/Desktop/Sudoku/Sudoku/Managers/SecurityManager.swift:        let uppercaseLetterRegex = ".*[A-Z]+.*"
/Users/necati/Desktop/Sudoku/Sudoku/Managers/SecurityManager.swift:        let usernameRegex = "^[a-zA-Z0-9_]+$"
/Users/necati/Desktop/Sudoku/Sudoku/Managers/SecurityManager.swift:        return (isValid, isValid ? "E-posta ge√ßerli." : "Ge√ßerli bir e-posta adresi girin.")
/Users/necati/Desktop/Sudoku/Sudoku/Managers/SecurityManager.swift:        return (true, "Kullanƒ±cƒ± adƒ± ge√ßerli.")
/Users/necati/Desktop/Sudoku/Sudoku/Managers/SecurityManager.swift:        return (true, "≈ûifre g√º√ßl√º.")
/Users/necati/Desktop/Sudoku/Sudoku/Managers/SecurityManager.swift:        return hashedData.map { String(format: "%02x", $0) }.joined()
/Users/necati/Desktop/Sudoku/Sudoku/Managers/TutorialManager.swift:              currentStep != .completed else { return "Tamamlandƒ±" }
/Users/necati/Desktop/Sudoku/Sudoku/Managers/TutorialManager.swift:            key = "tutorial_desc_advanced_notes"
/Users/necati/Desktop/Sudoku/Sudoku/Managers/TutorialManager.swift:            key = "tutorial_desc_basic_strategies"
/Users/necati/Desktop/Sudoku/Sudoku/Managers/TutorialManager.swift:            key = "tutorial_desc_cell_selection"
/Users/necati/Desktop/Sudoku/Sudoku/Managers/TutorialManager.swift:            key = "tutorial_desc_completed"
/Users/necati/Desktop/Sudoku/Sudoku/Managers/TutorialManager.swift:            key = "tutorial_desc_conflict_detection"
/Users/necati/Desktop/Sudoku/Sudoku/Managers/TutorialManager.swift:            key = "tutorial_desc_game_rules"
/Users/necati/Desktop/Sudoku/Sudoku/Managers/TutorialManager.swift:            key = "tutorial_desc_hints"
/Users/necati/Desktop/Sudoku/Sudoku/Managers/TutorialManager.swift:            key = "tutorial_desc_notes_mode"
/Users/necati/Desktop/Sudoku/Sudoku/Managers/TutorialManager.swift:            key = "tutorial_desc_number_entry"
/Users/necati/Desktop/Sudoku/Sudoku/Managers/TutorialManager.swift:            key = "tutorial_desc_practice"
/Users/necati/Desktop/Sudoku/Sudoku/Managers/TutorialManager.swift:            key = "tutorial_desc_saving_progress"
/Users/necati/Desktop/Sudoku/Sudoku/Managers/TutorialManager.swift:            key = "tutorial_desc_statistics"
/Users/necati/Desktop/Sudoku/Sudoku/Managers/TutorialManager.swift:            key = "tutorial_desc_welcome"
/Users/necati/Desktop/Sudoku/Sudoku/Managers/TutorialManager.swift:            key = "tutorial_tip_basic_strategies"
/Users/necati/Desktop/Sudoku/Sudoku/Managers/TutorialManager.swift:            key = "tutorial_tip_cell_selection"
/Users/necati/Desktop/Sudoku/Sudoku/Managers/TutorialManager.swift:            key = "tutorial_tip_hints"
/Users/necati/Desktop/Sudoku/Sudoku/Managers/TutorialManager.swift:            key = "tutorial_tip_notes_mode"
/Users/necati/Desktop/Sudoku/Sudoku/Managers/TutorialManager.swift:            key = "tutorial_tip_number_entry"
/Users/necati/Desktop/Sudoku/Sudoku/Managers/TutorialManager.swift:            key = "tutorial_title_advanced_notes"
/Users/necati/Desktop/Sudoku/Sudoku/Managers/TutorialManager.swift:            key = "tutorial_title_basic_strategies"
/Users/necati/Desktop/Sudoku/Sudoku/Managers/TutorialManager.swift:            key = "tutorial_title_cell_selection"
/Users/necati/Desktop/Sudoku/Sudoku/Managers/TutorialManager.swift:            key = "tutorial_title_completed"
/Users/necati/Desktop/Sudoku/Sudoku/Managers/TutorialManager.swift:            key = "tutorial_title_conflict_detection"
/Users/necati/Desktop/Sudoku/Sudoku/Managers/TutorialManager.swift:            key = "tutorial_title_game_rules"
/Users/necati/Desktop/Sudoku/Sudoku/Managers/TutorialManager.swift:            key = "tutorial_title_hints"
/Users/necati/Desktop/Sudoku/Sudoku/Managers/TutorialManager.swift:            key = "tutorial_title_notes_mode"
/Users/necati/Desktop/Sudoku/Sudoku/Managers/TutorialManager.swift:            key = "tutorial_title_number_entry"
/Users/necati/Desktop/Sudoku/Sudoku/Managers/TutorialManager.swift:            key = "tutorial_title_practice"
/Users/necati/Desktop/Sudoku/Sudoku/Managers/TutorialManager.swift:            key = "tutorial_title_saving_progress"
/Users/necati/Desktop/Sudoku/Sudoku/Managers/TutorialManager.swift:            key = "tutorial_title_statistics"
/Users/necati/Desktop/Sudoku/Sudoku/Managers/TutorialManager.swift:            key = "tutorial_title_welcome"
/Users/necati/Desktop/Sudoku/Sudoku/Managers/TutorialManager.swift:            return ""
/Users/necati/Desktop/Sudoku/Sudoku/Managers/TutorialManager.swift:        return "%\(percentage)"
/Users/necati/Desktop/Sudoku/Sudoku/Managers/TutorialManager.swift:        return NSLocalizedString(key, comment: "")
/Users/necati/Desktop/Sudoku/Sudoku/Managers/TutorialManager.swift:        return NSLocalizedString(key, comment: "")
/Users/necati/Desktop/Sudoku/Sudoku/Managers/TutorialManager.swift:        return NSLocalizedString(key, comment: "")
/Users/necati/Desktop/Sudoku/Sudoku/Managers/TutorialManager.swift:    @AppStorage("hasSeenTutorial") var hasSeenTutorial: Bool = false
/Users/necati/Desktop/Sudoku/Sudoku/Managers/TutorialManager.swift:    @AppStorage("lastTutorialStep") var lastTutorialStep: Int = 0
/Users/necati/Desktop/Sudoku/Sudoku/Managers/TutorialManager.swift:    @AppStorage("showTutorialTips") var showTutorialTips: Bool = true
/Users/necati/Desktop/Sudoku/Sudoku/Model/PersistenceController.swift:                        "board": board,
/Users/necati/Desktop/Sudoku/Sudoku/Model/PersistenceController.swift:                        "difficulty": difficulty
/Users/necati/Desktop/Sudoku/Sudoku/Model/PersistenceController.swift:                        print("‚ö†Ô∏è Eski format kullanƒ±cƒ± giri≈üi - g√ºvenlik g√ºncellemesi uygulanƒ±yor")
/Users/necati/Desktop/Sudoku/Sudoku/Model/PersistenceController.swift:                        print("‚úÖ Kullanƒ±cƒ± giri≈üi ba≈üarƒ±lƒ±: \(username)")
/Users/necati/Desktop/Sudoku/Sudoku/Model/PersistenceController.swift:                        print("‚ùå ≈ûifre yanlƒ±≈ü: \(username)")
/Users/necati/Desktop/Sudoku/Sudoku/Model/PersistenceController.swift:                    debugPrint("‚ÑπÔ∏è Anonim kullanƒ±cƒ±nƒ±n giri≈ü durumu g√ºncellendi")
/Users/necati/Desktop/Sudoku/Sudoku/Model/PersistenceController.swift:                    game.setValue(newID, forKey: "id")
/Users/necati/Desktop/Sudoku/Sudoku/Model/PersistenceController.swift:                    print("üîÑ Oyun #\(index) i√ßin eksik ID olu≈üturuldu: \(newID)")
/Users/necati/Desktop/Sudoku/Sudoku/Model/PersistenceController.swift:                "board": board,
/Users/necati/Desktop/Sudoku/Sudoku/Model/PersistenceController.swift:                "difficulty": difficulty
/Users/necati/Desktop/Sudoku/Sudoku/Model/PersistenceController.swift:                anonymousUser.username = "anonymous_\(anonymousID)"
/Users/necati/Desktop/Sudoku/Sudoku/Model/PersistenceController.swift:                debugPrint("üë§ √áƒ±kƒ±≈ü yapan kullanƒ±cƒ±: \(user.username ?? "bilinmiyor")")
/Users/necati/Desktop/Sudoku/Sudoku/Model/PersistenceController.swift:                debugPrint("‚ÑπÔ∏è ƒ∞≈ülem sonrasƒ± giri≈ü yapmƒ±≈ü kullanƒ±cƒ±: \(currentUser.username ?? "bilinmiyor")")
/Users/necati/Desktop/Sudoku/Sudoku/Model/PersistenceController.swift:                debugPrint("‚ÑπÔ∏è Kaydedilecek deƒüi≈üiklik yok")
/Users/necati/Desktop/Sudoku/Sudoku/Model/PersistenceController.swift:                debugPrint("‚úÖ Kullanƒ±cƒ± √ßƒ±kƒ±≈ü bilgileri kaydedildi")
/Users/necati/Desktop/Sudoku/Sudoku/Model/PersistenceController.swift:                debugPrint("‚úÖ Mevcut anonim kullanƒ±cƒ± bulundu: \(anonymousUser.username ?? "bilinmiyor")")
/Users/necati/Desktop/Sudoku/Sudoku/Model/PersistenceController.swift:                debugPrint("‚úÖ T√ºm kullanƒ±cƒ±lar ba≈üarƒ±yla √ßƒ±kƒ±≈ü yaptƒ±")
/Users/necati/Desktop/Sudoku/Sudoku/Model/PersistenceController.swift:                debugPrint("‚úÖ Yeni anonim kullanƒ±cƒ± olu≈üturuldu: \(anonymousUser.username ?? "bilinmiyor")")
/Users/necati/Desktop/Sudoku/Sudoku/Model/PersistenceController.swift:                debugPrint("‚ÑπÔ∏è Yeni anonim kullanƒ±cƒ± olu≈üturuluyor...")
/Users/necati/Desktop/Sudoku/Sudoku/Model/PersistenceController.swift:                if game.value(forKey: "id") == nil {
/Users/necati/Desktop/Sudoku/Sudoku/Model/PersistenceController.swift:                print("‚ùå Bu e-posta zaten kullanƒ±lƒ±yor: \(email)")
/Users/necati/Desktop/Sudoku/Sudoku/Model/PersistenceController.swift:                print("‚ùå Bu kullanƒ±cƒ± adƒ± zaten kullanƒ±lƒ±yor: \(username)")
/Users/necati/Desktop/Sudoku/Sudoku/Model/PersistenceController.swift:                print("‚ö†Ô∏è G√ºncellenecek oyun bulunamadƒ±, ID: \(gameID). Yeni oyun olarak kaydediliyor.")
/Users/necati/Desktop/Sudoku/Sudoku/Model/PersistenceController.swift:                print("‚úÖ ID'si \(gameID) olan oyun ba≈üarƒ±yla silindi")
/Users/necati/Desktop/Sudoku/Sudoku/Model/PersistenceController.swift:                print("‚úÖ Oyun zorluk seviyesi g√ºncellendi: \(newDifficulty)")
/Users/necati/Desktop/Sudoku/Sudoku/Model/PersistenceController.swift:                print("‚ùì Silinecek oyun bulunamadƒ±, ID: \(gameID)")
/Users/necati/Desktop/Sudoku/Sudoku/Model/PersistenceController.swift:                print("CoreData kaydetme hatasƒ±: \(error)")
/Users/necati/Desktop/Sudoku/Sudoku/Model/PersistenceController.swift:                print("CoreData y√ºklenemedi: \(error.localizedDescription)")
/Users/necati/Desktop/Sudoku/Sudoku/Model/PersistenceController.swift:            debugPrint("‚ùå Anonim kullanƒ±cƒ± olu≈üturulamadƒ±: \(error)")
/Users/necati/Desktop/Sudoku/Sudoku/Model/PersistenceController.swift:            debugPrint("‚ùå √áƒ±kƒ±≈ü hatasƒ±: \(error)")
/Users/necati/Desktop/Sudoku/Sudoku/Model/PersistenceController.swift:            debugPrint("üë• Giri≈ü yapmƒ±≈ü kullanƒ±cƒ± sayƒ±sƒ±: \(users.count)")
/Users/necati/Desktop/Sudoku/Sudoku/Model/PersistenceController.swift:            debugPrint("üë• Mevcut anonim kullanƒ±cƒ± sayƒ±sƒ±: \(anonymousUsers.count)")
/Users/necati/Desktop/Sudoku/Sudoku/Model/PersistenceController.swift:            fetchRequest.predicate = NSPredicate(format: "user == %@", currentUser)
/Users/necati/Desktop/Sudoku/Sudoku/Model/PersistenceController.swift:            game.setValue(currentUser, forKey: "user")
/Users/necati/Desktop/Sudoku/Sudoku/Model/PersistenceController.swift:            highScore.playerName = "Misafir Oyuncu"
/Users/necati/Desktop/Sudoku/Sudoku/Model/PersistenceController.swift:            highScore.playerName = currentUser.name ?? "Oyuncu"
/Users/necati/Desktop/Sudoku/Sudoku/Model/PersistenceController.swift:            highScore.setValue(currentUser, forKey: "user")
/Users/necati/Desktop/Sudoku/Sudoku/Model/PersistenceController.swift:            let userPredicate = NSPredicate(format: "user == %@", currentUser)
/Users/necati/Desktop/Sudoku/Sudoku/Model/PersistenceController.swift:            let userPredicate = NSPredicate(format: "user == %@", currentUser)
/Users/necati/Desktop/Sudoku/Sudoku/Model/PersistenceController.swift:            print("‚ùå Giri≈ü ba≈üarƒ±sƒ±z: \(error.localizedDescription)")
/Users/necati/Desktop/Sudoku/Sudoku/Model/PersistenceController.swift:            print("‚ùå Kayƒ±tlƒ± oyunlar getirilemedi: \(error)")
/Users/necati/Desktop/Sudoku/Sudoku/Model/PersistenceController.swift:            print("‚ùå Kayƒ±tlƒ± oyunlar y√ºklenemedi: \(error)")
/Users/necati/Desktop/Sudoku/Sudoku/Model/PersistenceController.swift:            print("‚úÖ Kullanƒ±cƒ± ba≈üarƒ±yla olu≈üturuldu: \(username)")
/Users/necati/Desktop/Sudoku/Sudoku/Model/PersistenceController.swift:            print("‚ùå Kullanƒ±cƒ± bulunamadƒ±: \(username)")
/Users/necati/Desktop/Sudoku/Sudoku/Model/PersistenceController.swift:            print("‚ùå Kullanƒ±cƒ± kaydƒ± ba≈üarƒ±sƒ±z: \(error.localizedDescription)")
/Users/necati/Desktop/Sudoku/Sudoku/Model/PersistenceController.swift:            print("‚ùå Oyun g√ºncellenemedi: \(error)")
/Users/necati/Desktop/Sudoku/Sudoku/Model/PersistenceController.swift:            print("‚ùå Oyun kaydedilemedi: \(error)")
/Users/necati/Desktop/Sudoku/Sudoku/Model/PersistenceController.swift:            print("‚ùå Oyun silinemedi: \(error)")
/Users/necati/Desktop/Sudoku/Sudoku/Model/PersistenceController.swift:            print("‚ùå Oyun zorluk seviyesi g√ºncellenirken hata olu≈ütu: \(error)")
/Users/necati/Desktop/Sudoku/Sudoku/Model/PersistenceController.swift:            print("üìä Y√ºklenen oyun sayƒ±sƒ±: \(savedGames.count)")
/Users/necati/Desktop/Sudoku/Sudoku/Model/PersistenceController.swift:            print("‚ùå Y√ºksek skor kaydedilemedi: \(error)")
/Users/necati/Desktop/Sudoku/Sudoku/Model/PersistenceController.swift:            print("‚ùå Y√ºksek skorlar getirilemedi: \(error)")
/Users/necati/Desktop/Sudoku/Sudoku/Model/PersistenceController.swift:            print("Kaydedilmi≈ü oyunlar silinemedi: \(error)")
/Users/necati/Desktop/Sudoku/Sudoku/Model/PersistenceController.swift:            print("Kullanƒ±cƒ± bilgisi alƒ±namadƒ±: \(error)")
/Users/necati/Desktop/Sudoku/Sudoku/Model/PersistenceController.swift:            print("Kullanƒ±cƒ± bulunamadƒ±: \(error)")
/Users/necati/Desktop/Sudoku/Sudoku/Model/PersistenceController.swift:            print("Oyun silinemedi: \(error)")
/Users/necati/Desktop/Sudoku/Sudoku/Model/PersistenceController.swift:            print("T√ºm kaydedilmi≈ü oyunlar silindi")
/Users/necati/Desktop/Sudoku/Sudoku/Model/PersistenceController.swift:            request.predicate = NSPredicate(format: "user == %@", currentUser)
/Users/necati/Desktop/Sudoku/Sudoku/Model/PersistenceController.swift:        container = NSPersistentContainer(name: "SudokuModel")
/Users/necati/Desktop/Sudoku/Sudoku/Model/PersistenceController.swift:        debugPrint("üîÑ getOrCreateAnonymousUser √ßaƒürƒ±ldƒ±")
/Users/necati/Desktop/Sudoku/Sudoku/Model/PersistenceController.swift:        debugPrint("üîÑ LogoutCurrentUser ba≈üladƒ±")
/Users/necati/Desktop/Sudoku/Sudoku/Model/PersistenceController.swift:        emailCheck.predicate = NSPredicate(format: "email == %@", email)
/Users/necati/Desktop/Sudoku/Sudoku/Model/PersistenceController.swift:        fetchRequest.predicate = NSPredicate(format: "id == %@", gameID as CVarArg)
/Users/necati/Desktop/Sudoku/Sudoku/Model/PersistenceController.swift:        game.setValue(gameID, forKey: "id")
/Users/necati/Desktop/Sudoku/Sudoku/Model/PersistenceController.swift:        let emailCheck = NSFetchRequest<User>(entityName: "User")
/Users/necati/Desktop/Sudoku/Sudoku/Model/PersistenceController.swift:        let fetchRequest: NSFetchRequest<NSFetchRequestResult> = NSFetchRequest(entityName: "SavedGame")
/Users/necati/Desktop/Sudoku/Sudoku/Model/PersistenceController.swift:        let usernameCheck = NSFetchRequest<User>(entityName: "User")
/Users/necati/Desktop/Sudoku/Sudoku/Model/PersistenceController.swift:        request.predicate = NSPredicate(format: "difficulty == %@", difficulty)
/Users/necati/Desktop/Sudoku/Sudoku/Model/PersistenceController.swift:        request.predicate = NSPredicate(format: "id == %@", gameID as CVarArg)
/Users/necati/Desktop/Sudoku/Sudoku/Model/PersistenceController.swift:        request.predicate = NSPredicate(format: "id == %@", gameID as CVarArg)
/Users/necati/Desktop/Sudoku/Sudoku/Model/PersistenceController.swift:        request.predicate = NSPredicate(format: "isAnonymous == YES")
/Users/necati/Desktop/Sudoku/Sudoku/Model/PersistenceController.swift:        request.predicate = NSPredicate(format: "isLoggedIn == YES")
/Users/necati/Desktop/Sudoku/Sudoku/Model/PersistenceController.swift:        request.predicate = NSPredicate(format: "isLoggedIn == YES")
/Users/necati/Desktop/Sudoku/Sudoku/Model/PersistenceController.swift:        request.predicate = NSPredicate(format: "username == %@", username)
/Users/necati/Desktop/Sudoku/Sudoku/Model/PersistenceController.swift:        request.predicate = NSPredicate(format: "username == %@", username)
/Users/necati/Desktop/Sudoku/Sudoku/Model/PersistenceController.swift:        usernameCheck.predicate = NSPredicate(format: "username == %@", username)
/Users/necati/Desktop/Sudoku/Sudoku/Model/ScoreManager.swift:                    print("‚úì Skor doƒürulandƒ±: \(id.uuidString)")
/Users/necati/Desktop/Sudoku/Sudoku/Model/ScoreManager.swift:                    print("‚úì Skor doƒürulandƒ±: ID yok")
/Users/necati/Desktop/Sudoku/Sudoku/Model/ScoreManager.swift:                } else if let time = bestScore.value(forKey: "elapsedTime") as? Double {
/Users/necati/Desktop/Sudoku/Sudoku/Model/ScoreManager.swift:                } else if let time = score.value(forKey: "elapsedTime") as? Double {
/Users/necati/Desktop/Sudoku/Sudoku/Model/ScoreManager.swift:                if let id = score.value(forKey: "id") as? UUID {
/Users/necati/Desktop/Sudoku/Sudoku/Model/ScoreManager.swift:                if let totalScore = bestScore.value(forKey: "totalScore") as? Int, totalScore > 0 {
/Users/necati/Desktop/Sudoku/Sudoku/Model/ScoreManager.swift:                if let totalScoreValue = score.value(forKey: "totalScore") as? Int, totalScoreValue > 0 {
/Users/necati/Desktop/Sudoku/Sudoku/Model/ScoreManager.swift:                print("‚ùå HATA: Skor kaydedildi ama veritabanƒ±nda bulunamadƒ±!")
/Users/necati/Desktop/Sudoku/Sudoku/Model/ScoreManager.swift:                print("‚úì Toplam Skor: \(score.value(forKey: "totalScore") as? Int ?? 0)")
/Users/necati/Desktop/Sudoku/Sudoku/Model/ScoreManager.swift:                print("‚úì Zorluk: \(score.value(forKey: "difficulty") as? String ?? "Zorluk yok")")
/Users/necati/Desktop/Sudoku/Sudoku/Model/ScoreManager.swift:            NSSortDescriptor(key: "elapsedTime", ascending: true)
/Users/necati/Desktop/Sudoku/Sudoku/Model/ScoreManager.swift:            NSSortDescriptor(key: "totalScore", ascending: false),
/Users/necati/Desktop/Sudoku/Sudoku/Model/ScoreManager.swift:            print("‚ö†Ô∏è En y√ºksek skor alƒ±namadƒ±: \(error.localizedDescription)")
/Users/necati/Desktop/Sudoku/Sudoku/Model/ScoreManager.swift:            print("‚ö†Ô∏è Ortalama skor hesaplanamadƒ±: \(error.localizedDescription)")
/Users/necati/Desktop/Sudoku/Sudoku/Model/ScoreManager.swift:            print("‚úÖ Skor ba≈üarƒ±yla kaydedildi: ID: \(scoreId), Toplam Puan: \(scoreResults.totalScore)")
/Users/necati/Desktop/Sudoku/Sudoku/Model/ScoreManager.swift:            print("‚ùå Skor kaydedilemedi: \(error.localizedDescription)")
/Users/necati/Desktop/Sudoku/Sudoku/Model/ScoreManager.swift:            print("‚ùå Skor kontrol√º sƒ±rasƒ±nda hata: \(error.localizedDescription)")
/Users/necati/Desktop/Sudoku/Sudoku/Model/ScoreManager.swift:        let entity = NSEntityDescription.entity(forEntityName: "HighScore", in: context)!
/Users/necati/Desktop/Sudoku/Sudoku/Model/ScoreManager.swift:        let request = NSFetchRequest<NSManagedObject>(entityName: "HighScore")
/Users/necati/Desktop/Sudoku/Sudoku/Model/ScoreManager.swift:        let request = NSFetchRequest<NSManagedObject>(entityName: "HighScore")
/Users/necati/Desktop/Sudoku/Sudoku/Model/ScoreManager.swift:        let request = NSFetchRequest<NSManagedObject>(entityName: "HighScore")
/Users/necati/Desktop/Sudoku/Sudoku/Model/ScoreManager.swift:        print("üìä Skor kaydediliyor - Zorluk: \(difficulty.rawValue), S√ºre: \(timeElapsed), Hatalar: \(errorCount), ƒ∞pu√ßlarƒ±: \(hintCount)")
/Users/necati/Desktop/Sudoku/Sudoku/Model/ScoreManager.swift:        request.predicate = NSPredicate(format: "difficulty == %@", difficulty.rawValue)
/Users/necati/Desktop/Sudoku/Sudoku/Model/ScoreManager.swift:        request.predicate = NSPredicate(format: "difficulty == %@", difficulty.rawValue)
/Users/necati/Desktop/Sudoku/Sudoku/Model/ScoreManager.swift:        request.predicate = NSPredicate(format: "id == %@", scoreId as CVarArg)
/Users/necati/Desktop/Sudoku/Sudoku/Model/ScoreManager.swift:        score.setValue("Oyuncu", forKey: "playerName")
/Users/necati/Desktop/Sudoku/Sudoku/Model/ScoreManager.swift:        score.setValue(Date(), forKey: "date")
/Users/necati/Desktop/Sudoku/Sudoku/Model/ScoreManager.swift:        score.setValue(difficulty.rawValue, forKey: "difficulty")
/Users/necati/Desktop/Sudoku/Sudoku/Model/ScoreManager.swift:        score.setValue(errorCount, forKey: "errorCount")
/Users/necati/Desktop/Sudoku/Sudoku/Model/ScoreManager.swift:        score.setValue(hintCount, forKey: "hintCount")
/Users/necati/Desktop/Sudoku/Sudoku/Model/ScoreManager.swift:        score.setValue(moveCount, forKey: "moveCount")
/Users/necati/Desktop/Sudoku/Sudoku/Model/ScoreManager.swift:        score.setValue(scoreId, forKey: "id")
/Users/necati/Desktop/Sudoku/Sudoku/Model/ScoreManager.swift:        score.setValue(scoreResults.baseScore, forKey: "baseScore")
/Users/necati/Desktop/Sudoku/Sudoku/Model/ScoreManager.swift:        score.setValue(scoreResults.timeBonus, forKey: "timeBonus")
/Users/necati/Desktop/Sudoku/Sudoku/Model/ScoreManager.swift:        score.setValue(scoreResults.totalScore, forKey: "totalScore")
/Users/necati/Desktop/Sudoku/Sudoku/Model/ScoreManager.swift:        score.setValue(timeElapsed, forKey: "elapsedTime")
/Users/necati/Desktop/Sudoku/Sudoku/Model/SoundManager.swift:                                log("üìä '\(soundFile)' - Boyut: \(fileSize) bytes")
/Users/necati/Desktop/Sudoku/Sudoku/Model/SoundManager.swift:                                log("üîÑ Format: MP3 algƒ±landƒ±")
/Users/necati/Desktop/Sudoku/Sudoku/Model/SoundManager.swift:                                log("üîÑ Format: WAV (RIFF) algƒ±landƒ±")
/Users/necati/Desktop/Sudoku/Sudoku/Model/SoundManager.swift:                                log("‚úÖ Ses oynatƒ±cƒ± ba≈üarƒ±yla olu≈üturuldu: \(path).\(ext)")
/Users/necati/Desktop/Sudoku/Sudoku/Model/SoundManager.swift:                                logError("'\(soundFile)' √∂zellikleri okunamadƒ±: \(error)")
/Users/necati/Desktop/Sudoku/Sudoku/Model/SoundManager.swift:                                logError("AVAudioPlayer olu≈üturulamadƒ±: \(error.localizedDescription)")
/Users/necati/Desktop/Sudoku/Sudoku/Model/SoundManager.swift:                            } else if hexSignature.hasPrefix("4944") || hexSignature.hasPrefix("FFFA") || hexSignature.hasPrefix("FFFB") {
/Users/necati/Desktop/Sudoku/Sudoku/Model/SoundManager.swift:                            filePath.hasSuffix(".\(ext)")
/Users/necati/Desktop/Sudoku/Sudoku/Model/SoundManager.swift:                            let hexSignature = data.prefix(4).map { String(format: "%02X", $0) }.joined()
/Users/necati/Desktop/Sudoku/Sudoku/Model/SoundManager.swift:                            log("‚úÖ '\(soundName).\(ext)' AVAudioPlayer ile a√ßƒ±labildi - S√ºre: \(testPlayer.duration) sn")
/Users/necati/Desktop/Sudoku/Sudoku/Model/SoundManager.swift:                            log("‚úÖ Ses dosyasƒ± bulundu: \(path).\(ext)")
/Users/necati/Desktop/Sudoku/Sudoku/Model/SoundManager.swift:                            logError("'\(soundName).\(ext)' AVAudioPlayer ile a√ßƒ±lamadƒ±: \(error)")
/Users/necati/Desktop/Sudoku/Sudoku/Model/SoundManager.swift:                        log("üìä '\(soundName).\(ext)' - Boyut: \(fileSize) bytes")
/Users/necati/Desktop/Sudoku/Sudoku/Model/SoundManager.swift:                        log("‚úÖ \(path) i√ßinde bulunan ses dosyalarƒ±: \(soundFiles)")
/Users/necati/Desktop/Sudoku/Sudoku/Model/SoundManager.swift:                        log("‚ö†Ô∏è \(path) i√ßinde ses dosyasƒ± bulunamadƒ±")
/Users/necati/Desktop/Sudoku/Sudoku/Model/SoundManager.swift:                        logError("'\(soundName).\(ext)' dosya √∂zellikleri okunamadƒ±: \(error)")
/Users/necati/Desktop/Sudoku/Sudoku/Model/SoundManager.swift:                        logError("\(path).\(ext) y√ºklenirken hata: \(error.localizedDescription)")
/Users/necati/Desktop/Sudoku/Sudoku/Model/SoundManager.swift:                     userInfo: [NSLocalizedDescriptionKey: "Ses dosyasƒ± bulunamadƒ± veya y√ºklenemedi: \(name).\(fileExt)"])
/Users/necati/Desktop/Sudoku/Sudoku/Model/SoundManager.swift:                    log("‚ùå '\(soundName).\(ext)' bulunamadƒ±")
/Users/necati/Desktop/Sudoku/Sudoku/Model/SoundManager.swift:                    log("‚úÖ '\(soundName).\(ext)' bulundu: \(resourcePath)")
/Users/necati/Desktop/Sudoku/Sudoku/Model/SoundManager.swift:                    logError("\(path) i√ßeriƒüi okunamadƒ±: \(error)")
/Users/necati/Desktop/Sudoku/Sudoku/Model/SoundManager.swift:                erasePlayer = loadSound(named: "tap", ofType: "wav")
/Users/necati/Desktop/Sudoku/Sudoku/Model/SoundManager.swift:                erasePlayer = loadSound(named: "tap", ofType: "wav")
/Users/necati/Desktop/Sudoku/Sudoku/Model/SoundManager.swift:                if let player = self.loadSound(named: "tap", ofType: "wav") {
/Users/necati/Desktop/Sudoku/Sudoku/Model/SoundManager.swift:                if let player = self.loadSound(named: "tap", ofType: "wav") {
/Users/necati/Desktop/Sudoku/Sudoku/Model/SoundManager.swift:                log("‚ö†Ô∏è Dizin mevcut deƒüil: \(path)")
/Users/necati/Desktop/Sudoku/Sudoku/Model/SoundManager.swift:                log("‚ö†Ô∏è erase.wav y√ºklenemedi, silme i≈üleminde tap sesi kullanƒ±lacak")
/Users/necati/Desktop/Sudoku/Sudoku/Model/SoundManager.swift:                log("‚ùå number_tap.wav y√ºklenemedi, alternatif ses √ßalƒ±namayacak")
/Users/necati/Desktop/Sudoku/Sudoku/Model/SoundManager.swift:                log("‚ùå tap.wav y√ºklenemedi, ses √ßalƒ±namayacak")
/Users/necati/Desktop/Sudoku/Sudoku/Model/SoundManager.swift:                log("‚ùå tap.wav y√ºklenemedi, ses √ßalƒ±namayacak")
/Users/necati/Desktop/Sudoku/Sudoku/Model/SoundManager.swift:                log("‚úÖ Var olan dizin: \(path)")
/Users/necati/Desktop/Sudoku/Sudoku/Model/SoundManager.swift:                logError("tap.wav y√ºklenemedi, ses √ßalƒ±namadƒ±")
/Users/necati/Desktop/Sudoku/Sudoku/Model/SoundManager.swift:            bundleURL.appendingPathComponent("Resources").path,
/Users/necati/Desktop/Sudoku/Sudoku/Model/SoundManager.swift:            bundleURL.appendingPathComponent("Resources/Sounds").path
/Users/necati/Desktop/Sudoku/Sudoku/Model/SoundManager.swift:            bundleURL.appendingPathComponent("Sounds").path,
/Users/necati/Desktop/Sudoku/Sudoku/Model/SoundManager.swift:            completionPlayer = loadSound(named: "completion", ofType: "wav")
/Users/necati/Desktop/Sudoku/Sudoku/Model/SoundManager.swift:            completionPlayer = loadSound(named: "completion", ofType: "wav") ?? loadSound(named: "completion", ofType: "mp3")
/Users/necati/Desktop/Sudoku/Sudoku/Model/SoundManager.swift:            completionPlayer = loadSound(named: "completion", ofType: "wav") ?? loadSound(named: "completion", ofType: "mp3")
/Users/necati/Desktop/Sudoku/Sudoku/Model/SoundManager.swift:            correctPlayer = loadSound(named: "correct", ofType: "mp3") ?? loadSound(named: "correct", ofType: "wav")
/Users/necati/Desktop/Sudoku/Sudoku/Model/SoundManager.swift:            correctPlayer = loadSound(named: "correct", ofType: "wav") ?? loadSound(named: "correct", ofType: "mp3")
/Users/necati/Desktop/Sudoku/Sudoku/Model/SoundManager.swift:            erasePlayer = loadSound(named: "erase", ofType: "wav")
/Users/necati/Desktop/Sudoku/Sudoku/Model/SoundManager.swift:            erasePlayer = loadSound(named: "erase", ofType: "wav")
/Users/necati/Desktop/Sudoku/Sudoku/Model/SoundManager.swift:            errorPlayer = loadSound(named: "error", ofType: "wav")
/Users/necati/Desktop/Sudoku/Sudoku/Model/SoundManager.swift:            errorPlayer = loadSound(named: "error", ofType: "wav") ?? loadSound(named: "error", ofType: "mp3")
/Users/necati/Desktop/Sudoku/Sudoku/Model/SoundManager.swift:            extensions.append("mp3")
/Users/necati/Desktop/Sudoku/Sudoku/Model/SoundManager.swift:            extensions.append("wav")
/Users/necati/Desktop/Sudoku/Sudoku/Model/SoundManager.swift:            if let player = loadSound(named: "tap", ofType: "wav") {
/Users/necati/Desktop/Sudoku/Sudoku/Model/SoundManager.swift:            if let player = self.loadSound(named: "correct", ofType: "mp3") ?? self.loadSound(named: "correct", ofType: "wav") {
/Users/necati/Desktop/Sudoku/Sudoku/Model/SoundManager.swift:            if let player = self.loadSound(named: "error", ofType: "wav") {
/Users/necati/Desktop/Sudoku/Sudoku/Model/SoundManager.swift:            if let player = self.loadSound(named: "tap", ofType: "wav") {
/Users/necati/Desktop/Sudoku/Sudoku/Model/SoundManager.swift:            if let tapPlayer = self.loadSound(named: "tap", ofType: "wav") {
/Users/necati/Desktop/Sudoku/Sudoku/Model/SoundManager.swift:            log("‚úÖ Audio session ba≈üarƒ±yla yapƒ±landƒ±rƒ±ldƒ± (Kategori: playback)")
/Users/necati/Desktop/Sudoku/Sudoku/Model/SoundManager.swift:            log("‚úÖ Audio session ba≈üarƒ±yla yapƒ±landƒ±rƒ±ldƒ±")
/Users/necati/Desktop/Sudoku/Sudoku/Model/SoundManager.swift:            log("üîá Audio session devre dƒ±≈üƒ± bƒ±rakƒ±ldƒ±")
/Users/necati/Desktop/Sudoku/Sudoku/Model/SoundManager.swift:            log("‚ö†Ô∏è Bilinmeyen ses kesintisi durumu")
/Users/necati/Desktop/Sudoku/Sudoku/Model/SoundManager.swift:            log("‚ùå Bundle URL bulunamadƒ±")
/Users/necati/Desktop/Sudoku/Sudoku/Model/SoundManager.swift:            log("‚ùå Erase player nil olduƒüu i√ßin ses √ßalƒ±namƒ±yor")
/Users/necati/Desktop/Sudoku/Sudoku/Model/SoundManager.swift:            log("üîç executeSound(.numberInput) √ßaƒürƒ±ldƒ± -> playNumberInputSound √ßaƒürƒ±lƒ±yor")
/Users/necati/Desktop/Sudoku/Sudoku/Model/SoundManager.swift:            log("üîç executeSound(.tap) √ßaƒürƒ±ldƒ± -> doƒürudan playNavigationSound √ßaƒürƒ±lƒ±yor")
/Users/necati/Desktop/Sudoku/Sudoku/Model/SoundManager.swift:            log("‚ùå Navigation player nil olduƒüu i√ßin ses √ßalƒ±namƒ±yor")
/Users/necati/Desktop/Sudoku/Sudoku/Model/SoundManager.swift:            log("‚ùå Navigation player nil olduƒüu i√ßin ses √ßalƒ±namƒ±yor")
/Users/necati/Desktop/Sudoku/Sudoku/Model/SoundManager.swift:            log("‚ö†Ô∏è Navigation player olu≈üturuluyor - doƒürudan tap.wav kullanƒ±lacak")
/Users/necati/Desktop/Sudoku/Sudoku/Model/SoundManager.swift:            log("‚ö†Ô∏è Navigation player olu≈üturuluyor - doƒürudan tap.wav kullanƒ±lacak")
/Users/necati/Desktop/Sudoku/Sudoku/Model/SoundManager.swift:            log("‚ùå Number input player nil olduƒüu i√ßin ses √ßalƒ±namƒ±yor")
/Users/necati/Desktop/Sudoku/Sudoku/Model/SoundManager.swift:            log("‚ùå Ses ayarlarƒ± kapalƒ± olduƒüu i√ßin test sesi √ßalƒ±namƒ±yor")
/Users/necati/Desktop/Sudoku/Sudoku/Model/SoundManager.swift:            log("üîà Ses cihazƒ± √ßƒ±karƒ±ldƒ± - hoparl√∂re ge√ßildi")
/Users/necati/Desktop/Sudoku/Sudoku/Model/SoundManager.swift:            log("üîä Ses dosyalarƒ± √∂nceden y√ºkleniyor...")
/Users/necati/Desktop/Sudoku/Sudoku/Model/SoundManager.swift:            log("‚úÖ Ses dosyalarƒ± y√ºklendi")
/Users/necati/Desktop/Sudoku/Sudoku/Model/SoundManager.swift:            log("‚ö†Ô∏è Ses kapalƒ± olduƒüu i√ßin √∂nden y√ºkleme yapƒ±lmadƒ±")
/Users/necati/Desktop/Sudoku/Sudoku/Model/SoundManager.swift:            log("üîá Ses kesintisi ba≈üladƒ± - ses sistemi duraklatƒ±ldƒ±")
/Users/necati/Desktop/Sudoku/Sudoku/Model/SoundManager.swift:            log("üîà Ses kesintisi sona erdi - ses sistemi yeniden ba≈ülatƒ±lƒ±yor")
/Users/necati/Desktop/Sudoku/Sudoku/Model/SoundManager.swift:            log("‚ùå Ses seviyesi 0 olduƒüu i√ßin test sesi √ßalƒ±namƒ±yor")
/Users/necati/Desktop/Sudoku/Sudoku/Model/SoundManager.swift:            log("üîä Ses seviyesi deƒüi≈üikliƒüi i√ßin tap sesi √ßalƒ±nƒ±yor")
/Users/necati/Desktop/Sudoku/Sudoku/Model/SoundManager.swift:            log("üîÑ Ses y√∂nlendirme deƒüi≈üti: \(reason.rawValue)")
/Users/necati/Desktop/Sudoku/Sudoku/Model/SoundManager.swift:            log("‚úÖ Ses y√ºklendi: \(name).\(type) - URL: \(result.url?.lastPathComponent ?? "bilinmeyen")")
/Users/necati/Desktop/Sudoku/Sudoku/Model/SoundManager.swift:            log("üéß Yeni ses cihazƒ± baƒülandƒ±")
/Users/necati/Desktop/Sudoku/Sudoku/Model/SoundManager.swift:            logError("Audio session devre dƒ±≈üƒ± bƒ±rakƒ±lamadƒ±: \(error.localizedDescription)")
/Users/necati/Desktop/Sudoku/Sudoku/Model/SoundManager.swift:            logError("Audio session yapƒ±landƒ±rƒ±lamadƒ±: \(error.localizedDescription)")
/Users/necati/Desktop/Sudoku/Sudoku/Model/SoundManager.swift:            logError("Audio session yapƒ±landƒ±rma hatasƒ±: \(error.localizedDescription)")
/Users/necati/Desktop/Sudoku/Sudoku/Model/SoundManager.swift:            logError("Ses dosyasƒ± y√ºklenirken hata: \(name).\(type) - \(error.localizedDescription)")
/Users/necati/Desktop/Sudoku/Sudoku/Model/SoundManager.swift:            name: NSNotification.Name("SoundVolumeChangedNotification"),
/Users/necati/Desktop/Sudoku/Sudoku/Model/SoundManager.swift:            navigationPlayer = loadSound(named: "tap", ofType: "wav")
/Users/necati/Desktop/Sudoku/Sudoku/Model/SoundManager.swift:            navigationPlayer = loadSound(named: "tap", ofType: "wav")
/Users/necati/Desktop/Sudoku/Sudoku/Model/SoundManager.swift:            navigationPlayer = loadSound(named: "tap", ofType: "wav")
/Users/necati/Desktop/Sudoku/Sudoku/Model/SoundManager.swift:            numberInputPlayer = loadSound(named: "number_tap", ofType: "wav")
/Users/necati/Desktop/Sudoku/Sudoku/Model/SoundManager.swift:            numberInputPlayer = loadSound(named: "number_tap", ofType: "wav")
/Users/necati/Desktop/Sudoku/Sudoku/Model/SoundManager.swift:        } else if fileExt == "wav" {
/Users/necati/Desktop/Sudoku/Sudoku/Model/SoundManager.swift:        if fileExt == "mp3" {
/Users/necati/Desktop/Sudoku/Sudoku/Model/SoundManager.swift:        let extensions = ["wav", "mp3"]
/Users/necati/Desktop/Sudoku/Sudoku/Model/SoundManager.swift:        let testSounds = ["tap", "error", "correct", "completion", "number_tap"]
/Users/necati/Desktop/Sudoku/Sudoku/Model/SoundManager.swift:        log("üîç Arama yapƒ±lacak yollar: \(searchPaths)")
/Users/necati/Desktop/Sudoku/Sudoku/Model/SoundManager.swift:        log("üîä loadSound √ßaƒürƒ±ldƒ±: \(name).\(type)")
/Users/necati/Desktop/Sudoku/Sudoku/Model/SoundManager.swift:        log("üéµ playCorrectSound √ßaƒürƒ±ldƒ±")
/Users/necati/Desktop/Sudoku/Sudoku/Model/SoundManager.swift:        log("üîÑ playEraseSound √ßaƒürƒ±ldƒ±")
/Users/necati/Desktop/Sudoku/Sudoku/Model/SoundManager.swift:        log("‚úÖ playEraseSound: \(player.url?.lastPathComponent ?? "bilinmeyen")")
/Users/necati/Desktop/Sudoku/Sudoku/Model/SoundManager.swift:        log("üéµ playErrorSound √ßaƒürƒ±ldƒ±")
/Users/necati/Desktop/Sudoku/Sudoku/Model/SoundManager.swift:        log("üèÜ playGameCompletedSound √ßaƒürƒ±ldƒ±")
/Users/necati/Desktop/Sudoku/Sudoku/Model/SoundManager.swift:        log("üéµ playNavigationSound √ßaƒürƒ±ldƒ±")
/Users/necati/Desktop/Sudoku/Sudoku/Model/SoundManager.swift:        log("‚úÖ playNavigationSound: \(player.url?.lastPathComponent ?? "bilinmeyen")")
/Users/necati/Desktop/Sudoku/Sudoku/Model/SoundManager.swift:        log("üéµ playNavigationSoundOnly √ßaƒürƒ±ldƒ± - titre≈üim vermeden")
/Users/necati/Desktop/Sudoku/Sudoku/Model/SoundManager.swift:        log("‚úÖ playNavigationSoundOnly: \(player.url?.lastPathComponent ?? "bilinmeyen")")
/Users/necati/Desktop/Sudoku/Sudoku/Model/SoundManager.swift:        log("üéµ playNumberInputSound √ßaƒürƒ±ldƒ±")
/Users/necati/Desktop/Sudoku/Sudoku/Model/SoundManager.swift:        log("‚úÖ playNumberInputSound: \(player.url?.lastPathComponent ?? "bilinmeyen")")
/Users/necati/Desktop/Sudoku/Sudoku/Model/SoundManager.swift:        log("üîä Ses ayarlarƒ± g√ºncelleniyor: \(enabled ? "A√ßƒ±k" : "Kapalƒ±")")
/Users/necati/Desktop/Sudoku/Sudoku/Model/SoundManager.swift:        log("üîä Ses dosyalarƒ± y√ºkleniyor...")
/Users/necati/Desktop/Sudoku/Sudoku/Model/SoundManager.swift:        log("üîä Ses seviyesi deƒüi≈üikliƒüi bildirimi alƒ±ndƒ±")
/Users/necati/Desktop/Sudoku/Sudoku/Model/SoundManager.swift:        log("üîä Ses seviyesi g√ºncelleniyor: \(volume)")
/Users/necati/Desktop/Sudoku/Sudoku/Model/SoundManager.swift:        log("üîä Ses seviyesi sessizce g√ºncelleniyor: \(volume)")
/Users/necati/Desktop/Sudoku/Sudoku/Model/SoundManager.swift:        log("üîä Temel ses testi √ßalƒ±nƒ±yor...")
/Users/necati/Desktop/Sudoku/Sudoku/Model/SoundManager.swift:        log("‚úÖ Test sesi √ßalƒ±ndƒ±")
/Users/necati/Desktop/Sudoku/Sudoku/Model/SoundManager.swift:        log("üîç T√úM SES KAYNAKLARI KONTROL EDƒ∞Lƒ∞YOR")
/Users/necati/Desktop/Sudoku/Sudoku/Model/SoundManager.swift:        log("üîÑ T√ºm ses oynatƒ±cƒ±larƒ± sƒ±fƒ±rlanƒ±yor...")
/Users/necati/Desktop/Sudoku/Sudoku/Model/SoundManager.swift:        log("üì± Uygulama arka plana ge√ßti - ses sistemi devre dƒ±≈üƒ± bƒ±rakƒ±lƒ±yor")
/Users/necati/Desktop/Sudoku/Sudoku/Model/SoundManager.swift:        log("üì± Uygulama √∂n plana ge√ßti - ses sistemi yeniden ba≈ülatƒ±lƒ±yor")
/Users/necati/Desktop/Sudoku/Sudoku/Model/SoundManager.swift:        log("\nBundle kaynaklarƒ±nƒ± doƒürudan kontrol ediyorum:")
/Users/necati/Desktop/Sudoku/Sudoku/Model/SoundManager.swift:        log("Loglama \(enabled ? "a√ßƒ±ldƒ±" : "kapatƒ±ldƒ±")")
/Users/necati/Desktop/Sudoku/Sudoku/Model/SoundManager.swift:        log("SoundManager ba≈ülatƒ±ldƒ±")
/Users/necati/Desktop/Sudoku/Sudoku/Model/SoundManager.swift:        log("SoundManager ba≈ülatƒ±lƒ±yor...")
/Users/necati/Desktop/Sudoku/Sudoku/Model/SoundManager.swift:        logError("Hi√ßbir ≈üekilde y√ºklenemedi: \(name).\(fileExt)")
/Users/necati/Desktop/Sudoku/Sudoku/Model/SoundManager.swift:        NotificationCenter.default.post(name: NSNotification.Name("SoundVolumeChangedNotification"), object: nil)
/Users/necati/Desktop/Sudoku/Sudoku/Model/SoundManager.swift:        NotificationCenter.default.post(name: NSNotification.Name("SoundVolumeChangedNotification"), object: nil)
/Users/necati/Desktop/Sudoku/Sudoku/Model/SoundManager.swift:        print("‚ùå SoundManager Hatasƒ±: \(message)")
/Users/necati/Desktop/Sudoku/Sudoku/Model/SoundManager.swift:        print("üîä SoundManager: \(message)")
/Users/necati/Desktop/Sudoku/Sudoku/Model/SoundManager.swift:        throw NSError(domain: "SoundManager", 
/Users/necati/Desktop/Sudoku/Sudoku/Model/SoundManager.swift:    @AppStorage("enableHapticFeedback") private var enableHapticFeedback: Bool = true
/Users/necati/Desktop/Sudoku/Sudoku/Model/SoundManager.swift:    @AppStorage("enableSoundEffects") private var enableSoundEffects: Bool = true
/Users/necati/Desktop/Sudoku/Sudoku/Model/SoundManager.swift:    @AppStorage("isLoggingEnabled") private var isLoggingEnabled: Bool = false
/Users/necati/Desktop/Sudoku/Sudoku/Model/SudokuBoard.swift:                    description += "¬∑ "
/Users/necati/Desktop/Sudoku/Sudoku/Model/SudokuBoard.swift:                    description += "\(value) "
/Users/necati/Desktop/Sudoku/Sudoku/Model/SudokuBoard.swift:                    description += "| "
/Users/necati/Desktop/Sudoku/Sudoku/Model/SudokuBoard.swift:                    let key = "\(row)_\(col)"
/Users/necati/Desktop/Sudoku/Sudoku/Model/SudokuBoard.swift:                    let key = "\(row)_\(col)"
/Users/necati/Desktop/Sudoku/Sudoku/Model/SudokuBoard.swift:                    let key = "\(row)_\(col)"
/Users/necati/Desktop/Sudoku/Sudoku/Model/SudokuBoard.swift:                    print("HATA: √á√∂z√ºmde nil deƒüer var: [\(row)][\(col)]")
/Users/necati/Desktop/Sudoku/Sudoku/Model/SudokuBoard.swift:                description += "------+-------+------\n"
/Users/necati/Desktop/Sudoku/Sudoku/Model/SudokuBoard.swift:                print("Eski format tespit edildi")
/Users/necati/Desktop/Sudoku/Sudoku/Model/SudokuBoard.swift:                print("Yeni format tespit edildi")
/Users/necati/Desktop/Sudoku/Sudoku/Model/SudokuBoard.swift:                return "Ba≈ülangƒ±√ß seviyesi, yeni ba≈ülayanlar i√ßin ideal"
/Users/necati/Desktop/Sudoku/Sudoku/Model/SudokuBoard.swift:                return "En zorlu seviye, ger√ßek Sudoku ustalarƒ± i√ßin"
/Users/necati/Desktop/Sudoku/Sudoku/Model/SudokuBoard.swift:                return "Orta zorlukta, biraz tecr√ºbe gerektirir"
/Users/necati/Desktop/Sudoku/Sudoku/Model/SudokuBoard.swift:                return "Zorlu, stratejik d√º≈ü√ºnme becerisi gerektirir"
/Users/necati/Desktop/Sudoku/Sudoku/Model/SudokuBoard.swift:               let boardArray = boardDict["board"] as? [[Int]],
/Users/necati/Desktop/Sudoku/Sudoku/Model/SudokuBoard.swift:               let difficultyString = boardDict["difficulty"] as? String,
/Users/necati/Desktop/Sudoku/Sudoku/Model/SudokuBoard.swift:            description += "\n"
/Users/necati/Desktop/Sudoku/Sudoku/Model/SudokuBoard.swift:            let languageCode = UserDefaults.standard.string(forKey: "app_language") ?? "en"
/Users/necati/Desktop/Sudoku/Sudoku/Model/SudokuBoard.swift:            let path = Bundle.main.path(forResource: languageCode, ofType: "lproj")
/Users/necati/Desktop/Sudoku/Sudoku/Model/SudokuBoard.swift:            print("‚ö†Ô∏è SudokuBoard.getOriginalValue: Ge√ßersiz indeks: (\(row), \(col))")
/Users/necati/Desktop/Sudoku/Sudoku/Model/SudokuBoard.swift:            print("√á√∂z√ºmde nil deƒüerler var, tekrar deneniyor...")
/Users/necati/Desktop/Sudoku/Sudoku/Model/SudokuBoard.swift:            print("ƒ∞stenen sayƒ±da h√ºcre kaldƒ±rƒ±lamadƒ±. Hedef: \(count), Kaldƒ±rƒ±lan: \(count - cellsToRemove)")
/Users/necati/Desktop/Sudoku/Sudoku/Model/SudokuBoard.swift:            return bundle?.localizedString(forKey: self.rawValue, value: self.rawValue, table: "Localizable") ?? self.rawValue
/Users/necati/Desktop/Sudoku/Sudoku/Model/SudokuBoard.swift:        case easy = "Kolay"
/Users/necati/Desktop/Sudoku/Sudoku/Model/SudokuBoard.swift:        case expert = "Uzman"
/Users/necati/Desktop/Sudoku/Sudoku/Model/SudokuBoard.swift:        case hard = "Zor"
/Users/necati/Desktop/Sudoku/Sudoku/Model/SudokuBoard.swift:        case medium = "Orta"
/Users/necati/Desktop/Sudoku/Sudoku/Model/SudokuBoard.swift:        let cacheKey = "\(row)_\(column)_\(value)"
/Users/necati/Desktop/Sudoku/Sudoku/Model/SudokuBoard.swift:        let key = "\(row)_\(col)"
/Users/necati/Desktop/Sudoku/Sudoku/Model/SudokuBoard.swift:        let key = "\(row)_\(column)"
/Users/necati/Desktop/Sudoku/Sudoku/Model/SudokuBoard.swift:        let key = "\(row)_\(column)"
/Users/necati/Desktop/Sudoku/Sudoku/Model/SudokuBoard.swift:        let key = "\(row)_\(column)"
/Users/necati/Desktop/Sudoku/Sudoku/Model/SudokuBoard.swift:        let key = "\(row)_\(column)"
/Users/necati/Desktop/Sudoku/Sudoku/Model/SudokuBoard.swift:        let key = "\(row)_\(column)"
/Users/necati/Desktop/Sudoku/Sudoku/Model/SudokuBoard.swift:        print("Format anla≈üƒ±labilir deƒüil, kaydedilmi≈ü verileri siliyor olabilirsiniz")
/Users/necati/Desktop/Sudoku/Sudoku/Model/SudokuBoard.swift:        var description = "Sudoku Tahtasƒ± (Zorluk: \(difficulty.rawValue))\n"
/Users/necati/Desktop/Sudoku/Sudoku/SudokuApp.swift:                                    NotificationCenter.default.post(name: Notification.Name("ForceUIUpdate"), object: nil)
/Users/necati/Desktop/Sudoku/Sudoku/SudokuApp.swift:                                    NotificationCenter.default.post(name: Notification.Name("ForceUIUpdate"), object: nil)
/Users/necati/Desktop/Sudoku/Sudoku/SudokuApp.swift:                                print("üåê App language changed")
/Users/necati/Desktop/Sudoku/Sudoku/SudokuApp.swift:                                print("‚úÖ Content view appeared successfully")
/Users/necati/Desktop/Sudoku/Sudoku/SudokuApp.swift:                                print("üîã Power saving mode: \(powerManager.isPowerSavingEnabled ? "ON" : "OFF")")
/Users/necati/Desktop/Sudoku/Sudoku/SudokuApp.swift:                                print("üì± Text size changed to: \(self.textSizePreference.rawValue)")
/Users/necati/Desktop/Sudoku/Sudoku/SudokuApp.swift:                            NotificationCenter.default.addObserver(forName: Notification.Name("AppLanguageChanged"), object: nil, queue: .main) { notification in
/Users/necati/Desktop/Sudoku/Sudoku/SudokuApp.swift:                            NotificationCenter.default.addObserver(forName: Notification.Name("TextSizeChanged"), object: nil, queue: .main) { notification in
/Users/necati/Desktop/Sudoku/Sudoku/SudokuApp.swift:                        NotificationCenter.default.post(name: Notification.Name("AppBecameActive"), object: nil)
/Users/necati/Desktop/Sudoku/Sudoku/SudokuApp.swift:                    NotificationCenter.default.post(name: Notification.Name("ResetGameAfterTimeout"), object: nil)
/Users/necati/Desktop/Sudoku/Sudoku/SudokuApp.swift:                    print("üì± App became active after \(Int(timeInBackground)) seconds")
/Users/necati/Desktop/Sudoku/Sudoku/SudokuApp.swift:                    print("‚è∞ App was in background for \(Int(timeInBackground)) seconds - resetting game")
/Users/necati/Desktop/Sudoku/Sudoku/SudokuApp.swift:                    print("‚úÖ Context saved successfully")
/Users/necati/Desktop/Sudoku/Sudoku/SudokuApp.swift:                    print("‚ùå Failed to save context: \(error)")
/Users/necati/Desktop/Sudoku/Sudoku/SudokuApp.swift:                NotificationCenter.default.post(name: Notification.Name("PauseActiveGame"), object: nil)
/Users/necati/Desktop/Sudoku/Sudoku/SudokuApp.swift:                print("üì± App moved to background - pausing active game")
/Users/necati/Desktop/Sudoku/Sudoku/SudokuApp.swift:                print("‚è∞ Background time saved: \(lastBackgroundTime)")
/Users/necati/Desktop/Sudoku/Sudoku/SudokuApp.swift:                Text.localizedSafe("Tekrar Dene")
/Users/necati/Desktop/Sudoku/Sudoku/SudokuApp.swift:            Image(systemName: "exclamationmark.triangle.fill")
/Users/necati/Desktop/Sudoku/Sudoku/SudokuApp.swift:            NotificationCenter.default.post(name: Notification.Name("ForceUIUpdate"), object: nil)
/Users/necati/Desktop/Sudoku/Sudoku/SudokuApp.swift:            print("üë§ Kullanƒ±cƒ± giri≈ü yaptƒ±: \(user.username ?? "N/A")")
/Users/necati/Desktop/Sudoku/Sudoku/SudokuApp.swift:            Text.localizedSafe("Uygulama Ba≈ülatƒ±lamadƒ±")
/Users/necati/Desktop/Sudoku/Sudoku/SudokuApp.swift:            Text.localizedSafe("Uygulamayƒ± kapatƒ±p tekrar a√ßmayƒ± deneyin.")
/Users/necati/Desktop/Sudoku/Sudoku/SudokuApp.swift:            Text("Hata: \(error.localizedDescription)")
/Users/necati/Desktop/Sudoku/Sudoku/SudokuApp.swift:        NotificationCenter.default.post(name: Notification.Name("ForceUIUpdate"), object: nil)
/Users/necati/Desktop/Sudoku/Sudoku/SudokuApp.swift:        print("üìä Debug mode active")
/Users/necati/Desktop/Sudoku/Sudoku/SudokuApp.swift:        print("üë§ Kullanƒ±cƒ± √ßƒ±kƒ±≈ü yaptƒ±")
/Users/necati/Desktop/Sudoku/Sudoku/SudokuApp.swift:        print("üîã Power Saving Manager initialized")
/Users/necati/Desktop/Sudoku/Sudoku/SudokuApp.swift:        print("üì± Sudoku app initializing...")
/Users/necati/Desktop/Sudoku/Sudoku/SudokuApp.swift:    @AppStorage("darkMode") var darkMode: Bool = false {
/Users/necati/Desktop/Sudoku/Sudoku/SudokuApp.swift:    @AppStorage("highPerformanceMode") private var highPerformanceMode = true
/Users/necati/Desktop/Sudoku/Sudoku/SudokuApp.swift:    @AppStorage("lastBackgroundTime") private var lastBackgroundTime: Double = 0
/Users/necati/Desktop/Sudoku/Sudoku/SudokuApp.swift:    @AppStorage("textSizePreference") private var textSizeString = TextSizePreference.medium.rawValue
/Users/necati/Desktop/Sudoku/Sudoku/SudokuApp.swift:    @AppStorage("useSystemAppearance") var useSystemAppearance: Bool = false {
/Users/necati/Desktop/Sudoku/Sudoku/SudokuApp.swift:    case large = "B√ºy√ºk"
/Users/necati/Desktop/Sudoku/Sudoku/SudokuApp.swift:    case medium = "Orta"
/Users/necati/Desktop/Sudoku/Sudoku/SudokuApp.swift:    case small = "K√º√ß√ºk"
/Users/necati/Desktop/Sudoku/Sudoku/SudokuApp.swift:    NotificationCenter.default.addObserver(forName: Notification.Name("UserLoggedIn"), object: nil, queue: .main) { _ in
/Users/necati/Desktop/Sudoku/Sudoku/SudokuApp.swift:    NotificationCenter.default.addObserver(forName: Notification.Name("UserLoggedOut"), object: nil, queue: .main) { _ in
/Users/necati/Desktop/Sudoku/Sudoku/SudokuApp.swift:    static let primaryBlue = Color("PrimaryBlue", bundle: nil) 
/Users/necati/Desktop/Sudoku/Sudoku/SudokuApp.swift:    static let primaryGreen = Color("PrimaryGreen", bundle: nil)
/Users/necati/Desktop/Sudoku/Sudoku/SudokuApp.swift:    static let primaryOrange = Color("PrimaryOrange", bundle: nil)
/Users/necati/Desktop/Sudoku/Sudoku/SudokuApp.swift:    static let primaryPurple = Color("PrimaryPurple", bundle: nil)
/Users/necati/Desktop/Sudoku/Sudoku/SudokuApp.swift:    static let primaryRed = Color("PrimaryRed", bundle: nil)
/Users/necati/Desktop/Sudoku/Sudoku/View/AnimatedSudokuLogo.swift:            Text("\(number)")
/Users/necati/Desktop/Sudoku/Sudoku/View/BackgroundView.swift:        Text("Izgara Arka Plan √ñrneƒüi")
/Users/necati/Desktop/Sudoku/Sudoku/View/GameCompletionView.swift:                        Image(systemName: "play.fill")
/Users/necati/Desktop/Sudoku/Sudoku/View/GameCompletionView.swift:                        Text("Yeni Oyun")
/Users/necati/Desktop/Sudoku/Sudoku/View/GameCompletionView.swift:                    StatisticRow(icon: "chart.bar.fill", title: "Zorluk", value: difficulty.localizedName)
/Users/necati/Desktop/Sudoku/Sudoku/View/GameCompletionView.swift:                    StatisticRow(icon: "clock.fill", title: "S√ºre", value: formatTime(timeElapsed))
/Users/necati/Desktop/Sudoku/Sudoku/View/GameCompletionView.swift:                    StatisticRow(icon: "lightbulb.fill", title: "ƒ∞pucu", value: "\(hintCount)")
/Users/necati/Desktop/Sudoku/Sudoku/View/GameCompletionView.swift:                    StatisticRow(icon: "xmark.circle.fill", title: "Hata", value: "\(errorCount)")
/Users/necati/Desktop/Sudoku/Sudoku/View/GameCompletionView.swift:                    Text("üéâ Yeni Rekor! üéâ")
/Users/necati/Desktop/Sudoku/Sudoku/View/GameCompletionView.swift:                    Text("\(score)")
/Users/necati/Desktop/Sudoku/Sudoku/View/GameCompletionView.swift:                    Text("Anasayfaya D√∂n")
/Users/necati/Desktop/Sudoku/Sudoku/View/GameCompletionView.swift:                    Text("PUAN")
/Users/necati/Desktop/Sudoku/Sudoku/View/GameCompletionView.swift:                Image(systemName: "star.fill")
/Users/necati/Desktop/Sudoku/Sudoku/View/GameCompletionView.swift:                Text("Sudoku'yu Tamamladƒ±nƒ±z")
/Users/necati/Desktop/Sudoku/Sudoku/View/GameCompletionView.swift:                Text("Tebrikler!")
/Users/necati/Desktop/Sudoku/Sudoku/View/GameCompletionView.swift:        return String(format: "%02d:%02d", minutes, seconds)
/Users/necati/Desktop/Sudoku/Sudoku/View/GameView.swift:                            Image(systemName: "lightbulb.fill")
/Users/necati/Desktop/Sudoku/Sudoku/View/GameView.swift:                            Image(systemName: viewModel.pencilMode ? "pencil.circle.fill" : "pencil")
/Users/necati/Desktop/Sudoku/Sudoku/View/GameView.swift:                            Text("ƒ∞pucu (\(viewModel.remainingHints))")
/Users/necati/Desktop/Sudoku/Sudoku/View/GameView.swift:                            Text(viewModel.pencilMode ? NSLocalizedString("Note Active", comment: "Pencil mode active") : NSLocalizedString("Note Mode", comment: "Pencil mode button"))
/Users/necati/Desktop/Sudoku/Sudoku/View/GameView.swift:                    icon: "clock",
/Users/necati/Desktop/Sudoku/Sudoku/View/GameView.swift:                    icon: "lightbulb.fill",
/Users/necati/Desktop/Sudoku/Sudoku/View/GameView.swift:                    icon: "speedometer",
/Users/necati/Desktop/Sudoku/Sudoku/View/GameView.swift:                    icon: "xmark.circle.fill",
/Users/necati/Desktop/Sudoku/Sudoku/View/GameView.swift:                    Image(systemName: "arrow.clockwise.circle.fill")
/Users/necati/Desktop/Sudoku/Sudoku/View/GameView.swift:                    Image(systemName: "chevron.left")
/Users/necati/Desktop/Sudoku/Sudoku/View/GameView.swift:                    Image(systemName: "gearshape.fill")
/Users/necati/Desktop/Sudoku/Sudoku/View/GameView.swift:                    Image(systemName: "house.fill")
/Users/necati/Desktop/Sudoku/Sudoku/View/GameView.swift:                    Image(systemName: "house.fill")
/Users/necati/Desktop/Sudoku/Sudoku/View/GameView.swift:                    Image(systemName: "plus.circle.fill")
/Users/necati/Desktop/Sudoku/Sudoku/View/GameView.swift:                    systemImage: "speedometer",
/Users/necati/Desktop/Sudoku/Sudoku/View/GameView.swift:                    systemImage: "star.fill",
/Users/necati/Desktop/Sudoku/Sudoku/View/GameView.swift:                    text: "\(viewModel.errorCount)/3",
/Users/necati/Desktop/Sudoku/Sudoku/View/GameView.swift:                    text: "\(viewModel.remainingHints)",
/Users/necati/Desktop/Sudoku/Sudoku/View/GameView.swift:                    Text("Anasayfaya D√∂n")
/Users/necati/Desktop/Sudoku/Sudoku/View/GameView.swift:                    Text("Anasayfaya D√∂n")
/Users/necati/Desktop/Sudoku/Sudoku/View/GameView.swift:                    Text("Her oyunda yalnƒ±zca 3 ipucu kullanabilirsiniz!")
/Users/necati/Desktop/Sudoku/Sudoku/View/GameView.swift:                    Text("Yeni Oyun")
/Users/necati/Desktop/Sudoku/Sudoku/View/GameView.swift:                    Text("Yeni Oyun")
/Users/necati/Desktop/Sudoku/Sudoku/View/GameView.swift:                    title: "Skor",
/Users/necati/Desktop/Sudoku/Sudoku/View/GameView.swift:                    title: "Zorluk",
/Users/necati/Desktop/Sudoku/Sudoku/View/GameView.swift:                icon: "figure.walk",
/Users/necati/Desktop/Sudoku/Sudoku/View/GameView.swift:                icon: "lightbulb.fill",
/Users/necati/Desktop/Sudoku/Sudoku/View/GameView.swift:                icon: "timer",
/Users/necati/Desktop/Sudoku/Sudoku/View/GameView.swift:                icon: "xmark.circle",
/Users/necati/Desktop/Sudoku/Sudoku/View/GameView.swift:                Image(systemName: "chevron.right")
/Users/necati/Desktop/Sudoku/Sudoku/View/GameView.swift:                NSLocalizedString("Note Mode", comment: "Game state: pencil mode") : 
/Users/necati/Desktop/Sudoku/Sudoku/View/GameView.swift:                NSLocalizedString("Playing", comment: "Game state: playing")
/Users/necati/Desktop/Sudoku/Sudoku/View/GameView.swift:                Text("ƒ∞ptal")
/Users/necati/Desktop/Sudoku/Sudoku/View/GameView.swift:                Text("Kendinize uygun bir zorluk seviyesi belirleyin")
/Users/necati/Desktop/Sudoku/Sudoku/View/GameView.swift:                Text("Sudoku")
/Users/necati/Desktop/Sudoku/Sudoku/View/GameView.swift:                Text("Zorluk Seviyesi Se√ßin")
/Users/necati/Desktop/Sudoku/Sudoku/View/GameView.swift:                title: "Kullanƒ±lan ƒ∞pu√ßlarƒ±",
/Users/necati/Desktop/Sudoku/Sudoku/View/GameView.swift:                title: "Ortalama Hamle S√ºresi",
/Users/necati/Desktop/Sudoku/Sudoku/View/GameView.swift:                title: "Toplam Hamle",
/Users/necati/Desktop/Sudoku/Sudoku/View/GameView.swift:                title: "Yapƒ±lan Hatalar",
/Users/necati/Desktop/Sudoku/Sudoku/View/GameView.swift:                value: "\(stats.errors)",
/Users/necati/Desktop/Sudoku/Sudoku/View/GameView.swift:                value: "\(stats.hints)",
/Users/necati/Desktop/Sudoku/Sudoku/View/GameView.swift:                value: "\(stats.moves)",
/Users/necati/Desktop/Sudoku/Sudoku/View/GameView.swift:            Image(systemName: "trophy.fill")
/Users/necati/Desktop/Sudoku/Sudoku/View/GameView.swift:            Image(systemName: "xmark.circle.fill")
/Users/necati/Desktop/Sudoku/Sudoku/View/GameView.swift:            NotificationCenter.default.post(name: Notification.Name("HideNavigationBar"), object: nil)
/Users/necati/Desktop/Sudoku/Sudoku/View/GameView.swift:            return "bolt"
/Users/necati/Desktop/Sudoku/Sudoku/View/GameView.swift:            return "flame"
/Users/necati/Desktop/Sudoku/Sudoku/View/GameView.swift:            return "leaf"
/Users/necati/Desktop/Sudoku/Sudoku/View/GameView.swift:            return "star"
/Users/necati/Desktop/Sudoku/Sudoku/View/GameView.swift:            return NSLocalizedString("Completed", comment: "Game state: completed")
/Users/necati/Desktop/Sudoku/Sudoku/View/GameView.swift:            return NSLocalizedString("Failed", comment: "Game state: failed")
/Users/necati/Desktop/Sudoku/Sudoku/View/GameView.swift:            return NSLocalizedString("Paused", comment: "Game state: paused")
/Users/necati/Desktop/Sudoku/Sudoku/View/GameView.swift:            return NSLocalizedString("Ready", comment: "Game state: ready")
/Users/necati/Desktop/Sudoku/Sudoku/View/GameView.swift:            return String(format: "%.0f sn", avgTime)
/Users/necati/Desktop/Sudoku/Sudoku/View/GameView.swift:            return String(format: "%.1f dk", avgTime / 60)
/Users/necati/Desktop/Sudoku/Sudoku/View/GameView.swift:            return String(format: "%.1f sn", avgTime)
/Users/necati/Desktop/Sudoku/Sudoku/View/GameView.swift:            Text("3 hata yaptƒ±nƒ±z ve Sudoku oyununu kaybettiniz.")
/Users/necati/Desktop/Sudoku/Sudoku/View/GameView.swift:            Text("Oyun Bitti!")
/Users/necati/Desktop/Sudoku/Sudoku/View/GameView.swift:            Text("Performans ƒ∞statistikleri")
/Users/necati/Desktop/Sudoku/Sudoku/View/GameView.swift:            Text("Sudoku bulmacasƒ±nƒ± \(timeString(from: viewModel.elapsedTime)) s√ºrede tamamladƒ±nƒ±z!")
/Users/necati/Desktop/Sudoku/Sudoku/View/GameView.swift:            Text("S√ºre: \(timeString(from: viewModel.elapsedTime))")
/Users/necati/Desktop/Sudoku/Sudoku/View/GameView.swift:            Text("Tebrikler!")
/Users/necati/Desktop/Sudoku/Sudoku/View/GameView.swift:        guard moves > 0 else { return "0 sn" }
/Users/necati/Desktop/Sudoku/Sudoku/View/GameView.swift:        return "\(score)"
/Users/necati/Desktop/Sudoku/Sudoku/View/GameView.swift:        return String(format: "%02d:%02d", minutes, remainingSeconds)
/Users/necati/Desktop/Sudoku/Sudoku/View/GameView.swift:    @AppStorage("enableHapticFeedback") private var enableHapticFeedback: Bool = true
/Users/necati/Desktop/Sudoku/Sudoku/View/GameView.swift:    @AppStorage("enableNumberInputHaptic") private var enableNumberInputHaptic: Bool = true
/Users/necati/Desktop/Sudoku/Sudoku/View/GameView.swift:    @AppStorage("isPremiumUnlocked") private var isPremiumUnlocked: Bool = false
/Users/necati/Desktop/Sudoku/Sudoku/View/GameView.swift:    @State private var timeDisplay: String = "00:00"
/Users/necati/Desktop/Sudoku/Sudoku/View/HintExplanationView.swift:                            Text("According to Sudoku rules, the value \(hintData.value) can be placed in this cell.")
/Users/necati/Desktop/Sudoku/Sudoku/View/HintExplanationView.swift:                            Text("Hint")
/Users/necati/Desktop/Sudoku/Sudoku/View/HintExplanationView.swift:                            Text("Last Remaining Cell")
/Users/necati/Desktop/Sudoku/Sudoku/View/HintExplanationView.swift:                            Text("Only the value \(hintData.value) can be placed in this cell because all other numbers have been eliminated.")
/Users/necati/Desktop/Sudoku/Sudoku/View/HintExplanationView.swift:                            Text("Single Position Detection")
/Users/necati/Desktop/Sudoku/Sudoku/View/HintExplanationView.swift:                            Text("Single Possibility Detection")
/Users/necati/Desktop/Sudoku/Sudoku/View/HintExplanationView.swift:                            Text("The number \(hintData.value) can only be placed in this cell in this region.")
/Users/necati/Desktop/Sudoku/Sudoku/View/HintExplanationView.swift:                            Text(viewModel.currentHintStep < hintData.totalSteps - 1 ? "ƒ∞leri" : "Bitti")
/Users/necati/Desktop/Sudoku/Sudoku/View/HintExplanationView.swift:                            Text(viewModel.currentHintStep < hintData.totalSteps - 1 ? "Next" : "Finished")
/Users/necati/Desktop/Sudoku/Sudoku/View/HintExplanationView.swift:                        if languageCode == "en" {
/Users/necati/Desktop/Sudoku/Sudoku/View/HintExplanationView.swift:                        Image(systemName: "chevron.left")
/Users/necati/Desktop/Sudoku/Sudoku/View/HintExplanationView.swift:                        let languageCode = UserDefaults.standard.string(forKey: "app_language") ?? "tr"
/Users/necati/Desktop/Sudoku/Sudoku/View/HintExplanationView.swift:                    if languageCode == "en" {
/Users/necati/Desktop/Sudoku/Sudoku/View/HintExplanationView.swift:                    if languageCode == "en" {
/Users/necati/Desktop/Sudoku/Sudoku/View/HintExplanationView.swift:                    let languageCode = UserDefaults.standard.string(forKey: "app_language") ?? "tr"
/Users/necati/Desktop/Sudoku/Sudoku/View/HintExplanationView.swift:                    let languageCode = UserDefaults.standard.string(forKey: "app_language") ?? "tr"
/Users/necati/Desktop/Sudoku/Sudoku/View/HintExplanationView.swift:            reason: "Bu h√ºcreye 5 deƒüeri konabilir √ß√ºnk√º aynƒ± satƒ±r, s√ºtun ve 3x3 bloktaki diƒüer sayƒ±larla √ßakƒ±≈ümaz.",
/Users/necati/Desktop/Sudoku/Sudoku/View/HintExplanationView.swift:            reason: "Bu h√ºcreye 5 deƒüeri konabilir."
/Users/necati/Desktop/Sudoku/Sudoku/View/HintExplanationView.swift:        hintData.addStep(title: "Adƒ±m 1", description: "ƒ∞lk adƒ±m a√ßƒ±klamasƒ±")
/Users/necati/Desktop/Sudoku/Sudoku/View/HintExplanationView.swift:        hintData.addStep(title: "Adƒ±m 2", description: "ƒ∞kinci adƒ±m a√ßƒ±klamasƒ±")
/Users/necati/Desktop/Sudoku/Sudoku/View/LoginView.swift:                                NotificationCenter.default.post(name: Notification.Name("ShowRegisterView"), object: nil)
/Users/necati/Desktop/Sudoku/Sudoku/View/LoginView.swift:                                Text("Giri≈ü Yap")
/Users/necati/Desktop/Sudoku/Sudoku/View/LoginView.swift:                                Text("Kayƒ±t Ol")
/Users/necati/Desktop/Sudoku/Sudoku/View/LoginView.swift:                            SecureField("≈ûifrenizi girin", text: $password)
/Users/necati/Desktop/Sudoku/Sudoku/View/LoginView.swift:                            Text("Hesabƒ±nƒ±z yok mu?")
/Users/necati/Desktop/Sudoku/Sudoku/View/LoginView.swift:                            Text("ƒ∞ptal")
/Users/necati/Desktop/Sudoku/Sudoku/View/LoginView.swift:                            Text("Kullanƒ±cƒ± Adƒ±")
/Users/necati/Desktop/Sudoku/Sudoku/View/LoginView.swift:                            Text("≈ûifre")
/Users/necati/Desktop/Sudoku/Sudoku/View/LoginView.swift:                            Text("≈ûifremi Unuttum")
/Users/necati/Desktop/Sudoku/Sudoku/View/LoginView.swift:                            TextField("Kullanƒ±cƒ± adƒ±nƒ±zƒ± girin", text: $username)
/Users/necati/Desktop/Sudoku/Sudoku/View/LoginView.swift:                        Image(systemName: "person.circle.fill")
/Users/necati/Desktop/Sudoku/Sudoku/View/LoginView.swift:                        Text("Giri≈ü Yap")
/Users/necati/Desktop/Sudoku/Sudoku/View/LoginView.swift:                    dismissButton: .default(Text("Tamam"))
/Users/necati/Desktop/Sudoku/Sudoku/View/LoginView.swift:                    errorMessage = "Kullanƒ±cƒ± adƒ± veya ≈üifre hatalƒ±."
/Users/necati/Desktop/Sudoku/Sudoku/View/LoginView.swift:                    NotificationCenter.default.post(name: Notification.Name("UserLoggedIn"), object: nil)
/Users/necati/Desktop/Sudoku/Sudoku/View/LoginView.swift:                    title: Text("Hata"),
/Users/necati/Desktop/Sudoku/Sudoku/View/LoginView.swift:                errorMessage = "Bu √∂zellik ≈üu anda yapƒ±m a≈üamasƒ±ndadƒ±r. L√ºtfen daha sonra tekrar deneyin."
/Users/necati/Desktop/Sudoku/Sudoku/View/LoginView.swift:                Text("Giri≈ü Yap")
/Users/necati/Desktop/Sudoku/Sudoku/View/LoginView.swift:                Text("ƒ∞ptal")
/Users/necati/Desktop/Sudoku/Sudoku/View/LoginView.swift:                Text("Talimatlarƒ± G√∂nder")
/Users/necati/Desktop/Sudoku/Sudoku/View/LoginView.swift:            errorMessage = "Kullanƒ±cƒ± adƒ± ve ≈üifre gereklidir."
/Users/necati/Desktop/Sudoku/Sudoku/View/LoginView.swift:            Text("Hesabƒ±nƒ±za baƒülƒ± e-posta adresinizi girin, ≈üifre sƒ±fƒ±rlama talimatlarƒ±nƒ± g√∂ndereceƒüiz.")
/Users/necati/Desktop/Sudoku/Sudoku/View/LoginView.swift:            Text("≈ûifremi Unuttum")
/Users/necati/Desktop/Sudoku/Sudoku/View/LoginView.swift:            TextField("E-posta adresiniz", text: .constant(""))
/Users/necati/Desktop/Sudoku/Sudoku/View/LoginView.swift:    @State private var errorMessage = ""
/Users/necati/Desktop/Sudoku/Sudoku/View/LoginView.swift:    @State private var password = ""
/Users/necati/Desktop/Sudoku/Sudoku/View/LoginView.swift:    @State private var username = ""
/Users/necati/Desktop/Sudoku/Sudoku/View/MainMenuView.swift:                                    icon: "arrow.clockwise",
/Users/necati/Desktop/Sudoku/Sudoku/View/MainMenuView.swift:                                    title: "Devam Et",
/Users/necati/Desktop/Sudoku/Sudoku/View/MainMenuView.swift:                                icon: "gearshape.fill",
/Users/necati/Desktop/Sudoku/Sudoku/View/MainMenuView.swift:                                icon: "play.fill",
/Users/necati/Desktop/Sudoku/Sudoku/View/MainMenuView.swift:                                icon: "trophy.fill",
/Users/necati/Desktop/Sudoku/Sudoku/View/MainMenuView.swift:                                title: "Ayarlar",
/Users/necati/Desktop/Sudoku/Sudoku/View/MainMenuView.swift:                                title: "Skor Tablosu",
/Users/necati/Desktop/Sudoku/Sudoku/View/MainMenuView.swift:                                title: "Yeni Oyun",
/Users/necati/Desktop/Sudoku/Sudoku/View/MainMenuView.swift:                        Image(systemName: "grid.circle.fill")
/Users/necati/Desktop/Sudoku/Sudoku/View/MainMenuView.swift:                        Text("SUDOKU")
/Users/necati/Desktop/Sudoku/Sudoku/View/MainMenuView.swift:            Image(systemName: "chevron.right")
/Users/necati/Desktop/Sudoku/Sudoku/View/MainMenuView.swift:            print("Kaydedilmi≈ü oyun kontrol√º ba≈üarƒ±sƒ±z: \(error)")
/Users/necati/Desktop/Sudoku/Sudoku/View/MainMenuView.swift:            print("Son oyun y√ºklenemedi: \(error)")
/Users/necati/Desktop/Sudoku/Sudoku/View/MainMenuView.swift:        fetchRequest.sortDescriptors = [NSSortDescriptor(key: "dateCreated", ascending: false)]
/Users/necati/Desktop/Sudoku/Sudoku/View/MainMenuView.swift:        let fetchRequest = NSFetchRequest<NSFetchRequestResult>(entityName: "SavedGame")
/Users/necati/Desktop/Sudoku/Sudoku/View/MainMenuView.swift:        let fetchRequest = NSFetchRequest<NSManagedObject>(entityName: "SavedGame")
/Users/necati/Desktop/Sudoku/Sudoku/View/NumberPadView.swift:                                .id("remaining_\(number)_\(remaining)")
/Users/necati/Desktop/Sudoku/Sudoku/View/NumberPadView.swift:                             NSLocalizedString("Not Aktif", comment: "Pencil mode active") : 
/Users/necati/Desktop/Sudoku/Sudoku/View/NumberPadView.swift:                             NSLocalizedString("Not Modu", comment: "Pencil mode button"))
/Users/necati/Desktop/Sudoku/Sudoku/View/NumberPadView.swift:                            .id("numBtn_\(number)")
/Users/necati/Desktop/Sudoku/Sudoku/View/NumberPadView.swift:                            Text("\(remaining)")
/Users/necati/Desktop/Sudoku/Sudoku/View/NumberPadView.swift:                        Text("0")
/Users/necati/Desktop/Sudoku/Sudoku/View/NumberPadView.swift:                        Text("Not Modu")
/Users/necati/Desktop/Sudoku/Sudoku/View/NumberPadView.swift:                    Image(systemName: "delete.left")
/Users/necati/Desktop/Sudoku/Sudoku/View/NumberPadView.swift:                    Image(systemName: viewModel.pencilMode ? "pencil.circle.fill" : "pencil")
/Users/necati/Desktop/Sudoku/Sudoku/View/NumberPadView.swift:                    Text("\(number)")
/Users/necati/Desktop/Sudoku/Sudoku/View/NumberPadView.swift:                    Text("Sil")
/Users/necati/Desktop/Sudoku/Sudoku/View/NumberPadView.swift:        .id("eraseBtn")
/Users/necati/Desktop/Sudoku/Sudoku/View/NumberPadView.swift:        .id("numberBtn_\(number)")
/Users/necati/Desktop/Sudoku/Sudoku/View/NumberPadView.swift:        .id("pencilBtn")
/Users/necati/Desktop/Sudoku/Sudoku/View/NumberPadView.swift:    @AppStorage("enableHapticFeedback") private var enableHapticFeedback = true
/Users/necati/Desktop/Sudoku/Sudoku/View/NumberPadView.swift:    @AppStorage("enableNumberInputHaptic") private var enableNumberInputHaptic = true
/Users/necati/Desktop/Sudoku/Sudoku/View/PencilMarksView.swift:                                        Text("\(number)")
/Users/necati/Desktop/Sudoku/Sudoku/View/ProfileEditView.swift:                        alertMessage = "Bu √∂zellik ≈üu anda geli≈ütirme a≈üamasƒ±ndadƒ±r."
/Users/necati/Desktop/Sudoku/Sudoku/View/ProfileEditView.swift:                        alertTitle = "Bilgi"
/Users/necati/Desktop/Sudoku/Sudoku/View/ProfileEditView.swift:                        Text("≈ûifre Deƒüi≈ütir")
/Users/necati/Desktop/Sudoku/Sudoku/View/ProfileEditView.swift:                        Text(newPassword == confirmPassword ? "≈ûifreler e≈üle≈üiyor" : "≈ûifreler e≈üle≈ümiyor")
/Users/necati/Desktop/Sudoku/Sudoku/View/ProfileEditView.swift:                    .destructive(Text("Hesabƒ± Sil")) {
/Users/necati/Desktop/Sudoku/Sudoku/View/ProfileEditView.swift:                    Image(systemName: "lock.fill")
/Users/necati/Desktop/Sudoku/Sudoku/View/ProfileEditView.swift:                    Image(systemName: showPasswordChange ? "chevron.up" : "chevron.down")
/Users/necati/Desktop/Sudoku/Sudoku/View/ProfileEditView.swift:                    SecureField("Mevcut ≈ûifre", text: $currentPassword)
/Users/necati/Desktop/Sudoku/Sudoku/View/ProfileEditView.swift:                    SecureField("Yeni ≈ûifre (Tekrar)", text: $confirmPassword)
/Users/necati/Desktop/Sudoku/Sudoku/View/ProfileEditView.swift:                    SecureField("Yeni ≈ûifre", text: $newPassword)
/Users/necati/Desktop/Sudoku/Sudoku/View/ProfileEditView.swift:                    Text("≈ûifre Deƒüi≈ütir")
/Users/necati/Desktop/Sudoku/Sudoku/View/ProfileEditView.swift:                Button("Kaydet") {
/Users/necati/Desktop/Sudoku/Sudoku/View/ProfileEditView.swift:                dismissButton: .default(Text("Tamam"))
/Users/necati/Desktop/Sudoku/Sudoku/View/ProfileEditView.swift:                Image(systemName: "trash.fill")
/Users/necati/Desktop/Sudoku/Sudoku/View/ProfileEditView.swift:                message: Text("Bu i≈ülem geri alƒ±namaz. T√ºm verileriniz silinecektir."),
/Users/necati/Desktop/Sudoku/Sudoku/View/ProfileEditView.swift:                Text("Ad Soyad")
/Users/necati/Desktop/Sudoku/Sudoku/View/ProfileEditView.swift:                Text("E-posta")
/Users/necati/Desktop/Sudoku/Sudoku/View/ProfileEditView.swift:                Text("Hesabƒ± Sil")
/Users/necati/Desktop/Sudoku/Sudoku/View/ProfileEditView.swift:                Text("Kullanƒ±cƒ± Adƒ±")
/Users/necati/Desktop/Sudoku/Sudoku/View/ProfileEditView.swift:                TextField("Adƒ±nƒ±zƒ± ve soyadƒ±nƒ±zƒ± girin", text: $name)
/Users/necati/Desktop/Sudoku/Sudoku/View/ProfileEditView.swift:                TextField("E-posta adresinizi girin", text: $email)
/Users/necati/Desktop/Sudoku/Sudoku/View/ProfileEditView.swift:                TextField("Kullanƒ±cƒ± adƒ±nƒ±zƒ± girin", text: $username)
/Users/necati/Desktop/Sudoku/Sudoku/View/ProfileEditView.swift:                title: Text("Hesabƒ± Sil"),
/Users/necati/Desktop/Sudoku/Sudoku/View/ProfileEditView.swift:            alertMessage = "Mevcut ≈üifreniz yanlƒ±≈ü."
/Users/necati/Desktop/Sudoku/Sudoku/View/ProfileEditView.swift:            alertMessage = "Profil bilgileriniz g√ºncellendi."
/Users/necati/Desktop/Sudoku/Sudoku/View/ProfileEditView.swift:            alertMessage = "Profil g√ºncellenemedi: \(error.localizedDescription)"
/Users/necati/Desktop/Sudoku/Sudoku/View/ProfileEditView.swift:            alertMessage = "≈ûifre g√ºncellenemedi: \(error.localizedDescription)"
/Users/necati/Desktop/Sudoku/Sudoku/View/ProfileEditView.swift:            alertMessage = "≈ûifreniz ba≈üarƒ±yla deƒüi≈ütirildi."
/Users/necati/Desktop/Sudoku/Sudoku/View/ProfileEditView.swift:            alertMessage = "Yeni ≈üifreler e≈üle≈ümiyor."
/Users/necati/Desktop/Sudoku/Sudoku/View/ProfileEditView.swift:            alertTitle = "Ba≈üarƒ±lƒ±"
/Users/necati/Desktop/Sudoku/Sudoku/View/ProfileEditView.swift:            alertTitle = "Ba≈üarƒ±lƒ±"
/Users/necati/Desktop/Sudoku/Sudoku/View/ProfileEditView.swift:            alertTitle = "Hata"
/Users/necati/Desktop/Sudoku/Sudoku/View/ProfileEditView.swift:            alertTitle = "Hata"
/Users/necati/Desktop/Sudoku/Sudoku/View/ProfileEditView.swift:            alertTitle = "Hata"
/Users/necati/Desktop/Sudoku/Sudoku/View/ProfileEditView.swift:            alertTitle = "Hata"
/Users/necati/Desktop/Sudoku/Sudoku/View/ProfileEditView.swift:            alertTitle = "Hata"
/Users/necati/Desktop/Sudoku/Sudoku/View/ProfileEditView.swift:            alertTitle = "Hata"
/Users/necati/Desktop/Sudoku/Sudoku/View/ProfileEditView.swift:            confirmPassword = ""
/Users/necati/Desktop/Sudoku/Sudoku/View/ProfileEditView.swift:            currentPassword = ""
/Users/necati/Desktop/Sudoku/Sudoku/View/ProfileEditView.swift:            newPassword = ""
/Users/necati/Desktop/Sudoku/Sudoku/View/ProfileEditView.swift:            Text("@\(username)")
/Users/necati/Desktop/Sudoku/Sudoku/View/ProfileEditView.swift:        .navigationTitle("Profil D√ºzenle")
/Users/necati/Desktop/Sudoku/Sudoku/View/ProfileEditView.swift:        email = user.email ?? ""
/Users/necati/Desktop/Sudoku/Sudoku/View/ProfileEditView.swift:        name = user.name ?? ""
/Users/necati/Desktop/Sudoku/Sudoku/View/ProfileEditView.swift:        username = user.username ?? ""
/Users/necati/Desktop/Sudoku/Sudoku/View/ProfileEditView.swift:    @State private var alertMessage = ""
/Users/necati/Desktop/Sudoku/Sudoku/View/ProfileEditView.swift:    @State private var alertTitle = ""
/Users/necati/Desktop/Sudoku/Sudoku/View/ProfileEditView.swift:    @State private var confirmPassword: String = ""
/Users/necati/Desktop/Sudoku/Sudoku/View/ProfileEditView.swift:    @State private var currentPassword: String = ""
/Users/necati/Desktop/Sudoku/Sudoku/View/ProfileEditView.swift:    @State private var email: String = ""
/Users/necati/Desktop/Sudoku/Sudoku/View/ProfileEditView.swift:    @State private var name: String = ""
/Users/necati/Desktop/Sudoku/Sudoku/View/ProfileEditView.swift:    @State private var newPassword: String = ""
/Users/necati/Desktop/Sudoku/Sudoku/View/ProfileEditView.swift:    @State private var username: String = ""
/Users/necati/Desktop/Sudoku/Sudoku/View/RegisterView.swift:                                    Image(systemName: "info.circle")
/Users/necati/Desktop/Sudoku/Sudoku/View/RegisterView.swift:                                    Text("G√º√ßl√º ≈üifre nedir?")
/Users/necati/Desktop/Sudoku/Sudoku/View/RegisterView.swift:                                    Text("≈ûifreler e≈üle≈üiyor")
/Users/necati/Desktop/Sudoku/Sudoku/View/RegisterView.swift:                                    Text("≈ûifreler e≈üle≈ümiyor")
/Users/necati/Desktop/Sudoku/Sudoku/View/RegisterView.swift:                                Text("Giri≈ü Yap")
/Users/necati/Desktop/Sudoku/Sudoku/View/RegisterView.swift:                                Text("Kayƒ±t Ol")
/Users/necati/Desktop/Sudoku/Sudoku/View/RegisterView.swift:                            SecureField("≈ûifrenizi girin", text: $password)
/Users/necati/Desktop/Sudoku/Sudoku/View/RegisterView.swift:                            SecureField("≈ûifrenizi tekrar girin", text: $confirmPassword)
/Users/necati/Desktop/Sudoku/Sudoku/View/RegisterView.swift:                            Text("Ad Soyad")
/Users/necati/Desktop/Sudoku/Sudoku/View/RegisterView.swift:                            Text("E-posta")
/Users/necati/Desktop/Sudoku/Sudoku/View/RegisterView.swift:                            Text("ƒ∞ptal")
/Users/necati/Desktop/Sudoku/Sudoku/View/RegisterView.swift:                            Text("Kullanƒ±cƒ± Adƒ±")
/Users/necati/Desktop/Sudoku/Sudoku/View/RegisterView.swift:                            Text("≈ûifre Onayƒ±")
/Users/necati/Desktop/Sudoku/Sudoku/View/RegisterView.swift:                            Text("≈ûifre")
/Users/necati/Desktop/Sudoku/Sudoku/View/RegisterView.swift:                            Text("Zaten hesabƒ±nƒ±z var mƒ±?")
/Users/necati/Desktop/Sudoku/Sudoku/View/RegisterView.swift:                            TextField("Adƒ±nƒ±zƒ± ve soyadƒ±nƒ±zƒ± girin", text: $name)
/Users/necati/Desktop/Sudoku/Sudoku/View/RegisterView.swift:                            TextField("E-posta adresinizi girin", text: $email)
/Users/necati/Desktop/Sudoku/Sudoku/View/RegisterView.swift:                            TextField("En az 4 karakter", text: $username)
/Users/necati/Desktop/Sudoku/Sudoku/View/RegisterView.swift:                    dismissButton: .default(Text("Tamam"))
/Users/necati/Desktop/Sudoku/Sudoku/View/RegisterView.swift:                    errorMessage = "Bu kullanƒ±cƒ± adƒ± veya e-posta zaten kullanƒ±lƒ±yor."
/Users/necati/Desktop/Sudoku/Sudoku/View/RegisterView.swift:                    NotificationCenter.default.post(name: Notification.Name("UserLoggedIn"), object: nil)
/Users/necati/Desktop/Sudoku/Sudoku/View/RegisterView.swift:                    Text("Yeni Hesap Olu≈ütur")
/Users/necati/Desktop/Sudoku/Sudoku/View/RegisterView.swift:                    title: Text("Hata"),
/Users/necati/Desktop/Sudoku/Sudoku/View/RegisterView.swift:                bulletPoint(text: "En az 8 karakter uzunluƒüunda olmalƒ±")
/Users/necati/Desktop/Sudoku/Sudoku/View/RegisterView.swift:                bulletPoint(text: "En az bir b√ºy√ºk harf i√ßermeli (A-Z)")
/Users/necati/Desktop/Sudoku/Sudoku/View/RegisterView.swift:                bulletPoint(text: "En az bir k√º√ß√ºk harf i√ßermeli (a-z)")
/Users/necati/Desktop/Sudoku/Sudoku/View/RegisterView.swift:                bulletPoint(text: "En az bir √∂zel karakter i√ßermeli (!, @, #, $, vb.)")
/Users/necati/Desktop/Sudoku/Sudoku/View/RegisterView.swift:                bulletPoint(text: "En az bir rakam i√ßermeli (0-9)")
/Users/necati/Desktop/Sudoku/Sudoku/View/RegisterView.swift:                Text("‚Ä¢ G1zl!Sudoku")
/Users/necati/Desktop/Sudoku/Sudoku/View/RegisterView.swift:                Text("‚Ä¢ Oyun_Seviyorum1")
/Users/necati/Desktop/Sudoku/Sudoku/View/RegisterView.swift:                Text("‚Ä¢ Sudoku2024!")
/Users/necati/Desktop/Sudoku/Sudoku/View/RegisterView.swift:                Text("Anladƒ±m")
/Users/necati/Desktop/Sudoku/Sudoku/View/RegisterView.swift:                Text("Kayƒ±t Ol")
/Users/necati/Desktop/Sudoku/Sudoku/View/RegisterView.swift:            errorMessage = "≈ûifreler e≈üle≈ümiyor."
/Users/necati/Desktop/Sudoku/Sudoku/View/RegisterView.swift:            errorMessage = "T√ºm alanlarƒ± doldurun."
/Users/necati/Desktop/Sudoku/Sudoku/View/RegisterView.swift:            Text("‚Ä¢")
/Users/necati/Desktop/Sudoku/Sudoku/View/RegisterView.swift:            Text("G√º√ßl√º ≈ûifre Gereksinimleri")
/Users/necati/Desktop/Sudoku/Sudoku/View/RegisterView.swift:            Text("G√º√ßl√º ≈ûifre √ñrnekleri:")
/Users/necati/Desktop/Sudoku/Sudoku/View/RegisterView.swift:    @State private var confirmPassword = ""
/Users/necati/Desktop/Sudoku/Sudoku/View/RegisterView.swift:    @State private var confirmPasswordValidationMessage = ""
/Users/necati/Desktop/Sudoku/Sudoku/View/RegisterView.swift:    @State private var email = ""
/Users/necati/Desktop/Sudoku/Sudoku/View/RegisterView.swift:    @State private var emailValidationMessage = ""
/Users/necati/Desktop/Sudoku/Sudoku/View/RegisterView.swift:    @State private var errorMessage = ""
/Users/necati/Desktop/Sudoku/Sudoku/View/RegisterView.swift:    @State private var name = "Necati Yƒ±ldƒ±rƒ±m" 
/Users/necati/Desktop/Sudoku/Sudoku/View/RegisterView.swift:    @State private var password = ""
/Users/necati/Desktop/Sudoku/Sudoku/View/RegisterView.swift:    @State private var passwordValidationMessage = ""
/Users/necati/Desktop/Sudoku/Sudoku/View/RegisterView.swift:    @State private var username = ""
/Users/necati/Desktop/Sudoku/Sudoku/View/RegisterView.swift:    @State private var usernameValidationMessage = ""
/Users/necati/Desktop/Sudoku/Sudoku/View/SavedGamesView.swift:                                            print("Error saving context: \(error)")
/Users/necati/Desktop/Sudoku/Sudoku/View/SavedGamesView.swift:                                        Label("Sil", systemImage: "trash")
/Users/necati/Desktop/Sudoku/Sudoku/View/SavedGamesView.swift:                                    Text.localizedSafe("dk")
/Users/necati/Desktop/Sudoku/Sudoku/View/SavedGamesView.swift:                                    Text("\(minutes)")
/Users/necati/Desktop/Sudoku/Sudoku/View/SavedGamesView.swift:                                Text.localizedSafe("sn")
/Users/necati/Desktop/Sudoku/Sudoku/View/SavedGamesView.swift:                                Text("\(seconds)")
/Users/necati/Desktop/Sudoku/Sudoku/View/SavedGamesView.swift:                            Image(systemName: "calendar")
/Users/necati/Desktop/Sudoku/Sudoku/View/SavedGamesView.swift:                            Image(systemName: "clock")
/Users/necati/Desktop/Sudoku/Sudoku/View/SavedGamesView.swift:                            Image(systemName: "play.fill")
/Users/necati/Desktop/Sudoku/Sudoku/View/SavedGamesView.swift:                            print("Error saving context: \(error)")
/Users/necati/Desktop/Sudoku/Sudoku/View/SavedGamesView.swift:                            Text.localizedSafe("Devam Et")
/Users/necati/Desktop/Sudoku/Sudoku/View/SavedGamesView.swift:                            Text.localizedSafe("S√ºre")
/Users/necati/Desktop/Sudoku/Sudoku/View/SavedGamesView.swift:                            Text.localizedSafe("Zorluk")
/Users/necati/Desktop/Sudoku/Sudoku/View/SavedGamesView.swift:                            Text("Tarih")
/Users/necati/Desktop/Sudoku/Sudoku/View/SavedGamesView.swift:                        print("üìå SavedGamesView: Oyun y√ºklendi, callback √ßaƒürƒ±lƒ±yor")
/Users/necati/Desktop/Sudoku/Sudoku/View/SavedGamesView.swift:                        print("\nüìå SavedGamesView: Oyun y√ºkleniyor ID: \(game.value(forKey: "id") ?? "ID yok")")
/Users/necati/Desktop/Sudoku/Sudoku/View/SavedGamesView.swift:                        Text.localizedSafe("Tamamlanma")
/Users/necati/Desktop/Sudoku/Sudoku/View/SavedGamesView.swift:                        Text.localizedSafe(difficulty)
/Users/necati/Desktop/Sudoku/Sudoku/View/SavedGamesView.swift:                        Text.localizedSafe(shortenedText(for: level))
/Users/necati/Desktop/Sudoku/Sudoku/View/SavedGamesView.swift:                        Text("\(completionPercentage)%")
/Users/necati/Desktop/Sudoku/Sudoku/View/SavedGamesView.swift:                let formatKey = "%@ zorluk seviyesinde kaydedilmi≈ü oyun bulunmamaktadƒ±r."
/Users/necati/Desktop/Sudoku/Sudoku/View/SavedGamesView.swift:                let languageCode = UserDefaults.standard.string(forKey: "app_language") ?? "tr"
/Users/necati/Desktop/Sudoku/Sudoku/View/SavedGamesView.swift:                let localizedFormat = bundle?.localizedString(forKey: formatKey, value: formatKey, table: "Localizable") ?? formatKey
/Users/necati/Desktop/Sudoku/Sudoku/View/SavedGamesView.swift:                let path = Bundle.main.path(forResource: languageCode, ofType: "lproj")
/Users/necati/Desktop/Sudoku/Sudoku/View/SavedGamesView.swift:                message: Text("Bu kaydedilmi≈ü oyunu silmek istediƒüinizden emin misiniz?"),
/Users/necati/Desktop/Sudoku/Sudoku/View/SavedGamesView.swift:                primaryButton: .destructive(Text("Sil")) {
/Users/necati/Desktop/Sudoku/Sudoku/View/SavedGamesView.swift:                return "bolt"
/Users/necati/Desktop/Sudoku/Sudoku/View/SavedGamesView.swift:                return "bolt"
/Users/necati/Desktop/Sudoku/Sudoku/View/SavedGamesView.swift:                return "bolt"
/Users/necati/Desktop/Sudoku/Sudoku/View/SavedGamesView.swift:                return "flame"
/Users/necati/Desktop/Sudoku/Sudoku/View/SavedGamesView.swift:                return "flame"
/Users/necati/Desktop/Sudoku/Sudoku/View/SavedGamesView.swift:                return "flame"
/Users/necati/Desktop/Sudoku/Sudoku/View/SavedGamesView.swift:                return "leaf"
/Users/necati/Desktop/Sudoku/Sudoku/View/SavedGamesView.swift:                return "leaf"
/Users/necati/Desktop/Sudoku/Sudoku/View/SavedGamesView.swift:                return "leaf"
/Users/necati/Desktop/Sudoku/Sudoku/View/SavedGamesView.swift:                return "star"
/Users/necati/Desktop/Sudoku/Sudoku/View/SavedGamesView.swift:                return "star"
/Users/necati/Desktop/Sudoku/Sudoku/View/SavedGamesView.swift:                return "star"
/Users/necati/Desktop/Sudoku/Sudoku/View/SavedGamesView.swift:                secondaryButton: .cancel(Text("ƒ∞ptal")) {
/Users/necati/Desktop/Sudoku/Sudoku/View/SavedGamesView.swift:                Text.localizedSafe("Hen√ºz kaydedilmi≈ü oyun bulunmamaktadƒ±r. Bir oyunu kaydetmek i√ßin oyun ekranƒ±nda 'Kaydet' butonunu kullanƒ±n.")
/Users/necati/Desktop/Sudoku/Sudoku/View/SavedGamesView.swift:                Text.localizedSafe("Kaydedilmi≈ü Oyunlar")
/Users/necati/Desktop/Sudoku/Sudoku/View/SavedGamesView.swift:                title: Text("Oyunu Sil"),
/Users/necati/Desktop/Sudoku/Sudoku/View/SavedGamesView.swift:            case "Difficile":
/Users/necati/Desktop/Sudoku/Sudoku/View/SavedGamesView.swift:            case "Difficile":
/Users/necati/Desktop/Sudoku/Sudoku/View/SavedGamesView.swift:            case "Easy":
/Users/necati/Desktop/Sudoku/Sudoku/View/SavedGamesView.swift:            case "Easy":
/Users/necati/Desktop/Sudoku/Sudoku/View/SavedGamesView.swift:            case "Expert":
/Users/necati/Desktop/Sudoku/Sudoku/View/SavedGamesView.swift:            case "Expert":
/Users/necati/Desktop/Sudoku/Sudoku/View/SavedGamesView.swift:            case "Expert":
/Users/necati/Desktop/Sudoku/Sudoku/View/SavedGamesView.swift:            case "Expert":
/Users/necati/Desktop/Sudoku/Sudoku/View/SavedGamesView.swift:            case "Facile":
/Users/necati/Desktop/Sudoku/Sudoku/View/SavedGamesView.swift:            case "Facile":
/Users/necati/Desktop/Sudoku/Sudoku/View/SavedGamesView.swift:            case "Hard":
/Users/necati/Desktop/Sudoku/Sudoku/View/SavedGamesView.swift:            case "Hard":
/Users/necati/Desktop/Sudoku/Sudoku/View/SavedGamesView.swift:            case "Kolay":
/Users/necati/Desktop/Sudoku/Sudoku/View/SavedGamesView.swift:            case "Kolay":
/Users/necati/Desktop/Sudoku/Sudoku/View/SavedGamesView.swift:            case "Kolay":
/Users/necati/Desktop/Sudoku/Sudoku/View/SavedGamesView.swift:            case "Medium":
/Users/necati/Desktop/Sudoku/Sudoku/View/SavedGamesView.swift:            case "Medium":
/Users/necati/Desktop/Sudoku/Sudoku/View/SavedGamesView.swift:            case "Moyen":
/Users/necati/Desktop/Sudoku/Sudoku/View/SavedGamesView.swift:            case "Moyen":
/Users/necati/Desktop/Sudoku/Sudoku/View/SavedGamesView.swift:            case "Orta":
/Users/necati/Desktop/Sudoku/Sudoku/View/SavedGamesView.swift:            case "Orta":
/Users/necati/Desktop/Sudoku/Sudoku/View/SavedGamesView.swift:            case "Orta":
/Users/necati/Desktop/Sudoku/Sudoku/View/SavedGamesView.swift:            case "Uzman":
/Users/necati/Desktop/Sudoku/Sudoku/View/SavedGamesView.swift:            case "Uzman":
/Users/necati/Desktop/Sudoku/Sudoku/View/SavedGamesView.swift:            case "Uzman":
/Users/necati/Desktop/Sudoku/Sudoku/View/SavedGamesView.swift:            case "Zor":
/Users/necati/Desktop/Sudoku/Sudoku/View/SavedGamesView.swift:            case "Zor":
/Users/necati/Desktop/Sudoku/Sudoku/View/SavedGamesView.swift:            case "Zor":
/Users/necati/Desktop/Sudoku/Sudoku/View/SavedGamesView.swift:            if selectedDifficulty == "T√ºm√º" || selectedDifficulty == "All" || selectedDifficulty == "Tous" {
/Users/necati/Desktop/Sudoku/Sudoku/View/SavedGamesView.swift:            Image(systemName: "bookmark.slash.fill")
/Users/necati/Desktop/Sudoku/Sudoku/View/SavedGamesView.swift:            return ["All", "Easy", "Medium", "Hard", "Expert"]
/Users/necati/Desktop/Sudoku/Sudoku/View/SavedGamesView.swift:            return ["Tous", "Facile", "Moyen", "Difficile", "Expert"]
/Users/necati/Desktop/Sudoku/Sudoku/View/SavedGamesView.swift:            return ["T√ºm√º", "Kolay", "Orta", "Zor", "Uzman"]
/Users/necati/Desktop/Sudoku/Sudoku/View/SavedGamesView.swift:            Text.localizedSafe("Kaydedilmi≈ü oyun bulunamadƒ±")
/Users/necati/Desktop/Sudoku/Sudoku/View/SavedGamesView.swift:        } else if languageCode == "fr" {
/Users/necati/Desktop/Sudoku/Sudoku/View/SavedGamesView.swift:        } else if languageCode == "fr" {
/Users/necati/Desktop/Sudoku/Sudoku/View/SavedGamesView.swift:        } else if languageCode == "fr" {
/Users/necati/Desktop/Sudoku/Sudoku/View/SavedGamesView.swift:        dateFormatter.dateFormat = "d MMM yyyy HH:mm"
/Users/necati/Desktop/Sudoku/Sudoku/View/SavedGamesView.swift:        dateFormatter.locale = Locale(identifier: "tr_TR")
/Users/necati/Desktop/Sudoku/Sudoku/View/SavedGamesView.swift:        if languageCode == "en" {
/Users/necati/Desktop/Sudoku/Sudoku/View/SavedGamesView.swift:        if languageCode == "en" {
/Users/necati/Desktop/Sudoku/Sudoku/View/SavedGamesView.swift:        if languageCode == "en" {
/Users/necati/Desktop/Sudoku/Sudoku/View/SavedGamesView.swift:        if selectedDifficulty == "T√ºm√º" {
/Users/necati/Desktop/Sudoku/Sudoku/View/SavedGamesView.swift:        let difficulty = game.difficulty ?? "Bilinmeyen"
/Users/necati/Desktop/Sudoku/Sudoku/View/SavedGamesView.swift:        let languageCode = UserDefaults.standard.string(forKey: "app_language") ?? "tr"
/Users/necati/Desktop/Sudoku/Sudoku/View/SavedGamesView.swift:        let languageCode = UserDefaults.standard.string(forKey: "app_language") ?? "tr"
/Users/necati/Desktop/Sudoku/Sudoku/View/SavedGamesView.swift:        let languageCode = UserDefaults.standard.string(forKey: "app_language") ?? "tr"
/Users/necati/Desktop/Sudoku/Sudoku/View/SavedGamesView.swift:    @State private var selectedDifficulty: String = "T√ºm√º"
/Users/necati/Desktop/Sudoku/Sudoku/View/ScoreboardView.swift:                                Image(systemName: "calendar")
/Users/necati/Desktop/Sudoku/Sudoku/View/ScoreboardView.swift:                                Image(systemName: "calendar")
/Users/necati/Desktop/Sudoku/Sudoku/View/ScoreboardView.swift:                                Text.localizedSafe(difficultyString)
/Users/necati/Desktop/Sudoku/Sudoku/View/ScoreboardView.swift:                                Text.localizedSafe(difficultyString)
/Users/necati/Desktop/Sudoku/Sudoku/View/ScoreboardView.swift:                            Text("\(bestScore)")
/Users/necati/Desktop/Sudoku/Sudoku/View/ScoreboardView.swift:                        if let date = score.value(forKey: "date") as? Date {
/Users/necati/Desktop/Sudoku/Sudoku/View/ScoreboardView.swift:                        if let date = score.value(forKey: "date") as? Date {
/Users/necati/Desktop/Sudoku/Sudoku/View/ScoreboardView.swift:                        if let difficultyString = score.value(forKey: "difficulty") as? String {
/Users/necati/Desktop/Sudoku/Sudoku/View/ScoreboardView.swift:                        if let difficultyString = score.value(forKey: "difficulty") as? String {
/Users/necati/Desktop/Sudoku/Sudoku/View/ScoreboardView.swift:                        Image(systemName: "lightbulb.fill")
/Users/necati/Desktop/Sudoku/Sudoku/View/ScoreboardView.swift:                        Image(systemName: "lightbulb.fill")
/Users/necati/Desktop/Sudoku/Sudoku/View/ScoreboardView.swift:                        Image(systemName: "xmark.circle.fill")
/Users/necati/Desktop/Sudoku/Sudoku/View/ScoreboardView.swift:                        Image(systemName: "xmark.circle.fill")
/Users/necati/Desktop/Sudoku/Sudoku/View/ScoreboardView.swift:                        Text.localizedSafe("puan")
/Users/necati/Desktop/Sudoku/Sudoku/View/ScoreboardView.swift:                        Text("\(calculateScore())")
/Users/necati/Desktop/Sudoku/Sudoku/View/ScoreboardView.swift:                        Text("\(errorCount)")
/Users/necati/Desktop/Sudoku/Sudoku/View/ScoreboardView.swift:                        Text("\(errorCount)")
/Users/necati/Desktop/Sudoku/Sudoku/View/ScoreboardView.swift:                        Text("\(hintCount)")
/Users/necati/Desktop/Sudoku/Sudoku/View/ScoreboardView.swift:                        Text("\(hintCount)")
/Users/necati/Desktop/Sudoku/Sudoku/View/ScoreboardView.swift:                        Text("#\(rank)")
/Users/necati/Desktop/Sudoku/Sudoku/View/ScoreboardView.swift:                        Text("puan")
/Users/necati/Desktop/Sudoku/Sudoku/View/ScoreboardView.swift:                    icon: "bolt.fill",
/Users/necati/Desktop/Sudoku/Sudoku/View/ScoreboardView.swift:                    icon: "chart.line.uptrend.xyaxis",
/Users/necati/Desktop/Sudoku/Sudoku/View/ScoreboardView.swift:                    icon: "checkmark.circle.fill",
/Users/necati/Desktop/Sudoku/Sudoku/View/ScoreboardView.swift:                    icon: "clock.fill",
/Users/necati/Desktop/Sudoku/Sudoku/View/ScoreboardView.swift:                    icon: "star.fill",
/Users/necati/Desktop/Sudoku/Sudoku/View/ScoreboardView.swift:                    if let time = score.value(forKey: "elapsedTime") as? Double {
/Users/necati/Desktop/Sudoku/Sudoku/View/ScoreboardView.swift:                    Image(systemName: "clock.fill")
/Users/necati/Desktop/Sudoku/Sudoku/View/ScoreboardView.swift:                    Image(systemName: "clock.fill")
/Users/necati/Desktop/Sudoku/Sudoku/View/ScoreboardView.swift:                    Image(systemName: "gamecontroller")
/Users/necati/Desktop/Sudoku/Sudoku/View/ScoreboardView.swift:                    let date = firstScore.value(forKey: "date") as? Date
/Users/necati/Desktop/Sudoku/Sudoku/View/ScoreboardView.swift:                    let elapsedTime = firstScore.value(forKey: "elapsedTime") as? Double ?? 0
/Users/necati/Desktop/Sudoku/Sudoku/View/ScoreboardView.swift:                    let id = firstScore.value(forKey: "id") as? UUID
/Users/necati/Desktop/Sudoku/Sudoku/View/ScoreboardView.swift:                    let totalScore = firstScore.value(forKey: "totalScore") as? Int ?? 0
/Users/necati/Desktop/Sudoku/Sudoku/View/ScoreboardView.swift:                    print("üìã ƒ∞lk skor - ID: \(id?.uuidString ?? "ID yok"), Tarih: \(date?.description ?? "Tarih yok"), Puan: \(totalScore), S√ºre: \(elapsedTime)")
/Users/necati/Desktop/Sudoku/Sudoku/View/ScoreboardView.swift:                    tabButton(title: "Genel", tag: 0)
/Users/necati/Desktop/Sudoku/Sudoku/View/ScoreboardView.swift:                    tabButton(title: "Zorluk", tag: 1)
/Users/necati/Desktop/Sudoku/Sudoku/View/ScoreboardView.swift:                    Text.localizedSafe("puan")
/Users/necati/Desktop/Sudoku/Sudoku/View/ScoreboardView.swift:                    Text("\(minutes):\(String(format: "%02d", seconds))")
/Users/necati/Desktop/Sudoku/Sudoku/View/ScoreboardView.swift:                    Text("\(minutes):\(String(format: "%02d", seconds))")
/Users/necati/Desktop/Sudoku/Sudoku/View/ScoreboardView.swift:                    Text("\(scoreValue)")
/Users/necati/Desktop/Sudoku/Sudoku/View/ScoreboardView.swift:                    Text("Hen√ºz tamamlanmƒ±≈ü oyun yok")
/Users/necati/Desktop/Sudoku/Sudoku/View/ScoreboardView.swift:                    title: "En Hƒ±zlƒ± Oyun",
/Users/necati/Desktop/Sudoku/Sudoku/View/ScoreboardView.swift:                    title: "En Y√ºksek Skor",
/Users/necati/Desktop/Sudoku/Sudoku/View/ScoreboardView.swift:                    title: "Ortalama Skor",
/Users/necati/Desktop/Sudoku/Sudoku/View/ScoreboardView.swift:                    title: "Ortalama S√ºre",
/Users/necati/Desktop/Sudoku/Sudoku/View/ScoreboardView.swift:                    title: "Toplam Oyunlar",
/Users/necati/Desktop/Sudoku/Sudoku/View/ScoreboardView.swift:                    value: "\(statistics.bestScore)",
/Users/necati/Desktop/Sudoku/Sudoku/View/ScoreboardView.swift:                    value: "\(statistics.difficultyGames)",
/Users/necati/Desktop/Sudoku/Sudoku/View/ScoreboardView.swift:                    value: "\(statistics.totalGames)",
/Users/necati/Desktop/Sudoku/Sudoku/View/ScoreboardView.swift:                    value: String(format: "%.0f", statistics.averageScore),
/Users/necati/Desktop/Sudoku/Sudoku/View/ScoreboardView.swift:                if let scoreValue = score.value(forKey: "totalScore") as? Int, scoreValue > 0 {
/Users/necati/Desktop/Sudoku/Sudoku/View/ScoreboardView.swift:                if let time = score.value(forKey: "elapsedTime") as? Double {
/Users/necati/Desktop/Sudoku/Sudoku/View/ScoreboardView.swift:                Image(systemName: "chart.bar.fill")
/Users/necati/Desktop/Sudoku/Sudoku/View/ScoreboardView.swift:                Image(systemName: "chart.bar.xaxis")
/Users/necati/Desktop/Sudoku/Sudoku/View/ScoreboardView.swift:                Image(systemName: "clock.fill")
/Users/necati/Desktop/Sudoku/Sudoku/View/ScoreboardView.swift:                Image(systemName: "gamecontroller.fill")
/Users/necati/Desktop/Sudoku/Sudoku/View/ScoreboardView.swift:                print("‚ö†Ô∏è Bu zorluk seviyesi i√ßin kayƒ±tlƒ± skor bulunamadƒ±")
/Users/necati/Desktop/Sudoku/Sudoku/View/ScoreboardView.swift:                Text.localizedSafe("Oyun ƒ∞statistikleri")
/Users/necati/Desktop/Sudoku/Sudoku/View/ScoreboardView.swift:                Text.localizedSafe("Performans ƒ∞statistikleri")
/Users/necati/Desktop/Sudoku/Sudoku/View/ScoreboardView.swift:                Text.localizedSafe("Skor Tablosu")
/Users/necati/Desktop/Sudoku/Sudoku/View/ScoreboardView.swift:                Text.localizedSafe("Son Oyunlar")
/Users/necati/Desktop/Sudoku/Sudoku/View/ScoreboardView.swift:                Text.localizedSafe(title)
/Users/necati/Desktop/Sudoku/Sudoku/View/ScoreboardView.swift:                Text("Zorluk Seviyesi Kar≈üƒ±la≈ütƒ±rma")
/Users/necati/Desktop/Sudoku/Sudoku/View/ScoreboardView.swift:            if let difficultyString = score.value(forKey: "difficulty") as? String,
/Users/necati/Desktop/Sudoku/Sudoku/View/ScoreboardView.swift:            if let difficultyString = score.value(forKey: "difficulty") as? String,
/Users/necati/Desktop/Sudoku/Sudoku/View/ScoreboardView.swift:            if let errorCount = score.value(forKey: "errorCount") as? Int {
/Users/necati/Desktop/Sudoku/Sudoku/View/ScoreboardView.swift:            if let errorCount = score.value(forKey: "errorCount") as? Int {
/Users/necati/Desktop/Sudoku/Sudoku/View/ScoreboardView.swift:            if let hintCount = score.value(forKey: "hintCount") as? Int {
/Users/necati/Desktop/Sudoku/Sudoku/View/ScoreboardView.swift:            if let hintCount = score.value(forKey: "hintCount") as? Int {
/Users/necati/Desktop/Sudoku/Sudoku/View/ScoreboardView.swift:            let elapsedTime = score.value(forKey: "elapsedTime") as? Double ?? 0
/Users/necati/Desktop/Sudoku/Sudoku/View/ScoreboardView.swift:            let elapsedTime = score.value(forKey: "elapsedTime") as? Double ?? 0
/Users/necati/Desktop/Sudoku/Sudoku/View/ScoreboardView.swift:            let elapsedTime = score.value(forKey: "elapsedTime") as? Double ?? 0
/Users/necati/Desktop/Sudoku/Sudoku/View/ScoreboardView.swift:            let elapsedTime = score.value(forKey: "elapsedTime") as? Double ?? 0
/Users/necati/Desktop/Sudoku/Sudoku/View/ScoreboardView.swift:            let errorCount = score.value(forKey: "errorCount") as? Int ?? 0
/Users/necati/Desktop/Sudoku/Sudoku/View/ScoreboardView.swift:            let errorCount = score.value(forKey: "errorCount") as? Int ?? 0
/Users/necati/Desktop/Sudoku/Sudoku/View/ScoreboardView.swift:            let hintCount = score.value(forKey: "hintCount") as? Int ?? 0
/Users/necati/Desktop/Sudoku/Sudoku/View/ScoreboardView.swift:            let hintCount = score.value(forKey: "hintCount") as? Int ?? 0
/Users/necati/Desktop/Sudoku/Sudoku/View/ScoreboardView.swift:            print("üìù \(selectedDifficulty.rawValue) zorluk seviyesi i√ßin \(difficultyGames) skor bulundu")
/Users/necati/Desktop/Sudoku/Sudoku/View/ScoreboardView.swift:            print("‚ùå Oyun istatistikleri alƒ±namadƒ±: \(error.localizedDescription)")
/Users/necati/Desktop/Sudoku/Sudoku/View/ScoreboardView.swift:            print("üìù T√ºm zorluk seviyeleri i√ßin toplam \(totalGames) skor bulundu")
/Users/necati/Desktop/Sudoku/Sudoku/View/ScoreboardView.swift:            return "bolt.fill"
/Users/necati/Desktop/Sudoku/Sudoku/View/ScoreboardView.swift:            return "bolt.fill"
/Users/necati/Desktop/Sudoku/Sudoku/View/ScoreboardView.swift:            return "bolt.fill"
/Users/necati/Desktop/Sudoku/Sudoku/View/ScoreboardView.swift:            return "flame.fill"
/Users/necati/Desktop/Sudoku/Sudoku/View/ScoreboardView.swift:            return "flame.fill"
/Users/necati/Desktop/Sudoku/Sudoku/View/ScoreboardView.swift:            return "flame.fill"
/Users/necati/Desktop/Sudoku/Sudoku/View/ScoreboardView.swift:            return "Kolay Oyunlarƒ±"
/Users/necati/Desktop/Sudoku/Sudoku/View/ScoreboardView.swift:            return "leaf.fill"
/Users/necati/Desktop/Sudoku/Sudoku/View/ScoreboardView.swift:            return "leaf.fill"
/Users/necati/Desktop/Sudoku/Sudoku/View/ScoreboardView.swift:            return "leaf.fill"
/Users/necati/Desktop/Sudoku/Sudoku/View/ScoreboardView.swift:            return "Orta Oyunlarƒ±"
/Users/necati/Desktop/Sudoku/Sudoku/View/ScoreboardView.swift:            return "questionmark"
/Users/necati/Desktop/Sudoku/Sudoku/View/ScoreboardView.swift:            return "questionmark"
/Users/necati/Desktop/Sudoku/Sudoku/View/ScoreboardView.swift:            return "star.fill"
/Users/necati/Desktop/Sudoku/Sudoku/View/ScoreboardView.swift:            return "star.fill"
/Users/necati/Desktop/Sudoku/Sudoku/View/ScoreboardView.swift:            return "star.fill"
/Users/necati/Desktop/Sudoku/Sudoku/View/ScoreboardView.swift:            return "Uzman Oyunlarƒ±"
/Users/necati/Desktop/Sudoku/Sudoku/View/ScoreboardView.swift:            return "Zor Oyunlarƒ±"
/Users/necati/Desktop/Sudoku/Sudoku/View/ScoreboardView.swift:            Text.localizedSafe(title)
/Users/necati/Desktop/Sudoku/Sudoku/View/ScoreboardView.swift:        case "Kolay":
/Users/necati/Desktop/Sudoku/Sudoku/View/ScoreboardView.swift:        case "Kolay":
/Users/necati/Desktop/Sudoku/Sudoku/View/ScoreboardView.swift:        case "Orta":
/Users/necati/Desktop/Sudoku/Sudoku/View/ScoreboardView.swift:        case "Orta":
/Users/necati/Desktop/Sudoku/Sudoku/View/ScoreboardView.swift:        case "Uzman":
/Users/necati/Desktop/Sudoku/Sudoku/View/ScoreboardView.swift:        case "Uzman":
/Users/necati/Desktop/Sudoku/Sudoku/View/ScoreboardView.swift:        case "Zor":
/Users/necati/Desktop/Sudoku/Sudoku/View/ScoreboardView.swift:        case "Zor":
/Users/necati/Desktop/Sudoku/Sudoku/View/ScoreboardView.swift:        formatter.dateFormat = "d MMM HH:mm"
/Users/necati/Desktop/Sudoku/Sudoku/View/ScoreboardView.swift:        formatter.dateFormat = "d MMM HH:mm"
/Users/necati/Desktop/Sudoku/Sudoku/View/ScoreboardView.swift:        formatter.locale = Locale(identifier: "tr_TR")
/Users/necati/Desktop/Sudoku/Sudoku/View/ScoreboardView.swift:        formatter.locale = Locale(identifier: "tr_TR")
/Users/necati/Desktop/Sudoku/Sudoku/View/ScoreboardView.swift:        guard let difficultyString = score.value(forKey: "difficulty") as? String,
/Users/necati/Desktop/Sudoku/Sudoku/View/ScoreboardView.swift:        guard let difficultyString = score.value(forKey: "difficulty") as? String,
/Users/necati/Desktop/Sudoku/Sudoku/View/ScoreboardView.swift:        if let totalScore = score.value(forKey: "totalScore") as? Int, totalScore > 0 {
/Users/necati/Desktop/Sudoku/Sudoku/View/ScoreboardView.swift:        if let totalScore = score.value(forKey: "totalScore") as? Int, totalScore > 0 {
/Users/necati/Desktop/Sudoku/Sudoku/View/ScoreboardView.swift:        let request = NSFetchRequest<NSManagedObject>(entityName: "HighScore")
/Users/necati/Desktop/Sudoku/Sudoku/View/ScoreboardView.swift:        let totalGamesRequest = NSFetchRequest<NSManagedObject>(entityName: "HighScore")
/Users/necati/Desktop/Sudoku/Sudoku/View/ScoreboardView.swift:        print("üìä Skor tablosu y√ºkleniyor - Zorluk seviyesi: \(selectedDifficulty.rawValue)")
/Users/necati/Desktop/Sudoku/Sudoku/View/ScoreboardView.swift:        request.predicate = NSPredicate(format: "difficulty == %@", selectedDifficulty.rawValue)
/Users/necati/Desktop/Sudoku/Sudoku/View/ScoreboardView.swift:        request.sortDescriptors = [NSSortDescriptor(key: "date", ascending: false)]
/Users/necati/Desktop/Sudoku/Sudoku/View/ScoreboardView.swift:        totalGamesRequest.sortDescriptors = [NSSortDescriptor(key: "date", ascending: false)]
/Users/necati/Desktop/Sudoku/Sudoku/View/ScoreboardView.swift:    return String(format: "%02d:%02d", minutes, seconds)
/Users/necati/Desktop/Sudoku/Sudoku/View/SettingsView.swift:                                            selectedLanguage == "en" ? "üá¨üáß English" : 
/Users/necati/Desktop/Sudoku/Sudoku/View/SettingsView.swift:                                            selectedLanguage == "fr" ? "üá´üá∑ Fran√ßais" : "üá¨üáß English")
/Users/necati/Desktop/Sudoku/Sudoku/View/SettingsView.swift:                                        Image(systemName: "globe")
/Users/necati/Desktop/Sudoku/Sudoku/View/SettingsView.swift:                                        Text.localizedSafe("language.selection")
/Users/necati/Desktop/Sudoku/Sudoku/View/SettingsView.swift:                                        Text(selectedLanguage == "tr" ? "üáπüá∑ T√ºrk√ße" : 
/Users/necati/Desktop/Sudoku/Sudoku/View/SettingsView.swift:                                Image(systemName: "chevron.right")
/Users/necati/Desktop/Sudoku/Sudoku/View/SettingsView.swift:                                Image(systemName: "play.circle.fill")
/Users/necati/Desktop/Sudoku/Sudoku/View/SettingsView.swift:                                Text("Sesi Test Et")
/Users/necati/Desktop/Sudoku/Sudoku/View/SettingsView.swift:                            flag: "üá©üá™",
/Users/necati/Desktop/Sudoku/Sudoku/View/SettingsView.swift:                            flag: "üá™üá∏",
/Users/necati/Desktop/Sudoku/Sudoku/View/SettingsView.swift:                            flag: "üáÆüáπ",
/Users/necati/Desktop/Sudoku/Sudoku/View/SettingsView.swift:                            Image(systemName: "arrow.right.circle.fill")
/Users/necati/Desktop/Sudoku/Sudoku/View/SettingsView.swift:                            Image(systemName: "pencil.circle.fill")
/Users/necati/Desktop/Sudoku/Sudoku/View/SettingsView.swift:                            Image(systemName: "person.badge.plus")
/Users/necati/Desktop/Sudoku/Sudoku/View/SettingsView.swift:                            Image(systemName: "person.circle.fill")
/Users/necati/Desktop/Sudoku/Sudoku/View/SettingsView.swift:                            Image(systemName: "speaker.fill")
/Users/necati/Desktop/Sudoku/Sudoku/View/SettingsView.swift:                            Image(systemName: "speaker.wave.3.fill")
/Users/necati/Desktop/Sudoku/Sudoku/View/SettingsView.swift:                            languageName: "Deutsch",
/Users/necati/Desktop/Sudoku/Sudoku/View/SettingsView.swift:                            languageName: "Espa√±ol",
/Users/necati/Desktop/Sudoku/Sudoku/View/SettingsView.swift:                            languageName: "Italiano",
/Users/necati/Desktop/Sudoku/Sudoku/View/SettingsView.swift:                            localizationManager.setLanguage(AppLanguage(code: "en", name: "English"))
/Users/necati/Desktop/Sudoku/Sudoku/View/SettingsView.swift:                            localizationManager.setLanguage(AppLanguage(code: "fr", name: "Fran√ßais"))
/Users/necati/Desktop/Sudoku/Sudoku/View/SettingsView.swift:                            localizationManager.setLanguage(AppLanguage(code: "tr", name: "T√ºrk√ße"))
/Users/necati/Desktop/Sudoku/Sudoku/View/SettingsView.swift:                            selectedLanguage = "en"
/Users/necati/Desktop/Sudoku/Sudoku/View/SettingsView.swift:                            selectedLanguage = "fr"
/Users/necati/Desktop/Sudoku/Sudoku/View/SettingsView.swift:                            selectedLanguage = "tr"
/Users/necati/Desktop/Sudoku/Sudoku/View/SettingsView.swift:                            Text.localizedSafe("√áƒ±kƒ±≈ü Yap")
/Users/necati/Desktop/Sudoku/Sudoku/View/SettingsView.swift:                            Text.localizedSafe("Giri≈ü Yap")
/Users/necati/Desktop/Sudoku/Sudoku/View/SettingsView.swift:                            Text.localizedSafe("profile.edit")
/Users/necati/Desktop/Sudoku/Sudoku/View/SettingsView.swift:                            Text.localizedSafe("Yeni Hesap Olu≈ütur")
/Users/necati/Desktop/Sudoku/Sudoku/View/SettingsView.swift:                            Text("%\(Int(soundVolume * 100))")
/Users/necati/Desktop/Sudoku/Sudoku/View/SettingsView.swift:                            Text("Ses Seviyesi")
/Users/necati/Desktop/Sudoku/Sudoku/View/SettingsView.swift:                            Text(String(user.name?.prefix(1) ?? "U"))
/Users/necati/Desktop/Sudoku/Sudoku/View/SettingsView.swift:                            title: "text.size.large", 
/Users/necati/Desktop/Sudoku/Sudoku/View/SettingsView.swift:                            title: "text.size.medium", 
/Users/necati/Desktop/Sudoku/Sudoku/View/SettingsView.swift:                            title: "text.size.small",
/Users/necati/Desktop/Sudoku/Sudoku/View/SettingsView.swift:                        flag: "üá´üá∑",
/Users/necati/Desktop/Sudoku/Sudoku/View/SettingsView.swift:                        flag: "üá¨üáß",
/Users/necati/Desktop/Sudoku/Sudoku/View/SettingsView.swift:                        flag: "üáπüá∑",
/Users/necati/Desktop/Sudoku/Sudoku/View/SettingsView.swift:                        Image(systemName: "battery.25")
/Users/necati/Desktop/Sudoku/Sudoku/View/SettingsView.swift:                        Image(systemName: "bolt.fill")
/Users/necati/Desktop/Sudoku/Sudoku/View/SettingsView.swift:                        Image(systemName: "chevron.right")
/Users/necati/Desktop/Sudoku/Sudoku/View/SettingsView.swift:                        Image(systemName: "chevron.right")
/Users/necati/Desktop/Sudoku/Sudoku/View/SettingsView.swift:                        Image(systemName: "chevron.right")
/Users/necati/Desktop/Sudoku/Sudoku/View/SettingsView.swift:                        Image(systemName: "moon.fill")
/Users/necati/Desktop/Sudoku/Sudoku/View/SettingsView.swift:                        Image(systemName: "person.fill")
/Users/necati/Desktop/Sudoku/Sudoku/View/SettingsView.swift:                        Image(systemName: "person.fill")
/Users/necati/Desktop/Sudoku/Sudoku/View/SettingsView.swift:                        Image(systemName: "speaker.wave.3.fill")
/Users/necati/Desktop/Sudoku/Sudoku/View/SettingsView.swift:                        isSelected: selectedLanguage == "en",
/Users/necati/Desktop/Sudoku/Sudoku/View/SettingsView.swift:                        isSelected: selectedLanguage == "fr",
/Users/necati/Desktop/Sudoku/Sudoku/View/SettingsView.swift:                        isSelected: selectedLanguage == "tr",
/Users/necati/Desktop/Sudoku/Sudoku/View/SettingsView.swift:                        languageName: "English",
/Users/necati/Desktop/Sudoku/Sudoku/View/SettingsView.swift:                        languageName: "Fran√ßais",
/Users/necati/Desktop/Sudoku/Sudoku/View/SettingsView.swift:                        languageName: "T√ºrk√ße",
/Users/necati/Desktop/Sudoku/Sudoku/View/SettingsView.swift:                        NotificationCenter.default.post(name: Notification.Name("ForceUIUpdate"), object: nil)
/Users/necati/Desktop/Sudoku/Sudoku/View/SettingsView.swift:                        NotificationCenter.default.post(name: Notification.Name("UserLoggedOut"), object: nil)
/Users/necati/Desktop/Sudoku/Sudoku/View/SettingsView.swift:                        Text.localizedSafe("coming.soon.languages")
/Users/necati/Desktop/Sudoku/Sudoku/View/SettingsView.swift:                        Text.localizedSafe("Geli≈ütirici")
/Users/necati/Desktop/Sudoku/Sudoku/View/SettingsView.swift:                        Text.localizedSafe("Giri≈ü Yapmadƒ±nƒ±z")
/Users/necati/Desktop/Sudoku/Sudoku/View/SettingsView.swift:                        Text.localizedSafe("language.selection")
/Users/necati/Desktop/Sudoku/Sudoku/View/SettingsView.swift:                        Text.localizedSafe("Profil")
/Users/necati/Desktop/Sudoku/Sudoku/View/SettingsView.swift:                        Text.localizedSafe("Skorlarƒ±nƒ±zƒ± kaydetmek ve cihazlar arasƒ± senkronizasyon i√ßin giri≈ü yapƒ±n")
/Users/necati/Desktop/Sudoku/Sudoku/View/SettingsView.swift:                        Text("@\(user.username ?? "")")
/Users/necati/Desktop/Sudoku/Sudoku/View/SettingsView.swift:                        Text("\(Int(powerManager.batteryLevel * 100))%")
/Users/necati/Desktop/Sudoku/Sudoku/View/SettingsView.swift:                        Text("D√º≈ü√ºk Pil")
/Users/necati/Desktop/Sudoku/Sudoku/View/SettingsView.swift:                        Text("Karanlƒ±k Mod")
/Users/necati/Desktop/Sudoku/Sudoku/View/SettingsView.swift:                        Text("Karanlƒ±k tema aktif eder")
/Users/necati/Desktop/Sudoku/Sudoku/View/SettingsView.swift:                        Text("Navigasyon sorunu giderilene kadar")
/Users/necati/Desktop/Sudoku/Sudoku/View/SettingsView.swift:                        Text("Necati Yƒ±ldƒ±rƒ±m")
/Users/necati/Desktop/Sudoku/Sudoku/View/SettingsView.swift:                        Text("Otomatik G√º√ß Tasarrufu")
/Users/necati/Desktop/Sudoku/Sudoku/View/SettingsView.swift:                        Text("Pil Durumu")
/Users/necati/Desktop/Sudoku/Sudoku/View/SettingsView.swift:                        Text("Tamam")
/Users/necati/Desktop/Sudoku/Sudoku/View/SettingsView.swift:                        Text("Y√ºksek Performans Modu")
/Users/necati/Desktop/Sudoku/Sudoku/View/SettingsView.swift:                        Text(user.email ?? "")
/Users/necati/Desktop/Sudoku/Sudoku/View/SettingsView.swift:                        Text(user.name ?? "ƒ∞simsiz Kullanƒ±cƒ±")
/Users/necati/Desktop/Sudoku/Sudoku/View/SettingsView.swift:                    debugPrint("√áƒ±kƒ±≈ü i≈ülemi ba≈ülatƒ±lƒ±yor, mevcut kullanƒ±cƒ±: \(String(describing: PersistenceController.shared.getCurrentUser()?.username))")
/Users/necati/Desktop/Sudoku/Sudoku/View/SettingsView.swift:                    debugPrint("√áƒ±kƒ±≈ü i≈ülemi tamamlandƒ±, mevcut kullanƒ±cƒ±: \(String(describing: PersistenceController.shared.getCurrentUser()?.username))")
/Users/necati/Desktop/Sudoku/Sudoku/View/SettingsView.swift:                    Image(systemName: "arrow.counterclockwise.circle.fill")
/Users/necati/Desktop/Sudoku/Sudoku/View/SettingsView.swift:                    Image(systemName: "battery.0")
/Users/necati/Desktop/Sudoku/Sudoku/View/SettingsView.swift:                    Image(systemName: "checkmark")
/Users/necati/Desktop/Sudoku/Sudoku/View/SettingsView.swift:                    Image(systemName: "chevron.right")
/Users/necati/Desktop/Sudoku/Sudoku/View/SettingsView.swift:                    Image(systemName: "gearshape.fill")
/Users/necati/Desktop/Sudoku/Sudoku/View/SettingsView.swift:                    Image(systemName: "iphone.radiowaves.left.and.right")
/Users/necati/Desktop/Sudoku/Sudoku/View/SettingsView.swift:                    Image(systemName: "person.circle.fill")
/Users/necati/Desktop/Sudoku/Sudoku/View/SettingsView.swift:                    Image(systemName: "speaker.wave.2.fill")
/Users/necati/Desktop/Sudoku/Sudoku/View/SettingsView.swift:                    Image(systemName: "textformat.size")
/Users/necati/Desktop/Sudoku/Sudoku/View/SettingsView.swift:                    sectionHeader(title: "G√º√ß Y√∂netimi", systemImage: "bolt.circle.fill")
/Users/necati/Desktop/Sudoku/Sudoku/View/SettingsView.swift:                    sectionHeader(title: "G√º√ß Y√∂netimi", systemImage: "bolt.circle")
/Users/necati/Desktop/Sudoku/Sudoku/View/SettingsView.swift:                    Text.localizedSafe("coming.soon")
/Users/necati/Desktop/Sudoku/Sudoku/View/SettingsView.swift:                    Text.localizedSafe("language." + language.code)
/Users/necati/Desktop/Sudoku/Sudoku/View/SettingsView.swift:                    Text.localizedSafe("text.size")
/Users/necati/Desktop/Sudoku/Sudoku/View/SettingsView.swift:                    Text("Cihazƒ±n g√∂r√ºn√ºm ayarƒ±nƒ± kullan (a√ßƒ±k/koyu)")
/Users/necati/Desktop/Sudoku/Sudoku/View/SettingsView.swift:                    Text("Geli≈ütirici: Necati Yƒ±ldƒ±rƒ±m")
/Users/necati/Desktop/Sudoku/Sudoku/View/SettingsView.swift:                    Text("G√º√ß tasarrufu modu, bazƒ± g√∂rsel efektleri ve animasyonlarƒ± devre dƒ±≈üƒ± bƒ±rakƒ±r veya basitle≈ütirir.")
/Users/necati/Desktop/Sudoku/Sudoku/View/SettingsView.swift:                    Text("Oyun i√ßi ses efektlerini a√ß/kapa")
/Users/necati/Desktop/Sudoku/Sudoku/View/SettingsView.swift:                    Text("Oyun i√ßi titre≈üim efektlerini a√ß/kapa")
/Users/necati/Desktop/Sudoku/Sudoku/View/SettingsView.swift:                    Text("S")
/Users/necati/Desktop/Sudoku/Sudoku/View/SettingsView.swift:                    Text("Ses Efektleri")
/Users/necati/Desktop/Sudoku/Sudoku/View/SettingsView.swift:                    Text("Sistem G√∂r√ºn√ºm√ºn√º Kullan")
/Users/necati/Desktop/Sudoku/Sudoku/View/SettingsView.swift:                    Text("S√ºr√ºm 1.0")
/Users/necati/Desktop/Sudoku/Sudoku/View/SettingsView.swift:                    Text("Titre≈üim Geri Bildirimi")
/Users/necati/Desktop/Sudoku/Sudoku/View/SettingsView.swift:                    Text("T√ºm Ayarlarƒ± Sƒ±fƒ±rla")
/Users/necati/Desktop/Sudoku/Sudoku/View/SettingsView.swift:                    Text("Y√ºksek performans modu daha akƒ±cƒ± animasyonlar ve g√∂rsel efektler saƒülar ancak pil kullanƒ±mƒ±nƒ± artƒ±rƒ±r.")
/Users/necati/Desktop/Sudoku/Sudoku/View/SettingsView.swift:                .navigationBarTitle(Text.localized("settings.title"), displayMode: .large)
/Users/necati/Desktop/Sudoku/Sudoku/View/SettingsView.swift:                description: "Bu Sudoku uygulamasƒ±, klasik Sudoku oyununu modern bir aray√ºzle sunmak i√ßin tasarlanmƒ±≈ütƒ±r. D√∂rt farklƒ± zorluk seviyesi, not alma √∂zellikleri, ve daha fazlasƒ±yla dolu bir oyun deneyimi sunar.",
/Users/necati/Desktop/Sudoku/Sudoku/View/SettingsView.swift:                iconName: "info.circle.fill",
/Users/necati/Desktop/Sudoku/Sudoku/View/SettingsView.swift:                Image(systemName: "arrow.up.right.square")
/Users/necati/Desktop/Sudoku/Sudoku/View/SettingsView.swift:                Image(systemName: "globe")
/Users/necati/Desktop/Sudoku/Sudoku/View/SettingsView.swift:                Image(systemName: "person.badge.plus")
/Users/necati/Desktop/Sudoku/Sudoku/View/SettingsView.swift:                Image(systemName: "person.fill.badge.plus")
/Users/necati/Desktop/Sudoku/Sudoku/View/SettingsView.swift:                Image(systemName: "rectangle.portrait.and.arrow.right")
/Users/necati/Desktop/Sudoku/Sudoku/View/SettingsView.swift:                sectionHeader(title: "G√∂r√ºn√ºm", systemImage: "paintbrush.fill")
/Users/necati/Desktop/Sudoku/Sudoku/View/SettingsView.swift:                sectionHeader(title: "Oyun Ayarlarƒ±", systemImage: "gamecontroller.fill")
/Users/necati/Desktop/Sudoku/Sudoku/View/SettingsView.swift:                sectionHeader(title: "Profil", systemImage: "person.crop.circle.fill")
/Users/necati/Desktop/Sudoku/Sudoku/View/SettingsView.swift:                Text.localizedSafe("language.selection")
/Users/necati/Desktop/Sudoku/Sudoku/View/SettingsView.swift:                Text.localizedSafe(title)
/Users/necati/Desktop/Sudoku/Sudoku/View/SettingsView.swift:                Text("√áƒ±kƒ±≈ü Yap")
/Users/necati/Desktop/Sudoku/Sudoku/View/SettingsView.swift:                Text("Giri≈ü Yap")
/Users/necati/Desktop/Sudoku/Sudoku/View/SettingsView.swift:                Text("G√º√ß tasarrufu modu, cihazƒ±nƒ±zƒ±n pil √∂mr√ºn√º uzatƒ±r.")
/Users/necati/Desktop/Sudoku/Sudoku/View/SettingsView.swift:                Text("Kayƒ±t Ol")
/Users/necati/Desktop/Sudoku/Sudoku/View/SettingsView.swift:                Text("Performans")
/Users/necati/Desktop/Sudoku/Sudoku/View/SettingsView.swift:                Text("Sudoku")
/Users/necati/Desktop/Sudoku/Sudoku/View/SettingsView.swift:                Text("S√ºr√ºm 1.0")
/Users/necati/Desktop/Sudoku/Sudoku/View/SettingsView.swift:                title: "Uygulama Hakkƒ±nda",
/Users/necati/Desktop/Sudoku/Sudoku/View/SettingsView.swift:            batteryLevel = "battery.0"
/Users/necati/Desktop/Sudoku/Sudoku/View/SettingsView.swift:            batteryLevel = "battery.100"
/Users/necati/Desktop/Sudoku/Sudoku/View/SettingsView.swift:            batteryLevel = "battery.25"
/Users/necati/Desktop/Sudoku/Sudoku/View/SettingsView.swift:            batteryLevel = "battery.50"
/Users/necati/Desktop/Sudoku/Sudoku/View/SettingsView.swift:            batteryLevel = "battery.75"
/Users/necati/Desktop/Sudoku/Sudoku/View/SettingsView.swift:            forName: Notification.Name("ShowRegisterView"),
/Users/necati/Desktop/Sudoku/Sudoku/View/SettingsView.swift:            if title == "Titre≈üim Geri Bildirimi" {
/Users/necati/Desktop/Sudoku/Sudoku/View/SettingsView.swift:            name: Notification.Name("ShowRegisterView"),
/Users/necati/Desktop/Sudoku/Sudoku/View/SettingsView.swift:            NotificationCenter.default.post(name: Notification.Name("ForceUIUpdate"), object: nil)
/Users/necati/Desktop/Sudoku/Sudoku/View/SettingsView.swift:            NotificationCenter.default.post(name: Notification.Name("ForceUIUpdate"), object: nil)
/Users/necati/Desktop/Sudoku/Sudoku/View/SettingsView.swift:            Text.localizedSafe(title)
/Users/necati/Desktop/Sudoku/Sudoku/View/SettingsView.swift:            Text("¬© 2024 Necati Yƒ±ldƒ±rƒ±m")
/Users/necati/Desktop/Sudoku/Sudoku/View/SettingsView.swift:            Text("Tamam")
/Users/necati/Desktop/Sudoku/Sudoku/View/SettingsView.swift:        NotificationCenter.default.post(name: Notification.Name("TextSizeChanged"), object: nil)
/Users/necati/Desktop/Sudoku/Sudoku/View/SettingsView.swift:        print("üåê Dil deƒüi≈ütirildi: \(previousLanguageName) -> \(newValue.name)")
/Users/necati/Desktop/Sudoku/Sudoku/View/SettingsView.swift:        print("üì± Metin boyutu deƒüi≈ütirildi: \(previousValue.rawValue) -> \(newValue.rawValue)")
/Users/necati/Desktop/Sudoku/Sudoku/View/SettingsView.swift:        return isCharging ? batteryLevel + ".charge" : batteryLevel
/Users/necati/Desktop/Sudoku/Sudoku/View/SettingsView.swift:    @AppStorage("autoPowerSaving") private var autoPowerSaving: Bool = true
/Users/necati/Desktop/Sudoku/Sudoku/View/SettingsView.swift:    @AppStorage("defaultDifficulty") private var defaultDifficulty: String = SudokuBoard.Difficulty.easy.rawValue
/Users/necati/Desktop/Sudoku/Sudoku/View/SettingsView.swift:    @AppStorage("enableCellTapHaptic") private var enableCellTapHaptic: Bool = true
/Users/necati/Desktop/Sudoku/Sudoku/View/SettingsView.swift:    @AppStorage("enableHapticFeedback") private var enableHapticFeedback: Bool = true
/Users/necati/Desktop/Sudoku/Sudoku/View/SettingsView.swift:    @AppStorage("enableHapticFeedback") private var enableHapticFeedback: Bool = true
/Users/necati/Desktop/Sudoku/Sudoku/View/SettingsView.swift:    @AppStorage("enableNumberInputHaptic") private var enableNumberInputHaptic: Bool = true
/Users/necati/Desktop/Sudoku/Sudoku/View/SettingsView.swift:    @AppStorage("enableSoundEffects") private var enableSoundEffects: Bool = true
/Users/necati/Desktop/Sudoku/Sudoku/View/SettingsView.swift:    @AppStorage("highPerformanceMode") private var highPerformanceMode: Bool = false
/Users/necati/Desktop/Sudoku/Sudoku/View/SettingsView.swift:    @AppStorage("powerSavingMode") private var powerSavingMode: Bool = false
/Users/necati/Desktop/Sudoku/Sudoku/View/SettingsView.swift:    @AppStorage("prefersDarkMode") private var prefersDarkMode: Bool = false
/Users/necati/Desktop/Sudoku/Sudoku/View/SettingsView.swift:    @AppStorage("soundVolume") private var soundVolume: Double = 0.7
/Users/necati/Desktop/Sudoku/Sudoku/View/SettingsView.swift:    @AppStorage("textSizePreference") private var textSizeString = TextSizePreference.medium.rawValue
/Users/necati/Desktop/Sudoku/Sudoku/View/SettingsView.swift:    @AppStorage("textSizePreference") private var textSizeString: String = TextSizePreference.medium.rawValue
/Users/necati/Desktop/Sudoku/Sudoku/View/SettingsView.swift:    @State private var email = ""
/Users/necati/Desktop/Sudoku/Sudoku/View/SettingsView.swift:    @State private var errorMessage = ""
/Users/necati/Desktop/Sudoku/Sudoku/View/SettingsView.swift:    @State private var name = ""
/Users/necati/Desktop/Sudoku/Sudoku/View/SettingsView.swift:    @State private var password = ""
/Users/necati/Desktop/Sudoku/Sudoku/View/SettingsView.swift:    @State private var selectedLanguage = UserDefaults.standard.string(forKey: "app_language") ?? "tr"
/Users/necati/Desktop/Sudoku/Sudoku/View/SettingsView.swift:    @State private var username = ""
/Users/necati/Desktop/Sudoku/Sudoku/View/StartupView.swift:                                Text.localizedSafe("Geli≈ütirici")
/Users/necati/Desktop/Sudoku/Sudoku/View/StartupView.swift:                                Text("N")
/Users/necati/Desktop/Sudoku/Sudoku/View/StartupView.swift:                                Text("Necati Yƒ±ldƒ±rƒ±m")
/Users/necati/Desktop/Sudoku/Sudoku/View/StartupView.swift:                            Text("\(numbers[index])")
/Users/necati/Desktop/Sudoku/Sudoku/View/StartupView.swift:                        print("üöÄ StartupView uygulamayƒ± ba≈ülatƒ±yor...")
/Users/necati/Desktop/Sudoku/Sudoku/View/StartupView.swift:                        Text.localizedSafe("Zihninizi √áalƒ±≈ütƒ±rƒ±n")
/Users/necati/Desktop/Sudoku/Sudoku/View/StartupView.swift:                        Text(LocalizationManager.shared.localizedString(for: "SUDOKU"))
/Users/necati/Desktop/Sudoku/Sudoku/View/StartupView.swift:                    print("üöÄ StartupView \(displayDuration) saniye sonra ContentView'a ge√ßecek...")
/Users/necati/Desktop/Sudoku/Sudoku/View/SudokuBoardView.swift:                                        .id("cell_\(row)_\(column)")
/Users/necati/Desktop/Sudoku/Sudoku/View/SudokuBoardView.swift:        .id("\(row)\(column)\(cellValue ?? 0)\(isSelected)\(pencilMarks.hashValue)")
/Users/necati/Desktop/Sudoku/Sudoku/View/SudokuCellView.swift:                    Text("\(mark)")
/Users/necati/Desktop/Sudoku/Sudoku/View/SudokuCellView.swift:                Text("\(value)")
/Users/necati/Desktop/Sudoku/Sudoku/View/SudokuCellView.swift:    @AppStorage("enableCellTapHaptic") private var enableCellTapHaptic = true
/Users/necati/Desktop/Sudoku/Sudoku/View/SudokuCellView.swift:    @AppStorage("enableHapticFeedback") private var enableHapticFeedback = true
/Users/necati/Desktop/Sudoku/Sudoku/View/TestView.swift:                    Text("\((row + col) % 9 + 1)")
/Users/necati/Desktop/Sudoku/Sudoku/View/TestView.swift:                Text("Oyunu Ba≈ülat")
/Users/necati/Desktop/Sudoku/Sudoku/View/TestView.swift:                Text("Ses Efektleri")
/Users/necati/Desktop/Sudoku/Sudoku/View/TestView.swift:                Text("SUDOKU")
/Users/necati/Desktop/Sudoku/Sudoku/View/TestView.swift:            case "Kolay":
/Users/necati/Desktop/Sudoku/Sudoku/View/TestView.swift:            case "Orta":
/Users/necati/Desktop/Sudoku/Sudoku/View/TestView.swift:            case "Uzman":
/Users/necati/Desktop/Sudoku/Sudoku/View/TestView.swift:            case "Zor":
/Users/necati/Desktop/Sudoku/Sudoku/View/TestView.swift:            Text("Zorluk Seviyesi")
/Users/necati/Desktop/Sudoku/Sudoku/View/TestView.swift:    @State private var selectedDifficulty: String = "Kolay"
/Users/necati/Desktop/Sudoku/Sudoku/View/TestView.swift:    let difficulties = ["Kolay", "Orta", "Zor", "Uzman"]
/Users/necati/Desktop/Sudoku/Sudoku/View/TutorialOverlayView.swift:                                Image(systemName: "arrow.left")
/Users/necati/Desktop/Sudoku/Sudoku/View/TutorialOverlayView.swift:                                Image(systemName: "arrow.right")
/Users/necati/Desktop/Sudoku/Sudoku/View/TutorialOverlayView.swift:                                Text("Geri")
/Users/necati/Desktop/Sudoku/Sudoku/View/TutorialOverlayView.swift:                            Text(currentStep == .completed ? "Tamam" : "ƒ∞leri")
/Users/necati/Desktop/Sudoku/Sudoku/View/TutorialOverlayView.swift:                Image(systemName: "questionmark.circle.fill")
/Users/necati/Desktop/Sudoku/Sudoku/View/TutorialOverlayView.swift:                Text("Rehber")
/Users/necati/Desktop/Sudoku/Sudoku/View/TutorialOverlayView.swift:        case "board":
/Users/necati/Desktop/Sudoku/Sudoku/View/TutorialOverlayView.swift:        case "hintButton":
/Users/necati/Desktop/Sudoku/Sudoku/View/TutorialOverlayView.swift:        case "notesButton":
/Users/necati/Desktop/Sudoku/Sudoku/View/TutorialOverlayView.swift:        case "numberPad":
/Users/necati/Desktop/Sudoku/Sudoku/View/TutorialView.swift:                                                        Text("\(note)")
/Users/necati/Desktop/Sudoku/Sudoku/View/TutorialView.swift:                                    Text("?")
/Users/necati/Desktop/Sudoku/Sudoku/View/TutorialView.swift:                                    Text("\(value)")
/Users/necati/Desktop/Sudoku/Sudoku/View/TutorialView.swift:                                    Text("5")
/Users/necati/Desktop/Sudoku/Sudoku/View/TutorialView.swift:                            Image(systemName: "chevron.left")
/Users/necati/Desktop/Sudoku/Sudoku/View/TutorialView.swift:                            Image(systemName: currentStep == tutorialSteps.count - 1 ? "checkmark" : "chevron.right")
/Users/necati/Desktop/Sudoku/Sudoku/View/TutorialView.swift:                        Image(systemName: "xmark.circle.fill")
/Users/necati/Desktop/Sudoku/Sudoku/View/TutorialView.swift:                        let tipTitle = bundle?.localizedString(forKey: "tutorial_tip_title", value: "TIP", table: "Localizable") ?? "TIP"
/Users/necati/Desktop/Sudoku/Sudoku/View/TutorialView.swift:                    Bundle(path: $0)?.localizedString(forKey: "Example Not Available", value: "Example Not Available", table: "Localizable")
/Users/necati/Desktop/Sudoku/Sudoku/View/TutorialView.swift:                } ?? "Example Not Available"
/Users/necati/Desktop/Sudoku/Sudoku/View/TutorialView.swift:                descriptionKey: "tutorial_desc_basic_strategies",
/Users/necati/Desktop/Sudoku/Sudoku/View/TutorialView.swift:                descriptionKey: "tutorial_desc_cell_selection",
/Users/necati/Desktop/Sudoku/Sudoku/View/TutorialView.swift:                descriptionKey: "tutorial_desc_completed",
/Users/necati/Desktop/Sudoku/Sudoku/View/TutorialView.swift:                descriptionKey: "tutorial_desc_game_rules",
/Users/necati/Desktop/Sudoku/Sudoku/View/TutorialView.swift:                descriptionKey: "tutorial_desc_hints",
/Users/necati/Desktop/Sudoku/Sudoku/View/TutorialView.swift:                descriptionKey: "tutorial_desc_notes_mode",
/Users/necati/Desktop/Sudoku/Sudoku/View/TutorialView.swift:                descriptionKey: "tutorial_desc_number_entry",
/Users/necati/Desktop/Sudoku/Sudoku/View/TutorialView.swift:                descriptionKey: "tutorial_desc_welcome",
/Users/necati/Desktop/Sudoku/Sudoku/View/TutorialView.swift:                if UserDefaults.standard.string(forKey: "app_language") != nil {
/Users/necati/Desktop/Sudoku/Sudoku/View/TutorialView.swift:                if UserDefaults.standard.string(forKey: "app_language") != nil {
/Users/necati/Desktop/Sudoku/Sudoku/View/TutorialView.swift:                image: "sudoku.help",
/Users/necati/Desktop/Sudoku/Sudoku/View/TutorialView.swift:                image: "sudoku.input",
/Users/necati/Desktop/Sudoku/Sudoku/View/TutorialView.swift:                image: "sudoku.intro",
/Users/necati/Desktop/Sudoku/Sudoku/View/TutorialView.swift:                image: "sudoku.notes",
/Users/necati/Desktop/Sudoku/Sudoku/View/TutorialView.swift:                image: "sudoku.ready",
/Users/necati/Desktop/Sudoku/Sudoku/View/TutorialView.swift:                image: "sudoku.rules",
/Users/necati/Desktop/Sudoku/Sudoku/View/TutorialView.swift:                image: "sudoku.strategy1",
/Users/necati/Desktop/Sudoku/Sudoku/View/TutorialView.swift:                image: "sudoku.strategy2",
/Users/necati/Desktop/Sudoku/Sudoku/View/TutorialView.swift:                let noExampleText = Bundle.main.path(forResource: appLanguage, ofType: "lproj").flatMap {
/Users/necati/Desktop/Sudoku/Sudoku/View/TutorialView.swift:                tipKey: "tutorial_tip_basic_strategies"
/Users/necati/Desktop/Sudoku/Sudoku/View/TutorialView.swift:                tipKey: "tutorial_tip_cell_selection"
/Users/necati/Desktop/Sudoku/Sudoku/View/TutorialView.swift:                tipKey: "tutorial_tip_completed"
/Users/necati/Desktop/Sudoku/Sudoku/View/TutorialView.swift:                tipKey: "tutorial_tip_game_rules"
/Users/necati/Desktop/Sudoku/Sudoku/View/TutorialView.swift:                tipKey: "tutorial_tip_hints"
/Users/necati/Desktop/Sudoku/Sudoku/View/TutorialView.swift:                tipKey: "tutorial_tip_notes_mode"
/Users/necati/Desktop/Sudoku/Sudoku/View/TutorialView.swift:                tipKey: "tutorial_tip_number_entry"
/Users/necati/Desktop/Sudoku/Sudoku/View/TutorialView.swift:                tipKey: "tutorial_tip_welcome"
/Users/necati/Desktop/Sudoku/Sudoku/View/TutorialView.swift:                titleKey: "tutorial_title_basic_strategies",
/Users/necati/Desktop/Sudoku/Sudoku/View/TutorialView.swift:                titleKey: "tutorial_title_cell_selection",
/Users/necati/Desktop/Sudoku/Sudoku/View/TutorialView.swift:                titleKey: "tutorial_title_completed",
/Users/necati/Desktop/Sudoku/Sudoku/View/TutorialView.swift:                titleKey: "tutorial_title_game_rules",
/Users/necati/Desktop/Sudoku/Sudoku/View/TutorialView.swift:                titleKey: "tutorial_title_hints",
/Users/necati/Desktop/Sudoku/Sudoku/View/TutorialView.swift:                titleKey: "tutorial_title_notes_mode",
/Users/necati/Desktop/Sudoku/Sudoku/View/TutorialView.swift:                titleKey: "tutorial_title_number_entry",
/Users/necati/Desktop/Sudoku/Sudoku/View/TutorialView.swift:                titleKey: "tutorial_title_welcome",
/Users/necati/Desktop/Sudoku/Sudoku/View/TutorialView.swift:            return Image(systemName: "checkmark.circle.fill")
/Users/necati/Desktop/Sudoku/Sudoku/View/TutorialView.swift:            return Image(systemName: "hand.tap.fill")
/Users/necati/Desktop/Sudoku/Sudoku/View/TutorialView.swift:            return Image(systemName: "lightbulb.fill")
/Users/necati/Desktop/Sudoku/Sudoku/View/TutorialView.swift:            return Image(systemName: "list.bullet")
/Users/necati/Desktop/Sudoku/Sudoku/View/TutorialView.swift:            return Image(systemName: "pencil")
/Users/necati/Desktop/Sudoku/Sudoku/View/TutorialView.swift:            return Image(systemName: "questionmark.circle.fill")
/Users/necati/Desktop/Sudoku/Sudoku/View/TutorialView.swift:            return Image(systemName: "square.grid.3x3.fill")
/Users/necati/Desktop/Sudoku/Sudoku/View/TutorialView.swift:        } else if title.contains("Cell") || title.contains("Cellule") || title.contains("H√ºcre") {
/Users/necati/Desktop/Sudoku/Sudoku/View/TutorialView.swift:        } else if title.contains("Cell") || title.contains("Cellule") || title.contains("H√ºcre") {
/Users/necati/Desktop/Sudoku/Sudoku/View/TutorialView.swift:        } else if title.contains("Completed") || title.contains("F√©licitations") || title.contains("Tebrikler") {
/Users/necati/Desktop/Sudoku/Sudoku/View/TutorialView.swift:        } else if title.contains("Completed") || title.contains("F√©licitations") || title.contains("Tebrikler") {
/Users/necati/Desktop/Sudoku/Sudoku/View/TutorialView.swift:        } else if title.contains("Game Rules") || title.contains("R√®gles") || title.contains("Kurallar") {
/Users/necati/Desktop/Sudoku/Sudoku/View/TutorialView.swift:        } else if title.contains("Game Rules") || title.contains("R√®gles") || title.contains("Kurallar") {
/Users/necati/Desktop/Sudoku/Sudoku/View/TutorialView.swift:        } else if title.contains("Hints") || title.contains("Indices") || title.contains("ƒ∞pucu") {
/Users/necati/Desktop/Sudoku/Sudoku/View/TutorialView.swift:        } else if title.contains("Hints") || title.contains("Indices") || title.contains("ƒ∞pucu") {
/Users/necati/Desktop/Sudoku/Sudoku/View/TutorialView.swift:        } else if title.contains("Notes") || title.contains("Not") {
/Users/necati/Desktop/Sudoku/Sudoku/View/TutorialView.swift:        } else if title.contains("Notes") || title.contains("Not") {
/Users/necati/Desktop/Sudoku/Sudoku/View/TutorialView.swift:        backButtonText = bundle?.localizedString(forKey: "Back", value: "Back", table: "Localizable") ?? "Back"
/Users/necati/Desktop/Sudoku/Sudoku/View/TutorialView.swift:        completeButtonText = bundle?.localizedString(forKey: "Complete", value: "Complete", table: "Localizable") ?? "Complete"
/Users/necati/Desktop/Sudoku/Sudoku/View/TutorialView.swift:        if title.contains("Welcome") || title.contains("Bienvenue") || title.contains("Ho≈ü Geldiniz") {
/Users/necati/Desktop/Sudoku/Sudoku/View/TutorialView.swift:        if title.contains("Welcome") || title.contains("Bienvenue") || title.contains("Ho≈ü Geldiniz") {
/Users/necati/Desktop/Sudoku/Sudoku/View/TutorialView.swift:        let description = bundle?.localizedString(forKey: step.descriptionKey, value: step.descriptionKey, table: "Localizable") ?? step.descriptionKey
/Users/necati/Desktop/Sudoku/Sudoku/View/TutorialView.swift:        let exampleDescription = bundle?.localizedString(forKey: "Due to other numbers in the row, column, and 3x3 block, only 4 can be placed in this cell.", value: "Due to other numbers in the row, column, and 3x3 block, only 4 can be placed in this cell.", table: "Localizable") ?? "Due to other numbers in the row, column, and 3x3 block, only 4 can be placed in this cell."
/Users/necati/Desktop/Sudoku/Sudoku/View/TutorialView.swift:        let exampleDescription = bundle?.localizedString(forKey: "In this region, 5 can only be placed in this cell because there's no room for 5 in other cells.", value: "In this region, 5 can only be placed in this cell because there's no room for 5 in other cells.", table: "Localizable") ?? "In this region, 5 can only be placed in this cell because there's no room for 5 in other cells."
/Users/necati/Desktop/Sudoku/Sudoku/View/TutorialView.swift:        let exampleTitle = bundle?.localizedString(forKey: "Example: Number 5 can only be placed in this cell", value: "Example: Number 5 can only be placed in this cell", table: "Localizable") ?? "Example: Number 5 can only be placed in this cell"
/Users/necati/Desktop/Sudoku/Sudoku/View/TutorialView.swift:        let exampleTitle = bundle?.localizedString(forKey: "Example: This cell can only contain 4", value: "Example: This cell can only contain 4", table: "Localizable") ?? "Example: This cell can only contain 4"
/Users/necati/Desktop/Sudoku/Sudoku/View/TutorialView.swift:        let formattedStepText = String(format: bundle?.localizedString(forKey: "Step %d / %d", value: "Step %d / %d", table: "Localizable") ?? "Step %d / %d", stepNumber, tutorialSteps.count)
/Users/necati/Desktop/Sudoku/Sudoku/View/TutorialView.swift:        let path = Bundle.main.path(forResource: appLanguage, ofType: "lproj")
/Users/necati/Desktop/Sudoku/Sudoku/View/TutorialView.swift:        let path = Bundle.main.path(forResource: appLanguage, ofType: "lproj")
/Users/necati/Desktop/Sudoku/Sudoku/View/TutorialView.swift:        let path = Bundle.main.path(forResource: appLanguage, ofType: "lproj")
/Users/necati/Desktop/Sudoku/Sudoku/View/TutorialView.swift:        let path = Bundle.main.path(forResource: appLanguage, ofType: "lproj")
/Users/necati/Desktop/Sudoku/Sudoku/View/TutorialView.swift:        let tip = bundle?.localizedString(forKey: step.tipKey, value: step.tipKey, table: "Localizable") ?? step.tipKey
/Users/necati/Desktop/Sudoku/Sudoku/View/TutorialView.swift:        let title = bundle?.localizedString(forKey: step.titleKey, value: step.titleKey, table: "Localizable") ?? step.titleKey
/Users/necati/Desktop/Sudoku/Sudoku/View/TutorialView.swift:        nextButtonText = bundle?.localizedString(forKey: "Next", value: "Next", table: "Localizable") ?? "Next"
/Users/necati/Desktop/Sudoku/Sudoku/View/TutorialView.swift:        NotificationCenter.default.publisher(for: Notification.Name("AppLanguageChanged"))
/Users/necati/Desktop/Sudoku/Sudoku/View/TutorialView.swift:        NotificationCenter.default.publisher(for: Notification.Name("LanguageChanged"))
/Users/necati/Desktop/Sudoku/Sudoku/View/TutorialView.swift:        screenTitle = bundle?.localizedString(forKey: "How to Play", value: "How to Play", table: "Localizable") ?? "How to Play"
/Users/necati/Desktop/Sudoku/Sudoku/View/TutorialView.swift:    @AppStorage("app_language") private var appLanguage: String = "tr"
/Users/necati/Desktop/Sudoku/Sudoku/View/TutorialView.swift:    @State private var backButtonText: String = ""
/Users/necati/Desktop/Sudoku/Sudoku/View/TutorialView.swift:    @State private var completeButtonText: String = ""
/Users/necati/Desktop/Sudoku/Sudoku/View/TutorialView.swift:    @State private var nextButtonText: String = ""
/Users/necati/Desktop/Sudoku/Sudoku/View/TutorialView.swift:    @State private var screenTitle: String = ""
/Users/necati/Desktop/Sudoku/Sudoku/ViewModel/SudokuViewModel.swift:                        errorCount = stats["errorCount"] as? Int ?? 0
/Users/necati/Desktop/Sudoku/Sudoku/ViewModel/SudokuViewModel.swift:                        hintCount = stats["hintCount"] as? Int ?? 0 
/Users/necati/Desktop/Sudoku/Sudoku/ViewModel/SudokuViewModel.swift:                        moveCount = stats["moveCount"] as? Int ?? 0
/Users/necati/Desktop/Sudoku/Sudoku/ViewModel/SudokuViewModel.swift:                        print("‚úÖ ƒ∞statistikler ba≈üarƒ±yla y√ºklendi")
/Users/necati/Desktop/Sudoku/Sudoku/ViewModel/SudokuViewModel.swift:                        remainingHints = stats["remainingHints"] as? Int ?? 3
/Users/necati/Desktop/Sudoku/Sudoku/ViewModel/SudokuViewModel.swift:                    if let errorVal = stats["errorCount"] as? Int {
/Users/necati/Desktop/Sudoku/Sudoku/ViewModel/SudokuViewModel.swift:                    if let hintVal = stats["hintCount"] as? Int {
/Users/necati/Desktop/Sudoku/Sudoku/ViewModel/SudokuViewModel.swift:                    if let moveVal = stats["moveCount"] as? Int {
/Users/necati/Desktop/Sudoku/Sudoku/ViewModel/SudokuViewModel.swift:                    if let remainingVal = stats["remainingHints"] as? Int {
/Users/necati/Desktop/Sudoku/Sudoku/ViewModel/SudokuViewModel.swift:                    if let stats = json["stats"] as? [String: Any] {
/Users/necati/Desktop/Sudoku/Sudoku/ViewModel/SudokuViewModel.swift:                    print("‚úÖ Oyun istatistikleri g√ºncellendi")
/Users/necati/Desktop/Sudoku/Sudoku/ViewModel/SudokuViewModel.swift:                    print("‚ùå Oyun kaybedildi! Kayƒ±tlƒ± oyun silindi.")
/Users/necati/Desktop/Sudoku/Sudoku/ViewModel/SudokuViewModel.swift:                  description: NSLocalizedString("Bu h√ºcre, sudoku tahtasƒ±nda √ß√∂z√ºlebilir bir h√ºcre olarak belirlendi.", comment: "ƒ∞pucu a√ßƒ±klamasƒ±"))
/Users/necati/Desktop/Sudoku/Sudoku/ViewModel/SudokuViewModel.swift:                  description: NSLocalizedString("Bu h√ºcrenin aynƒ± satƒ±r, s√ºtun ve blokta bulunan diƒüer h√ºcreler incelendi.", comment: "ƒ∞pucu a√ßƒ±klamasƒ±"))
/Users/necati/Desktop/Sudoku/Sudoku/ViewModel/SudokuViewModel.swift:                  description: NSLocalizedString("Bu h√ºcreye \(value) deƒüeri konabilir.", comment: "ƒ∞pucu a√ßƒ±klamasƒ±"))
/Users/necati/Desktop/Sudoku/Sudoku/ViewModel/SudokuViewModel.swift:                if let stats = jsonObject["stats"] as? [String: Any] {
/Users/necati/Desktop/Sudoku/Sudoku/ViewModel/SudokuViewModel.swift:                let blockKey = "\(r)_\(c)"
/Users/necati/Desktop/Sudoku/Sudoku/ViewModel/SudokuViewModel.swift:                let noAutoSaveKey = "SudokuViewModel.noAutoSave"
/Users/necati/Desktop/Sudoku/Sudoku/ViewModel/SudokuViewModel.swift:                print("‚è≠Ô∏è Arka plana ge√ßi≈üte kaydetme atlandƒ± (yeterli oynama yok)")
/Users/necati/Desktop/Sudoku/Sudoku/ViewModel/SudokuViewModel.swift:                print("‚ö†Ô∏è √á√∂z√ºm verisi bulunamadƒ±, √∂nce orijinal tahtayƒ± kurtarmayƒ± deniyorum")
/Users/necati/Desktop/Sudoku/Sudoku/ViewModel/SudokuViewModel.swift:                print("‚úÖ FixedCells verisi bulundu")
/Users/necati/Desktop/Sudoku/Sudoku/ViewModel/SudokuViewModel.swift:                print("‚ö†Ô∏è ƒ∞statistikler y√ºklenemedi: \(error)")
/Users/necati/Desktop/Sudoku/Sudoku/ViewModel/SudokuViewModel.swift:                print("‚ùå JSON veri bi√ßimi ge√ßersiz")
/Users/necati/Desktop/Sudoku/Sudoku/ViewModel/SudokuViewModel.swift:                print("‚úÖ JSON'dan √ß√∂z√ºm dizisi ba≈üarƒ±yla y√ºklendi")
/Users/necati/Desktop/Sudoku/Sudoku/ViewModel/SudokuViewModel.swift:                print("‚úÖ JSON'dan sabit h√ºcreler ba≈üarƒ±yla y√ºklendi")
/Users/necati/Desktop/Sudoku/Sudoku/ViewModel/SudokuViewModel.swift:                print("‚úÖ JSON'dan solutionBoard ba≈üarƒ±yla y√ºklendi")
/Users/necati/Desktop/Sudoku/Sudoku/ViewModel/SudokuViewModel.swift:                print("‚úÖ Kayƒ±tlƒ± oyun i√ßin tahmini √ß√∂z√ºm olu≈üturuluyor")
/Users/necati/Desktop/Sudoku/Sudoku/ViewModel/SudokuViewModel.swift:                print("‚úÖ OriginalBoard verisi bulundu")
/Users/necati/Desktop/Sudoku/Sudoku/ViewModel/SudokuViewModel.swift:                print("‚è≠Ô∏è Otomatik kaydetme atlandƒ± (oyun √ßok yeni ba≈üladƒ± veya hamle yapƒ±lmadƒ±)")
/Users/necati/Desktop/Sudoku/Sudoku/ViewModel/SudokuViewModel.swift:                print("‚úÖ Oyun ba≈üarƒ±yla g√ºncellendi, ID: \(gameID)")
/Users/necati/Desktop/Sudoku/Sudoku/ViewModel/SudokuViewModel.swift:                print("‚ùå Oyun verileri eksik: Board veya zorluk seviyesi bulunamadƒ±")
/Users/necati/Desktop/Sudoku/Sudoku/ViewModel/SudokuViewModel.swift:                print("‚ö†Ô∏è Sabit h√ºcreler belirtilmemi≈ü, tahmin edilecek")
/Users/necati/Desktop/Sudoku/Sudoku/ViewModel/SudokuViewModel.swift:                print("‚úÖ Sudoku tamamlandƒ±! Skor kaydedilecek.")
/Users/necati/Desktop/Sudoku/Sudoku/ViewModel/SudokuViewModel.swift:                print("‚ÑπÔ∏è userEnteredValues zaten loadBoardFromData fonksiyonundan alƒ±ndƒ± - tekrar y√ºklemeye gerek yok")
/Users/necati/Desktop/Sudoku/Sudoku/ViewModel/SudokuViewModel.swift:                print("‚úÖ Yeni oyun ba≈üarƒ±yla kaydedildi, ID: \(newGameID)")
/Users/necati/Desktop/Sudoku/Sudoku/ViewModel/SudokuViewModel.swift:                print("Mevcut oyun g√ºncelleniyor, ID: \(gameID)")
/Users/necati/Desktop/Sudoku/Sudoku/ViewModel/SudokuViewModel.swift:                print("Yeni oyun kaydediliyor")
/Users/necati/Desktop/Sudoku/Sudoku/ViewModel/SudokuViewModel.swift:                return NSLocalizedString("Bu h√ºcreye sadece tek bir sayƒ± konabilir", comment: "ƒ∞pucu a√ßƒ±klamasƒ±")
/Users/necati/Desktop/Sudoku/Sudoku/ViewModel/SudokuViewModel.swift:                return NSLocalizedString("Bu iki aday, yalnƒ±zca bu iki h√ºcreye konabilir, dolayƒ±sƒ±yla bu h√ºcrelerden diƒüer adaylar √ßƒ±karƒ±labilir", comment: "ƒ∞pucu a√ßƒ±klamasƒ±")
/Users/necati/Desktop/Sudoku/Sudoku/ViewModel/SudokuViewModel.swift:                return NSLocalizedString("Bu iki h√ºcre, aynƒ± iki adayƒ± payla≈üƒ±yor, dolayƒ±sƒ±yla diƒüer h√ºcrelerden bu adaylar √ßƒ±karƒ±labilir", comment: "ƒ∞pucu a√ßƒ±klamasƒ±")
/Users/necati/Desktop/Sudoku/Sudoku/ViewModel/SudokuViewModel.swift:                return NSLocalizedString("Bu sayƒ±, bu b√∂lgede yalnƒ±zca tek bir h√ºcreye konabilir", comment: "ƒ∞pucu a√ßƒ±klamasƒ±")
/Users/necati/Desktop/Sudoku/Sudoku/ViewModel/SudokuViewModel.swift:                return NSLocalizedString("Bu √º√ß aday, yalnƒ±zca bu √º√ß h√ºcreye konabilir", comment: "ƒ∞pucu a√ßƒ±klamasƒ±")
/Users/necati/Desktop/Sudoku/Sudoku/ViewModel/SudokuViewModel.swift:                return NSLocalizedString("Bu √º√ß h√ºcre, √º√ß adayƒ± payla≈üƒ±yor, dolayƒ±sƒ±yla diƒüer h√ºcrelerden bu adaylar √ßƒ±karƒ±labilir", comment: "ƒ∞pucu a√ßƒ±klamasƒ±")
/Users/necati/Desktop/Sudoku/Sudoku/ViewModel/SudokuViewModel.swift:                return NSLocalizedString("Sudoku kurallarƒ±na g√∂re bu h√ºcreye bu deƒüer konabilir", comment: "ƒ∞pucu a√ßƒ±klamasƒ±")
/Users/necati/Desktop/Sudoku/Sudoku/ViewModel/SudokuViewModel.swift:                return NSLocalizedString("Swordfish deseni bulundu. Bu, belirli h√ºcrelerden bazƒ± adaylarƒ±n √ßƒ±karƒ±lmasƒ±na izin verir", comment: "ƒ∞pucu a√ßƒ±klamasƒ±")
/Users/necati/Desktop/Sudoku/Sudoku/ViewModel/SudokuViewModel.swift:                return NSLocalizedString("Tahta √ºzerinde tespit edilebilen bir ipucu yok. Daha karma≈üƒ±k stratejilere ihtiya√ß olabilir.", comment: "ƒ∞pucu bulunamadƒ±")
/Users/necati/Desktop/Sudoku/Sudoku/ViewModel/SudokuViewModel.swift:                return NSLocalizedString("X-Wing deseni bulundu. Bu, belirli h√ºcrelerden bazƒ± adaylarƒ±n √ßƒ±karƒ±lmasƒ±na izin verir", comment: "ƒ∞pucu a√ßƒ±klamasƒ±")
/Users/necati/Desktop/Sudoku/Sudoku/ViewModel/SudokuViewModel.swift:                return NSLocalizedString(reason, comment: "ƒ∞pucu varsayƒ±lan a√ßƒ±klamasƒ±")
/Users/necati/Desktop/Sudoku/Sudoku/ViewModel/SudokuViewModel.swift:                return step == 0 ? technique.rawValue : "Adƒ±m \(step + 1)"
/Users/necati/Desktop/Sudoku/Sudoku/ViewModel/SudokuViewModel.swift:               let gameID = game.value(forKey: "id") as? UUID,
/Users/necati/Desktop/Sudoku/Sudoku/ViewModel/SudokuViewModel.swift:            "difficulty": board.difficulty.rawValue,
/Users/necati/Desktop/Sudoku/Sudoku/ViewModel/SudokuViewModel.swift:            "difficulty": board.difficulty.rawValue,
/Users/necati/Desktop/Sudoku/Sudoku/ViewModel/SudokuViewModel.swift:            "difficulty": board.difficulty.rawValue,
/Users/necati/Desktop/Sudoku/Sudoku/ViewModel/SudokuViewModel.swift:            "errors": errorCount,
/Users/necati/Desktop/Sudoku/Sudoku/ViewModel/SudokuViewModel.swift:            "hints": hintCount
/Users/necati/Desktop/Sudoku/Sudoku/ViewModel/SudokuViewModel.swift:            "moves": moveCount,
/Users/necati/Desktop/Sudoku/Sudoku/ViewModel/SudokuViewModel.swift:            "score": calculatePerformanceScore(),
/Users/necati/Desktop/Sudoku/Sudoku/ViewModel/SudokuViewModel.swift:            "score": calculatePerformanceScore(),
/Users/necati/Desktop/Sudoku/Sudoku/ViewModel/SudokuViewModel.swift:            "time": elapsedTime
/Users/necati/Desktop/Sudoku/Sudoku/ViewModel/SudokuViewModel.swift:            "time": elapsedTime
/Users/necati/Desktop/Sudoku/Sudoku/ViewModel/SudokuViewModel.swift:            "time": Int(elapsedTime),
/Users/necati/Desktop/Sudoku/Sudoku/ViewModel/SudokuViewModel.swift:            } else if let board = jsonDict["board"] as? [[Int]] {
/Users/necati/Desktop/Sudoku/Sudoku/ViewModel/SudokuViewModel.swift:            } else if let boardString = jsonDict["boardState"] as? String,
/Users/necati/Desktop/Sudoku/Sudoku/ViewModel/SudokuViewModel.swift:            } else if let diff = jsonDict["difficultyLevel"] as? String {
/Users/necati/Desktop/Sudoku/Sudoku/ViewModel/SudokuViewModel.swift:            } else if let fixedCells = jsonDict["fixedCells"] as? [[Bool]] {
/Users/necati/Desktop/Sudoku/Sudoku/ViewModel/SudokuViewModel.swift:            } else if let solution = jsonDict["solutionBoard"] as? [[Int]] {
/Users/necati/Desktop/Sudoku/Sudoku/ViewModel/SudokuViewModel.swift:            case "Kolay": difficultyValue5 = .easy
/Users/necati/Desktop/Sudoku/Sudoku/ViewModel/SudokuViewModel.swift:            case "Orta": difficultyValue5 = .medium
/Users/necati/Desktop/Sudoku/Sudoku/ViewModel/SudokuViewModel.swift:            case "Uzman": difficultyValue5 = .expert
/Users/necati/Desktop/Sudoku/Sudoku/ViewModel/SudokuViewModel.swift:            case "Zor": difficultyValue5 = .hard
/Users/necati/Desktop/Sudoku/Sudoku/ViewModel/SudokuViewModel.swift:            if let board = jsonDict["boardState"] as? [[Int]] {
/Users/necati/Desktop/Sudoku/Sudoku/ViewModel/SudokuViewModel.swift:            if let diff = jsonDict["difficulty"] as? String {
/Users/necati/Desktop/Sudoku/Sudoku/ViewModel/SudokuViewModel.swift:            if let fixed = jsonDict["fixedCells"] as? [[Bool]] {
/Users/necati/Desktop/Sudoku/Sudoku/ViewModel/SudokuViewModel.swift:            if let gameDifficulty = game.value(forKey: "difficulty") as? String,
/Users/necati/Desktop/Sudoku/Sudoku/ViewModel/SudokuViewModel.swift:            if let originalBoard = jsonDict["originalBoard"] as? [[Int]] {
/Users/necati/Desktop/Sudoku/Sudoku/ViewModel/SudokuViewModel.swift:            if let solution = jsonDict["solution"] as? [[Int]] {
/Users/necati/Desktop/Sudoku/Sudoku/ViewModel/SudokuViewModel.swift:            let blockFormat = NSLocalizedString("%d. satƒ±r, %d. s√ºtundaki 3x3 blokta", comment: "ƒ∞pucu b√∂lge adƒ±")
/Users/necati/Desktop/Sudoku/Sudoku/ViewModel/SudokuViewModel.swift:            let colFormat = NSLocalizedString("%d. s√ºtunda", comment: "ƒ∞pucu b√∂lge adƒ±")
/Users/necati/Desktop/Sudoku/Sudoku/ViewModel/SudokuViewModel.swift:            let colKey = "\(row)_\(r)"
/Users/necati/Desktop/Sudoku/Sudoku/ViewModel/SudokuViewModel.swift:            let descFormat = NSLocalizedString("%d sayƒ±sƒ±, %d. satƒ±rda sadece bu h√ºcreye konabilir", comment: "ƒ∞pucu a√ßƒ±klamasƒ±")
/Users/necati/Desktop/Sudoku/Sudoku/ViewModel/SudokuViewModel.swift:            let descFormat = NSLocalizedString("%d sayƒ±sƒ±, %d. s√ºtunda sadece bu h√ºcreye konabilir", comment: "ƒ∞pucu a√ßƒ±klamasƒ±")
/Users/necati/Desktop/Sudoku/Sudoku/ViewModel/SudokuViewModel.swift:            let descFormat = NSLocalizedString("%d sayƒ±sƒ±, bu 3x3 blokta sadece bu h√ºcreye konabilir", comment: "ƒ∞pucu a√ßƒ±klamasƒ±")
/Users/necati/Desktop/Sudoku/Sudoku/ViewModel/SudokuViewModel.swift:            let rowFormat = NSLocalizedString("%d. satƒ±rda", comment: "ƒ∞pucu b√∂lge adƒ±")
/Users/necati/Desktop/Sudoku/Sudoku/ViewModel/SudokuViewModel.swift:            let rowKey = "\(r)_\(col)"
/Users/necati/Desktop/Sudoku/Sudoku/ViewModel/SudokuViewModel.swift:            let userEntered = jsonDict["userEnteredValues"] as? [[Bool]] ?? Array(repeating: Array(repeating: false, count: 9), count: 9)
/Users/necati/Desktop/Sudoku/Sudoku/ViewModel/SudokuViewModel.swift:            print("üÜï ƒ∞lk √ßalƒ±≈ütƒ±rma, otomatik kaydetme devre dƒ±≈üƒ±")
/Users/necati/Desktop/Sudoku/Sudoku/ViewModel/SudokuViewModel.swift:            print("‚ö†Ô∏è ƒ∞statistikleri y√ºklerken hata: \(error)")
/Users/necati/Desktop/Sudoku/Sudoku/ViewModel/SudokuViewModel.swift:            print("‚ùå JSON i≈üleme hatasƒ±: \(error)")
/Users/necati/Desktop/Sudoku/Sudoku/ViewModel/SudokuViewModel.swift:            print("‚ùå JSON olu≈üturma veya kaydetme hatasƒ±: \(error)")
/Users/necati/Desktop/Sudoku/Sudoku/ViewModel/SudokuViewModel.swift:            print("‚ùå JSON olu≈üturulamadƒ±: \(error)")
/Users/necati/Desktop/Sudoku/Sudoku/ViewModel/SudokuViewModel.swift:            print("‚úÖ Kaydedilmi≈ü verilerden board ve userEnteredValues ba≈üarƒ±yla olu≈üturuldu")
/Users/necati/Desktop/Sudoku/Sudoku/ViewModel/SudokuViewModel.swift:            print("üíæ Otomatik kaydetme ba≈üladƒ±...")
/Users/necati/Desktop/Sudoku/Sudoku/ViewModel/SudokuViewModel.swift:            print("‚è≠Ô∏è Otomatik kaydetme devre dƒ±≈üƒ±, i≈ülem atlanƒ±yor")
/Users/necati/Desktop/Sudoku/Sudoku/ViewModel/SudokuViewModel.swift:            print("‚úÖ Otomatik kaydetme tamamlandƒ±.")
/Users/necati/Desktop/Sudoku/Sudoku/ViewModel/SudokuViewModel.swift:            print("‚ÑπÔ∏è Oyun \(gameState) durumunda olduƒüu i√ßin otomatik kaydedilmedi.")
/Users/necati/Desktop/Sudoku/Sudoku/ViewModel/SudokuViewModel.swift:            print("üîä Oyun otomatik olarak duraklatƒ±ldƒ± (arka plan)")
/Users/necati/Desktop/Sudoku/Sudoku/ViewModel/SudokuViewModel.swift:            print("‚ùå Oyun tahta verisi y√ºklenemedi")
/Users/necati/Desktop/Sudoku/Sudoku/ViewModel/SudokuViewModel.swift:            print("‚ùå Oyun verisi bulunamadƒ±")
/Users/necati/Desktop/Sudoku/Sudoku/ViewModel/SudokuViewModel.swift:            print("‚ö†Ô∏è Oyun zaten tamamlanmƒ±≈ü veya farklƒ± bir durumda, i≈ülem yapƒ±lmadƒ±.")
/Users/necati/Desktop/Sudoku/Sudoku/ViewModel/SudokuViewModel.swift:            print("‚úÖ Sabit h√ºcreler: \(fixed.flatMap { $0.filter { $0 } }.count) adet")
/Users/necati/Desktop/Sudoku/Sudoku/ViewModel/SudokuViewModel.swift:            print("üóëÔ∏è S√ºre a≈üƒ±mƒ± nedeniyle mevcut oyun siliniyor, ID: \(gameID)")
/Users/necati/Desktop/Sudoku/Sudoku/ViewModel/SudokuViewModel.swift:            print("‚úÖ Tamamlanan oyun kayƒ±tlardan silindi")
/Users/necati/Desktop/Sudoku/Sudoku/ViewModel/SudokuViewModel.swift:            print("‚ö†Ô∏è Tekrarlanan bildirim engellendi (son bildirimden \(String(format: "%.2f", currentTime - SudokuViewModel.lastActiveNotificationTime)) saniye ge√ßti)")
/Users/necati/Desktop/Sudoku/Sudoku/ViewModel/SudokuViewModel.swift:            print("‚ö†Ô∏è userEnteredValues bo≈ü, tahta √ºzerinden hesaplanƒ±yor")
/Users/necati/Desktop/Sudoku/Sudoku/ViewModel/SudokuViewModel.swift:            print("‚úÖ Y√ºklenen tahta: \(boardValues.flatMap { $0.compactMap { $0 } }.count) dolu h√ºcre")
/Users/necati/Desktop/Sudoku/Sudoku/ViewModel/SudokuViewModel.swift:            print("‚úÖ Zorluk seviyesi: \(difficulty)")
/Users/necati/Desktop/Sudoku/Sudoku/ViewModel/SudokuViewModel.swift:            print("H√ºcre se√ßili deƒüil!")
/Users/necati/Desktop/Sudoku/Sudoku/ViewModel/SudokuViewModel.swift:            print("H√ºcre zaten doƒüru deƒüere sahip: \(currentValue!)")
/Users/necati/Desktop/Sudoku/Sudoku/ViewModel/SudokuViewModel.swift:            print("JSON veri boyutu: \(jsonData.count) byte")
/Users/necati/Desktop/Sudoku/Sudoku/ViewModel/SudokuViewModel.swift:            print("Kaydedilmi≈ü oyun i√ßin yeni ID olu≈üturuldu: \(self.currentGameID!)")
/Users/necati/Desktop/Sudoku/Sudoku/ViewModel/SudokuViewModel.swift:            print("Kaydedilmi≈ü oyun ID'si (string'den) ayarlandƒ±: \(gameID)")
/Users/necati/Desktop/Sudoku/Sudoku/ViewModel/SudokuViewModel.swift:            print("Kaydedilmi≈ü oyun ID'si ayarlandƒ±: \(gameID)")
/Users/necati/Desktop/Sudoku/Sudoku/ViewModel/SudokuViewModel.swift:            print("Kaydetme i≈ülemi tamamlandƒ±")
/Users/necati/Desktop/Sudoku/Sudoku/ViewModel/SudokuViewModel.swift:            print("Oyun tamamlandƒ±ƒüƒ± veya ba≈üarƒ±sƒ±z olduƒüu i√ßin kaydedilmiyor")
/Users/necati/Desktop/Sudoku/Sudoku/ViewModel/SudokuViewModel.swift:            print("Sabit h√ºcre deƒüi≈ütirilemez: (\(row), \(col))")
/Users/necati/Desktop/Sudoku/Sudoku/ViewModel/SudokuViewModel.swift:            reasons.append("\(col+1). s√ºtunda ba≈üka \(value) olmadƒ±ƒüƒ± i√ßin")
/Users/necati/Desktop/Sudoku/Sudoku/ViewModel/SudokuViewModel.swift:            reasons.append("\(row+1). satƒ±rda ba≈üka \(value) olmadƒ±ƒüƒ± i√ßin")
/Users/necati/Desktop/Sudoku/Sudoku/ViewModel/SudokuViewModel.swift:            reasons.append("Bu 3x3 blokta ba≈üka \(value) olmadƒ±ƒüƒ± i√ßin")
/Users/necati/Desktop/Sudoku/Sudoku/ViewModel/SudokuViewModel.swift:            return "Sudoku kurallarƒ±na g√∂re bu h√ºcreye \(value) gelmelidir."
/Users/necati/Desktop/Sudoku/Sudoku/ViewModel/SudokuViewModel.swift:            return NSLocalizedString(stepDescriptions[step], comment: "ƒ∞pucu adƒ±m a√ßƒ±klamasƒ±")
/Users/necati/Desktop/Sudoku/Sudoku/ViewModel/SudokuViewModel.swift:        } else if let gameIDString = savedGame.value(forKey: "id") as? String, 
/Users/necati/Desktop/Sudoku/Sudoku/ViewModel/SudokuViewModel.swift:        case general = "Son Kalan H√ºcre"
/Users/necati/Desktop/Sudoku/Sudoku/ViewModel/SudokuViewModel.swift:        case hiddenPair = "Hidden Pair"
/Users/necati/Desktop/Sudoku/Sudoku/ViewModel/SudokuViewModel.swift:        case hiddenSingle = "Tek Konum Tespiti"
/Users/necati/Desktop/Sudoku/Sudoku/ViewModel/SudokuViewModel.swift:        case hiddenTriple = "Hidden Triple"
/Users/necati/Desktop/Sudoku/Sudoku/ViewModel/SudokuViewModel.swift:        case nakedPair = "Naked Pair"
/Users/necati/Desktop/Sudoku/Sudoku/ViewModel/SudokuViewModel.swift:        case nakedSingle = "Tek Olasƒ±lƒ±k Tespiti"
/Users/necati/Desktop/Sudoku/Sudoku/ViewModel/SudokuViewModel.swift:        case nakedTriple = "Naked Triple"
/Users/necati/Desktop/Sudoku/Sudoku/ViewModel/SudokuViewModel.swift:        case none = "Tespit Edilebilen ƒ∞pucu Yok"
/Users/necati/Desktop/Sudoku/Sudoku/ViewModel/SudokuViewModel.swift:        case swordfish = "Swordfish"
/Users/necati/Desktop/Sudoku/Sudoku/ViewModel/SudokuViewModel.swift:        case xWing = "X-Wing"
/Users/necati/Desktop/Sudoku/Sudoku/ViewModel/SudokuViewModel.swift:        guard let boardData = savedGame.getData(key: "boardState") else {
/Users/necati/Desktop/Sudoku/Sudoku/ViewModel/SudokuViewModel.swift:        guard let boardData = savedGame.value(forKey: "boardState") as? Data else {
/Users/necati/Desktop/Sudoku/Sudoku/ViewModel/SudokuViewModel.swift:        hint.addStep(title: NSLocalizedString("B√∂lge ƒ∞ncelemesi", comment: "ƒ∞pucu ba≈ülƒ±ƒüƒ±"), 
/Users/necati/Desktop/Sudoku/Sudoku/ViewModel/SudokuViewModel.swift:        hint.addStep(title: NSLocalizedString("Bo≈ü H√ºcre Analizi", comment: "ƒ∞pucu ba≈ülƒ±ƒüƒ±"), 
/Users/necati/Desktop/Sudoku/Sudoku/ViewModel/SudokuViewModel.swift:        hint.addStep(title: NSLocalizedString("Deƒüer √ñnerisi", comment: "ƒ∞pucu ba≈ülƒ±ƒüƒ±"), 
/Users/necati/Desktop/Sudoku/Sudoku/ViewModel/SudokuViewModel.swift:        hint.addStep(title: NSLocalizedString("Satƒ±r, S√ºtun ve Blok ƒ∞nceleme", comment: "ƒ∞pucu ba≈ülƒ±ƒüƒ±"), 
/Users/necati/Desktop/Sudoku/Sudoku/ViewModel/SudokuViewModel.swift:        hint.addStep(title: NSLocalizedString("Tek Konum Tespiti", comment: "ƒ∞pucu ba≈ülƒ±ƒüƒ±"), 
/Users/necati/Desktop/Sudoku/Sudoku/ViewModel/SudokuViewModel.swift:        hint.addStep(title: NSLocalizedString("Tek Olasƒ±lƒ±k Tespiti", comment: "ƒ∞pucu ba≈ülƒ±ƒüƒ±"), 
/Users/necati/Desktop/Sudoku/Sudoku/ViewModel/SudokuViewModel.swift:        if let boardData = savedGame.value(forKey: "boardState") as? Data {
/Users/necati/Desktop/Sudoku/Sudoku/ViewModel/SudokuViewModel.swift:        if let gameID = savedGame.value(forKey: "id") as? UUID {
/Users/necati/Desktop/Sudoku/Sudoku/ViewModel/SudokuViewModel.swift:        jsonDict["board"] = boardArray
/Users/necati/Desktop/Sudoku/Sudoku/ViewModel/SudokuViewModel.swift:        jsonDict["board"] = boardArray
/Users/necati/Desktop/Sudoku/Sudoku/ViewModel/SudokuViewModel.swift:        jsonDict["difficulty"] = currentBoard.difficulty.rawValue
/Users/necati/Desktop/Sudoku/Sudoku/ViewModel/SudokuViewModel.swift:        jsonDict["difficulty"] = currentBoard.difficulty.rawValue
/Users/necati/Desktop/Sudoku/Sudoku/ViewModel/SudokuViewModel.swift:        jsonDict["fixedCells"] = fixedCells
/Users/necati/Desktop/Sudoku/Sudoku/ViewModel/SudokuViewModel.swift:        jsonDict["fixedCells"] = fixedCells
/Users/necati/Desktop/Sudoku/Sudoku/ViewModel/SudokuViewModel.swift:        jsonDict["solution"] = solutionArray
/Users/necati/Desktop/Sudoku/Sudoku/ViewModel/SudokuViewModel.swift:        jsonDict["solution"] = solutionArray
/Users/necati/Desktop/Sudoku/Sudoku/ViewModel/SudokuViewModel.swift:        jsonDict["stats"] = stats
/Users/necati/Desktop/Sudoku/Sudoku/ViewModel/SudokuViewModel.swift:        jsonDict["stats"] = stats
/Users/necati/Desktop/Sudoku/Sudoku/ViewModel/SudokuViewModel.swift:        jsonDict["userEnteredValues"] = cleanUserEnteredValues
/Users/necati/Desktop/Sudoku/Sudoku/ViewModel/SudokuViewModel.swift:        jsonDict["userEnteredValues"] = userEnteredValues
/Users/necati/Desktop/Sudoku/Sudoku/ViewModel/SudokuViewModel.swift:        let appBecameActiveName = Notification.Name("AppBecameActive")
/Users/necati/Desktop/Sudoku/Sudoku/ViewModel/SudokuViewModel.swift:        let difficultyString = savedGame.value(forKey: "difficulty") as? String ?? "Kolay"
/Users/necati/Desktop/Sudoku/Sudoku/ViewModel/SudokuViewModel.swift:        let formatString = NSLocalizedString("Bu h√ºcreye sadece %d deƒüeri konabilir √ß√ºnk√º diƒüer t√ºm sayƒ±lar elendi.", comment: "ƒ∞pucu a√ßƒ±klamasƒ±")
/Users/necati/Desktop/Sudoku/Sudoku/ViewModel/SudokuViewModel.swift:        let hint = HintData(row: 0, column: 0, value: 0, reason: NSLocalizedString("Tahta √ºzerinde tespit edilebilen bir ipucu yok. Daha karma≈üƒ±k stratejilere ihtiya√ß olabilir.", comment: "ƒ∞pucu bulunamadƒ±"), technique: .none)
/Users/necati/Desktop/Sudoku/Sudoku/ViewModel/SudokuViewModel.swift:        let isFirstLaunchKey = "SudokuViewModel.isFirstLaunch"
/Users/necati/Desktop/Sudoku/Sudoku/ViewModel/SudokuViewModel.swift:        let key = "\(row)_\(col)"
/Users/necati/Desktop/Sudoku/Sudoku/ViewModel/SudokuViewModel.swift:        let key = "\(row)_\(col)"
/Users/necati/Desktop/Sudoku/Sudoku/ViewModel/SudokuViewModel.swift:        let key = "\(row)_\(col)"
/Users/necati/Desktop/Sudoku/Sudoku/ViewModel/SudokuViewModel.swift:        let key = "\(row)_\(col)"
/Users/necati/Desktop/Sudoku/Sudoku/ViewModel/SudokuViewModel.swift:        let noAutoSaveKey = "SudokuViewModel.noAutoSave"
/Users/necati/Desktop/Sudoku/Sudoku/ViewModel/SudokuViewModel.swift:        let noAutoSaveKey = "SudokuViewModel.noAutoSave"
/Users/necati/Desktop/Sudoku/Sudoku/ViewModel/SudokuViewModel.swift:        let noAutoSaveKey = "SudokuViewModel.noAutoSave"
/Users/necati/Desktop/Sudoku/Sudoku/ViewModel/SudokuViewModel.swift:        let noAutoSaveKey = "SudokuViewModel.noAutoSave"
/Users/necati/Desktop/Sudoku/Sudoku/ViewModel/SudokuViewModel.swift:        let noAutoSaveKey = "SudokuViewModel.noAutoSave"
/Users/necati/Desktop/Sudoku/Sudoku/ViewModel/SudokuViewModel.swift:        let pauseGameName = Notification.Name("PauseActiveGame")
/Users/necati/Desktop/Sudoku/Sudoku/ViewModel/SudokuViewModel.swift:        let reason = NSLocalizedString("Sudoku kurallarƒ±na g√∂re bu h√ºcreye \(value) deƒüeri konabilir.", comment: "ƒ∞pucu a√ßƒ±klamasƒ±")
/Users/necati/Desktop/Sudoku/Sudoku/ViewModel/SudokuViewModel.swift:        let reasonFormat = NSLocalizedString("%@ %d sayƒ±sƒ± sadece bu h√ºcreye konabilir.", comment: "ƒ∞pucu ana a√ßƒ±klamasƒ±")
/Users/necati/Desktop/Sudoku/Sudoku/ViewModel/SudokuViewModel.swift:        let resetGameName = Notification.Name("ResetGameAfterTimeout")
/Users/necati/Desktop/Sudoku/Sudoku/ViewModel/SudokuViewModel.swift:        let stepFormat = NSLocalizedString("%@ t√ºm h√ºcreler incelendi.", comment: "ƒ∞pucu a√ßƒ±klamasƒ±")
/Users/necati/Desktop/Sudoku/Sudoku/ViewModel/SudokuViewModel.swift:        let stepFormatString = NSLocalizedString("Bu h√ºcreye sadece %d deƒüeri konabilir, diƒüer t√ºm sayƒ±lar elendi.", comment: "ƒ∞pucu a√ßƒ±klamasƒ±")
/Users/necati/Desktop/Sudoku/Sudoku/ViewModel/SudokuViewModel.swift:        NotificationCenter.default.post(name: Notification.Name("ShowMainMenuAfterTimeout"), object: nil)
/Users/necati/Desktop/Sudoku/Sudoku/ViewModel/SudokuViewModel.swift:        NotificationCenter.default.post(name: NSNotification.Name("GameCompleted"), object: nil, userInfo: [
/Users/necati/Desktop/Sudoku/Sudoku/ViewModel/SudokuViewModel.swift:        NotificationCenter.default.post(name: NSNotification.Name("GameCompleted"), object: nil, userInfo: [
/Users/necati/Desktop/Sudoku/Sudoku/ViewModel/SudokuViewModel.swift:        NotificationCenter.default.removeObserver(self, name: Notification.Name("AppBecameActive"), object: nil)
/Users/necati/Desktop/Sudoku/Sudoku/ViewModel/SudokuViewModel.swift:        NotificationCenter.default.removeObserver(self, name: Notification.Name("PauseActiveGame"), object: nil)
/Users/necati/Desktop/Sudoku/Sudoku/ViewModel/SudokuViewModel.swift:        NotificationCenter.default.removeObserver(self, name: Notification.Name("ResetGameAfterTimeout"), object: nil)
/Users/necati/Desktop/Sudoku/Sudoku/ViewModel/SudokuViewModel.swift:        print("üîÑ Kayƒ±tlƒ± oyun y√ºkleniyor, otomatik kaydetme etkinle≈ütirildi")
/Users/necati/Desktop/Sudoku/Sudoku/ViewModel/SudokuViewModel.swift:        print("‚úÖ Kullanƒ±cƒ± tarafƒ±ndan girilen deƒüerler y√ºklendi: \(self.userEnteredValues.flatMap { $0.filter { $0 } }.count) deƒüer")
/Users/necati/Desktop/Sudoku/Sudoku/ViewModel/SudokuViewModel.swift:        print("üîí Otomatik kaydetme devre dƒ±≈üƒ± bƒ±rakƒ±ldƒ±")
/Users/necati/Desktop/Sudoku/Sudoku/ViewModel/SudokuViewModel.swift:        print("üéÆ Oyun ba≈üarƒ±yla tamamlandƒ±! ƒ∞statistikler: Hamle: \(moveCount), Hata: \(errorCount), ƒ∞pucu: \(3 - remainingHints), S√ºre: \(Int(elapsedTime)) saniye")
/Users/necati/Desktop/Sudoku/Sudoku/ViewModel/SudokuViewModel.swift:        print("‚úÖ Oyun ba≈üarƒ±yla y√ºklendi, ID: \(currentGameID?.uuidString ?? "ID yok")")
/Users/necati/Desktop/Sudoku/Sudoku/ViewModel/SudokuViewModel.swift:        print("‚úÖ Oyun tamamlama i≈ülemi tamamlandƒ± ve skor kaydedildi.")
/Users/necati/Desktop/Sudoku/Sudoku/ViewModel/SudokuViewModel.swift:        print("‚úÖ Oyun tamamlama i≈ülemi tamamlandƒ± ve skor kaydedildi.")
/Users/necati/Desktop/Sudoku/Sudoku/ViewModel/SudokuViewModel.swift:        print("üì± Oyun tamamlandƒ±!")
/Users/necati/Desktop/Sudoku/Sudoku/ViewModel/SudokuViewModel.swift:        print("‚è∞ Oyun zaman a≈üƒ±mƒ±na uƒüradƒ± - sƒ±fƒ±rlanƒ±yor")
/Users/necati/Desktop/Sudoku/Sudoku/ViewModel/SudokuViewModel.swift:        print("üìä Skor kaydediliyor... Zorluk: \(board.difficulty.rawValue), S√ºre: \(elapsedTime), Hatalar: \(errorCount), ƒ∞pu√ßlarƒ±: \(hintUsed)")
/Users/necati/Desktop/Sudoku/Sudoku/ViewModel/SudokuViewModel.swift:        print("üìä Skor kaydediliyor... Zorluk: \(board.difficulty.rawValue), S√ºre: \(elapsedTime), Hatalar: \(errorCount), ƒ∞pu√ßlarƒ±: \(hintUsed)")
/Users/necati/Desktop/Sudoku/Sudoku/ViewModel/SudokuViewModel.swift:        print("üîä Uygulama tekrar aktif oldu - oyun devam ediyor")
/Users/necati/Desktop/Sudoku/Sudoku/ViewModel/SudokuViewModel.swift:        print("üîÑ Yeni oyun ba≈ülatƒ±ldƒ±, otomatik kaydetme etkinle≈ütirildi")
/Users/necati/Desktop/Sudoku/Sudoku/ViewModel/SudokuViewModel.swift:        print("\n\nüíª KAYDEDILMI≈û OYUN Y√úKLEME BA≈ûLADI üíª")
/Users/necati/Desktop/Sudoku/Sudoku/ViewModel/SudokuViewModel.swift:        print("Deƒüer giriliyor: \(value ?? 0) -> (\(row), \(col))")
/Users/necati/Desktop/Sudoku/Sudoku/ViewModel/SudokuViewModel.swift:        print("H√ºcre se√ßildi: (\(row), \(column))")
/Users/necati/Desktop/Sudoku/Sudoku/ViewModel/SudokuViewModel.swift:        print("Kayƒ±tlƒ± oyun y√ºkleniyor, zorluk seviyesi: \(difficultyString)")
/Users/necati/Desktop/Sudoku/Sudoku/ViewModel/SudokuViewModel.swift:        print("Kayƒ±tlƒ± oyun y√ºkleniyor: \(savedGame)")
/Users/necati/Desktop/Sudoku/Sudoku/ViewModel/SudokuViewModel.swift:        print("Not eklendi/√ßƒ±karƒ±ldƒ±: \(value) -> (\(row), \(col)), notlar: \(board.getPencilMarks(at: row, col: col))")
/Users/necati/Desktop/Sudoku/Sudoku/ViewModel/SudokuViewModel.swift:        print("saveGame fonksiyonu √ßalƒ±≈ütƒ±")
/Users/necati/Desktop/Sudoku/Sudoku/ViewModel/SudokuViewModel.swift:        print("setValue sonucu: \(success)")
/Users/necati/Desktop/Sudoku/Sudoku/ViewModel/SudokuViewModel.swift:        print("setValueAtSelectedCell: \(value ?? 0) -> (\(row), \(col)), pencilMode: \(pencilMode)")
/Users/necati/Desktop/Sudoku/Sudoku/ViewModel/SudokuViewModel.swift:        print("T√ºm notlar temizlendi: (\(row), \(col))")
/Users/necati/Desktop/Sudoku/Sudoku/ViewModel/SudokuViewModel.swift:        print("Veri boyutu: \(data.count) byte")
/Users/necati/Desktop/Sudoku/Sudoku/ViewModel/SudokuViewModel.swift:        return highScore.getDate(key: "date")
/Users/necati/Desktop/Sudoku/Sudoku/ViewModel/SudokuViewModel.swift:        return highScore.getString(key: "playerName", defaultValue: "ƒ∞simsiz")
/Users/necati/Desktop/Sudoku/Sudoku/ViewModel/SudokuViewModel.swift:        return reasons.joined(separator: ", ")
/Users/necati/Desktop/Sudoku/Sudoku/ViewModel/SudokuViewModel.swift:        return savedGame.getDate(key: "dateCreated")
/Users/necati/Desktop/Sudoku/Sudoku/ViewModel/SudokuViewModel.swift:        return savedGame.getDouble(key: "elapsedTime")
/Users/necati/Desktop/Sudoku/Sudoku/ViewModel/SudokuViewModel.swift:        return savedGame.getString(key: "difficulty", defaultValue: "Kolay")
/Users/necati/Desktop/Sudoku/Sudoku/ViewModel/SudokuViewModel.swift:        return value(forKey: "date") as? Date ?? Date()
/Users/necati/Desktop/Sudoku/Sudoku/ViewModel/SudokuViewModel.swift:        return value(forKey: "difficulty") as? String ?? "Kolay"
/Users/necati/Desktop/Sudoku/Sudoku/ViewModel/SudokuViewModel.swift:        return value(forKey: "elapsedTime") as? Double ?? 0.0
/Users/necati/Desktop/Sudoku/Sudoku/ViewModel/SudokuViewModel.swift:        self.elapsedTime = savedGame.getDouble(key: "elapsedTime")
/Users/necati/Desktop/Sudoku/Sudoku/ViewModel/SudokuViewModel.swift:        stats["errorCount"] = errorCount
/Users/necati/Desktop/Sudoku/Sudoku/ViewModel/SudokuViewModel.swift:        stats["errorCount"] = errorCount
/Users/necati/Desktop/Sudoku/Sudoku/ViewModel/SudokuViewModel.swift:        stats["hintCount"] = hintCount
/Users/necati/Desktop/Sudoku/Sudoku/ViewModel/SudokuViewModel.swift:        stats["hintCount"] = hintCount
/Users/necati/Desktop/Sudoku/Sudoku/ViewModel/SudokuViewModel.swift:        stats["moveCount"] = moveCount
/Users/necati/Desktop/Sudoku/Sudoku/ViewModel/SudokuViewModel.swift:        stats["moveCount"] = moveCount
/Users/necati/Desktop/Sudoku/Sudoku/ViewModel/SudokuViewModel.swift:        stats["remainingHints"] = remainingHints
/Users/necati/Desktop/Sudoku/Sudoku/ViewModel/SudokuViewModel.swift:        stats["remainingHints"] = remainingHints
/Users/necati/Desktop/Sudoku/Sudoku/ViewModel/SudokuViewModel.swift:        var description = ""
/Users/necati/Desktop/Sudoku/Sudoku/ViewModel/SudokuViewModel.swift:        var reasons: [String] = ["Sudoku kurallarƒ±na g√∂re bu h√ºcreye \(value) deƒüeri en uygun deƒüerdir."]
/Users/necati/Desktop/Sudoku/Sudoku/ViewModel/SudokuViewModel.swift:        var regionName = ""
/Users/necati/Desktop/Sudoku/Sudoku/ViewModel/SudokuViewModel.swift:    @AppStorage("enableCellTapHaptic") private var enableCellTapHaptic = true
/Users/necati/Desktop/Sudoku/Sudoku/ViewModel/SudokuViewModel.swift:    @AppStorage("enableHapticFeedback") private var enableHapticFeedback = true
/Users/necati/Desktop/Sudoku/Sudoku/ViewModel/SudokuViewModel.swift:    @AppStorage("enableNumberInputHaptic") private var enableNumberInputHaptic = true
/Users/necati/Desktop/Sudoku/Sudoku/ViewModel/SudokuViewModel.swift:    @AppStorage("enableSounds") private var enableSounds = true
/Users/necati/Desktop/Sudoku/Sudoku/ViewModel/SudokuViewModel.swift:    @AppStorage("playerName") private var playerName = "Oyuncu"
